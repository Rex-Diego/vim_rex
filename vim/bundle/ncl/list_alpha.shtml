<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
	<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head
<meta name="description" content="Alphabetical listing of NCL functions">
<title>Alphabetical listing of NCL Functions</title>
</head
<body>
	
	<!-- main navigation include -->
		<!-- NCL CSS -->
	<link rel="stylesheet" href="../../styles/ncl.css" type="text/css" media="all">
	
	
		<!-- Equal Height Columns -->
		<script type="text/javascript" src="../../scripts/column_height_equal.js"></script>
		
		<!-- DOJO Expandable Tree Nav -->

		<script type="text/javascript" src="../../scripts/dojo/dojo.js"></script>
		<script type="text/javascript">
		
		dojo.require("dojo.widget.TreeV3");
		dojo.require("dojo.widget.TreeNodeV3");
		dojo.require("dojo.widget.TreeLinkExtension");
		dojo.require("dojo.widget.TreeBasicControllerV3");
		dojo.hostenv.writeIncludes();

		</script>
		

		<div id="top_colorbar"><!-- begin top_colorbar -->
		</div><!-- end top_colorbar -->


	<div id="nav_org_wrap"><!-- begin nav_org_wrap -->
	<div id="nav_org"><!-- begin nav_org -->

		<ul class="menubar">


			<li><a class="trigger" href="https://www.ncl.ucar.edu/internal/">&nbsp;</a>
			</li>

			<li><a class="trigger" href="http://www.ncar.ucar.edu">NCAR</a>
			</li>

			<li><a class="trigger" href="http://www.cisl.ucar.edu">CISL</a>
			</li>
			
			<li><a class="trigger" href="http://www.vets.ucar.edu">VETS</a>
			</li>
		</ul>

	</div><!-- end nav_org -->

	<div id="search"><!-- begin search -->

		<ul class="menubar">

			<li><a class="trigger" href="https://www.ncl.ucar.edu/Download/">Download</a>
			</li>


			<li><a class="trigger" href="../../contributors.shtml">Contributors</a>
			</li>

		</ul>

	</div><!-- end search -->

	</div><!-- end nav_org_wrap -->
	
	
	

		<div id="nav_main_wrap"><!-- begin nav_main_wrap -->

		<div id="nav_main"><!-- begin nav_main -->
			<ul id="menubar_main">

				<li>
				<a href="../../index.html" class="triggeron">NCL</a>
					<ul>
					  <li><a href="../../overview.shtml" class="subitem">Overview</a></li>
						<li><a href="../../get_started.shtml" class="subitem">Getting Started</a> </li>
						<li><a href="../../gallery.shtml" class="subitem">Gallery</a></li>
						<li><a href="https://www.ncl.ucar.edu/Download/" class="subitem">Download</a></li>
						<li><a href="../../current_release.shtml" class="subitem">What's New</a></li>
						<li><a href="../index.html" class="subitem">Documentation</a></li>						
						<li><a href="../../citation.shtml" class="subitem">How to cite NCL</a></li>
					</ul>

				</li>

				<li>
				<a href="https://www.ncl.ucar.edu/Applications/" class="trigger">Examples</a>
					<ul>
						<li><a href="https://www.ncl.ucar.edu/Applications/" class="subitem" title="Examples">All Examples</a></li>
						<li><a href="https://www.ncl.ucar.edu/Applications/Templates/" class="subitem">Templates</a></li>
						<li><a href="https://www.ncl.ucar.edu/Applications/list_io.shtml" class="subitem">File I/O</a></li>
						<li><a href="https://www.ncl.ucar.edu/Applications/list_data.shtml" class="subitem">Datasets</a></li>
						<li><a href="https://www.ncl.ucar.edu/Applications/list_maps.shtml" class="subitem">Maps</a></li>
						<li><a href="https://www.ncl.ucar.edu/Applications/list_models.shtml" class="subitem">Models</a></li>
						<li><a href="https://www.ncl.ucar.edu/Applications/list_dataP.shtml" class="subitem">Data Analysis</a></li>
						<li><a href="https://www.ncl.ucar.edu/Applications/list_ptypes.shtml" class="subitem">Plot Types</a></li>
						<li><a href="https://www.ncl.ucar.edu/Applications/list_tech.shtml" class="subitem">Plot Techniques</a></li>
						<li><a href="https://www.ncl.ucar.edu/Applications/list_special.shtml" class="subitem">Special Plots</a></li>
						<li><a href="https://www.ncl.ucar.edu/Applications/list_grids.shtml" class="subitem">Non-uniform Grids</a></li>
						<li><a href="https://www.ncl.ucar.edu/Applications/list_misc.shtml" class="subitem">Miscellaneous</a></li>
					</ul>
				</li>

				<li>
				<a href="list_alpha.shtml" class="trigger">Functions</a>
					<ul>
						<li><a href="list_alpha.shtml" class="subitem">Alphabetical Listing</a></li>
						<li><a href="index.html" class="subitem">Category Listing</a></li>
						<li><a href="list_type.shtml" class="subitem">Function-Type Listing</a></li>						
					</ul>
				</li>
				
				<li>
				<a href="../Graphics/Resources/index.html" class="trigger">Resources</a>
					<ul>
					  <li><a href="../Graphics/Resources/list_alpha_res.shtml" class="subitem">Complete Listing</a></li>
					
						<li><a href="../Graphics/Resources/am.shtml" class="subitem">am (annotation manager)</a></li>
						<li><a href="../Graphics/Resources/app.shtml" class="subitem">app (app)</a></li>
						<li><a href="../Graphics/Resources/ca.shtml" class="subitem">ca (coordinate array)</a></li>
						<li><a href="../Graphics/Resources/cn.shtml" class="subitem">cn (contour)</a></li>
						<li><a href="../Graphics/Resources/ct.shtml" class="subitem">ct (coordinate array table)</a></li>
						<li><a href="../Graphics/Resources/dc.shtml" class="subitem">dc (data comm)</a></li>
						
						<li><a href="../Graphics/Resources/err.shtml" class="subitem">err (error)</a></li>
						<li><a href="../Graphics/Resources/gs.shtml" class="subitem">gs (graphics styles)</a></li>
						<li><a href="../Graphics/Resources/gsn.shtml" class="subitem">gsn (gsn high-level interfaces)</a></li>
						<li><a href="../Graphics/Resources/lb.shtml" class="subitem">lb (label bar)</a></li>
						<li><a href="../Graphics/Resources/lg.shtml" class="subitem">lg (legends)</a></li>
						<li><a href="../Graphics/Resources/mp.shtml" class="subitem">mp (maps)</a></li>
						
						<li><a href="../Graphics/Resources/pm.shtml" class="subitem">pm (plot manager)</a></li>
						<li><a href="../Graphics/Resources/pr.shtml" class="subitem">pr (primitives)</a></li>
						<li><a href="../Graphics/Resources/sf.shtml" class="subitem">sf (scalar field)</a></li>
						<li><a href="../Graphics/Resources/st.shtml" class="subitem">st (streamline)</a></li>
						<li><a href="../Graphics/Resources/tf.shtml" class="subitem">tf (transform)</a></li>
						<li><a href="../Graphics/Resources/ti.shtml" class="subitem">ti (title)</a></li>
						
						<li><a href="../Graphics/Resources/tm.shtml" class="subitem">tm (tickmark)</a></li>
						<li><a href="../Graphics/Resources/tr.shtml" class="subitem">tr (transformation)</a></li>
						<li><a href="../Graphics/Resources/tx.shtml" class="subitem">tx (text)</a></li>
						<li><a href="../Graphics/Resources/vc.shtml" class="subitem">vc (vectors)</a></li>
						<li><a href="../Graphics/Resources/vf.shtml" class="subitem">vf (vector field)</a></li>
						<li><a href="../Graphics/Resources/vp.shtml" class="subitem">vp (view port)</a></li>
						
						<li><a href="../Graphics/Resources/wk.shtml" class="subitem">wk (workstation)</a></li>
						<li><a href="../Graphics/Resources/ws.shtml" class="subitem">ws (workspace)</a></li>
						<li><a href="../Graphics/Resources/xy.shtml" class="subitem">xy (xy plots)</a></li>						
					</ul>
        </li>

				<li>
				<a href="../../links.shtml" class="trigger">Popular Links</a>
					<ul>
					<li><a href="../Graphics/hlures.shtml" class="subitem">.hluresfile</a></li>
					<li><a href="../Graphics/color_table_gallery.shtml" class="subitem">Color Tables</a></li>
					<li><a href="../Graphics/font_tables.shtml" class="subitem">Font Tables</a></li>	
					<li><a href="../Language/error_messages.shtml" class="subitem">Error Messages</a></li>	
					<li><a href="../Graphics/Images/dashpatterns.png" class="subitem">Dash Pattern Table</a></li>	
					<li><a href="../Graphics/Images/fillpatterns.png" class="subitem">Fill Pattern Table</a></li>	
					<li><a href="../Graphics/Images/markers.png" class="subitem">Marker Table</a></li>
					<li><a href="../Graphics/map_projections.shtml" class="subitem">Map Projections</a></li>
					<li><a href="../Graphics/rangs.shtml" class="subitem">High Resolution Map Database</a></li>
					<li><a href="https://www.ncl.ucar.edu/Applications/editor.shtml" class="subitem">Editor Enhancements</a></li>
					<li><a href="../Tools/ncl_convert2nc.shtml">ncl_convert2nc</a></li>
					<li><a href="../Tools/ncl_filedump.shtml">ncl_filedump</a></li>
					<li><a href="../Tools/index.html" class="subitem">Tools</a></li>
					<li><a href="../Tools/WRAPIT.shtml" class="subitem">WRAPIT</a></li>
					</ul>
				</li>

				<li>
				<a href="../../announcements.shtml" class="trigger">What's New</a>
					<ul>
					        <li><a href="../../announcements.shtml" class="subitem">Announcements</a></li>
						<li><a href="../../current_release.shtml" class="subitem">In Latest Release</a></li>
						<li><a href="../../new_applications.shtml" class="subitem">In Application Examples</a></li>
						<li><a href="../../future_release.shtml" class="subitem">In Next Release</a></li>	
						<li><a href="../../prev_releases.shtml" class="subitem">In Previous Releases</a></li>
					</ul>
				</li>
	

				<li>
				<a href="../../Support/index.html" class='trigger'>Support</a>
					<ul>
						<li><a href="../../Support/email_lists.shtml" class="subitem">Email Lists</a></li>
						<li><a href="https://www.ncl.ucar.edu/Applications/editor.shtml" class="subitem">Editor enhancements</a></li>
						<li><a href="../Language/error_messages.shtml" class="subitem">Error messages</a></li>
						<li><a href="../Manuals/index.html" class="subitem">Manuals</a></li>
						<li><a href="https://www2.cisl.ucar.edu/resources/geyser_caldera/visualization/ncl">NCL on yellowstone</a>
						<li><a href="../../Training/index.html" class="subitem">Training</a></li>
						<li><a href="../../Training/Webinars/index.html" class="subitem">Webinars</a></li>
						<li><a href="../../Training/Workshops/index.html" class="subitem">Workshops</a></li>
						<li><a href="../index.html" class="subitem">Documentation</a></li>
						<li><a href="../../FAQ/index.html" class="subitem">FAQ</a></li>
						<li><a href="../../known_bugs.shtml" class="subitem">Known Bugs</a></li>
						<li><a href="../../report_bug.shtml" class="subitem">Report Bugs</a></li>
					</ul>
				</li>

				<li>
				<a href="../../External/index.html" class='trigger'>External</a>
					<ul>
						<li><a href="https://www2.cisl.ucar.edu/resources/geyser_caldera/visualization/ncl" class="subitem">Using NCL on Yellowstone</a></li>
						<li><a href="http://climatedataguide.ucar.edu/" class="subitem">Climate Data Guide</a></li>
						<li><a href="https://code.zmaw.de/projects/cdo/" class="subitem">Climate Data Operators</a></li>
						<li><a href="http://www.earthsystemmodeling.org/" class="subitem">Earth System Modeling Framework</a></li>
						<li><a href="http://nco.sourceforge.net/" class="subitem">NetCDF Operators</a></li>
						<li><a href="http://trac.mcs.anl.gov/projects/parvis/wiki" class="subitem">ParVis</a></li>
						<li><a href="http://www.pyngl.ucar.edu/" class="subitem">PyNGL</a></li>
						<li><a href="http://www.pyngl.ucar.edu/Nio.shtml" class="subitem">PyNIO</a></li>
					</ul>
				</li>

			<!-- end menubar_main -->		
			</ul>
		
		<!-- end nav_main -->	
		</div>
		
	<!-- end nav_main_wrap -->	
  	</div>
		
			

	
	<div id="wrap"><!-- begin wrap -->
	<div id="content"><!-- begin content -->
	
	<!-- ######### BEGIN EDITABLE PAGE CONTENT ######### -->

			<div id="subheader"><!-- begin subheader -->
			<map name="ncl-home">
<area shape="rect" coords="0,0,65,40" href="../../index.shtml">
<area shape="rect" coords="580,0,640,40" href="http://www.ncar.ucar.edu">
</map>

	<div id="nclheader">
	<img src="../../Images/ncl-b4.jpg" alt="NCL Website header" usemap="#ncl-home">
	</div>


			<div id="googlesearch">
<form name="google" action="http://www.ucar.edu/search/googleresults.jsp" id="cse-search-box">
 <div id="googlesearch">
   <input type="hidden" name="cx" value="008424664622949020059:afj38jxaljc" />
   <input type="hidden" name="cof" value="FORID:9" />
   <input type="hidden" name="ie" value="UTF-8" />
   <input type="text" name="q" size="12" />
   <input type=hidden name=hq value="site:www.ncl.ucar.edu">
   <a href="http://www2.ucar.edu/advanced-search">advanced</a>
 </div>
</form> 
<script type="text/javascript" src="http://www.google.com/coop/cse/brand?form=cse-search-box&lang=en"></script>
				<p class="datetime">  </p>

			</div><!-- end googlesearch -->

			</div><!-- end subheader -->
			
			      <div id="general_main">
<h1>Alphabetical listing of NCL Functions</h1>

<b><a href="index.shtml">Category</a> listing</b> |
<b><a href="list_type.shtml">Function type</a> listing</b> |
<b><a href="list_alpha_browse.shtml">Browsable</a> listing</b><p>

<font size=-1>
<a href="list_alpha.shtml#A">A</a> | <a href="list_alpha.shtml#B">B</a> | <a href="list_alpha.shtml#C">C</a> |
<a href="list_alpha.shtml#D">D</a> | <a href="list_alpha.shtml#E">E</a> | <a href="list_alpha.shtml#F">F</a> |
<a href="list_alpha.shtml#G">G</a> | <a href="list_alpha.shtml#H">H</a> | <a href="list_alpha.shtml#I">I</a> |
<a href="list_alpha.shtml#J">J</a> | <a href="list_alpha.shtml#K">K</a> | <a href="list_alpha.shtml#L">L</a> |
<a href="list_alpha.shtml#M">M</a> | <a href="list_alpha.shtml#N">N</a> | <a href="list_alpha.shtml#O">O</a> |
<a href="list_alpha.shtml#P">P</a> | <a href="list_alpha.shtml#Q">Q</a> | <a href="list_alpha.shtml#R">R</a> |
<a href="list_alpha.shtml#S">S</a> | <a href="list_alpha.shtml#T">T</a> | <a href="list_alpha.shtml#U">U</a> |
<a href="list_alpha.shtml#V">V</a> | <a href="list_alpha.shtml#W">W</a> | <a href="list_alpha.shtml#X">X</a> |
<a href="list_alpha.shtml#Y">Y</a> | <a href="list_alpha.shtml#Z">Z</a>
</font>
<table cellspacing=2 width=100% border=1>

<!--abs-->
<tr>
<td valign=top><a name="A"></a>
<a href="Built-in/abs.shtml">
abs</a></td>
<td>
Returns the absolute value of numeric data.
</td>
</tr>
<!--acos-->
<tr>
<td valign=top>
<a href="Built-in/acos.shtml">
acos</a></td>
<td>
Computes the inverse cosine of numeric types.
</td>
</tr>
<!--add90LatX-->
<tr>
<td valign=top>
<a href="Shea_util/add90LatX.shtml">
add90LatX</a></td>
<td>
Adds two fake pole points (90S and 90N) to the rightmost dimension of the given data.
</td>
</tr>
<!--add90LatY-->
<tr>
<td valign=top>
<a href="Shea_util/add90LatY.shtml">
add90LatY</a></td>
<td>
Adds two fake pole points (90S and 90N) to the leftmost dimension of the given data.
</td>
</tr>
<!--addfile-->
<tr>
<td valign=top>
<a href="Built-in/addfile.shtml">
addfile</a></td>
<td>
Opens a data file that is (or is to be) written in a <a href="../Manuals/Ref_Manual/NclFormatSupport.shtml">supported file format</a>.
</td>
</tr>
<!--addfiles-->
<tr>
<td valign=top>
<a href="Built-in/addfiles.shtml">
addfiles</a></td>
<td>
Creates a reference that spans multiple data files.
</td>
</tr>
<!--addfiles_GetVar-->
<tr>
<td valign=top>
<a href="Contributed/addfiles_GetVar.shtml">
addfiles_GetVar</a></td>
<td>
Creates a reference that spans multiple data files and returns metadata. <font color="red">(deprecated: </font> see <a href="Built-in/addfiles.shtml"><strong>addfiles</strong></a>)
</td>
</tr>
<!--advect_variable-->
<tr>
<td valign=top>
<a href="Contributed/advect_variable.shtml">
advect_variable</a></td>
<td>
Horizontally advect a variable on the globe.
</td>
</tr>
<!--all-->
<tr>
<td valign=top>
<a href="Built-in/all.shtml">
all</a></td>
<td>
Returns True if all the elements of the input evaluate as True.
</td>
</tr>
<!--angmom_atm-->
<tr>
<td valign=top>
<a href="Built-in/angmom_atm.shtml">
angmom_atm</a></td>
<td>
Calculates the atmosphere's relative angular momentum.
</td>
</tr>
<!--any-->
<tr>
<td valign=top>
<a href="Built-in/any.shtml">
any</a></td>
<td>
Returns True if any of the values of its input evaluate as True.
</td>
</tr>
<!--area_conserve_remap-->
<tr>
<td valign=top>
<a href="Built-in/area_conserve_remap.shtml">
area_conserve_remap</a></td>
<td>
Performs areal conservative remapping from one rectilinear grid to another.
</td>
</tr>
<!--area_conserve_remap_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/area_conserve_remap_Wrap.shtml">
area_conserve_remap_Wrap</a></td>
<td>
Performs areal conservative remapping from one rectilinear grid to another and preserves meta data.
</td>
</tr>
<!--area_hi2lores-->
<tr>
<td valign=top>
<a href="Built-in/area_hi2lores.shtml">
area_hi2lores</a></td>
<td>
Interpolates from high resolution rectilinear grids to low resolution recitlinear grids using local area averaging.
</td>
</tr>
<!--area_hi2lores_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/area_hi2lores_Wrap.shtml">
area_hi2lores_Wrap</a></td>
<td>
Interpolates from high resolution rectilinear grids to low resolution rectilinear grids using local area averaging. (retains meta data)
</td>
</tr>
<!--area_poly_sphere-->
<tr>
<td valign=top>
<a href="Built-in/area_poly_sphere.shtml">
area_poly_sphere</a></td>
<td>
Calculates the area enclosed by an arbitrary polygon on the sphere.
</td>
</tr>
<!--array_append_record-->
<tr>
<td valign=top>
<a href="Contributed/array_append_record.shtml">
array_append_record</a></td>
<td>
Attaches [appends] additional records [leftmost dimension] to a previously existing array.
</td>
</tr>
<!--asciiread-->
<tr>
<td valign=top>
<a href="Built-in/asciiread.shtml">
asciiread</a></td>
<td>
Reads a file that contains ASCII representations of basic data types.
</td>
</tr>
<!--asciiwrite-->
<tr>
<td valign=top>
<a href="Built-in/asciiwrite.shtml">
asciiwrite</a></td>
<td>
Creates an ascii text file of numeric or string data type.
</td>
</tr>
<!--asin-->
<tr>
<td valign=top>
<a href="Built-in/asin.shtml">
asin</a></td>
<td>
Computes the inverse sine of numeric types.
</td>
</tr>
<!--assignFillValue-->
<tr>
<td valign=top>
<a href="Contributed/assignFillValue.shtml">
assignFillValue</a></td>
<td>
Transfers the <a href="../Language/fillval.shtml">_FillValue</a> <a href="../Language/attributes.shtml">attribute</a> from one variable to another.
</td>
</tr>
<!--atan-->
<tr>
<td valign=top>
<a href="Built-in/atan.shtml">
atan</a></td>
<td>
Computes the inverse tangent of numeric types.
</td>
</tr>
<!--atan2-->
<tr>
<td valign=top>
<a href="Built-in/atan2.shtml">
atan2</a></td>
<td>
Computes the inverse tangent of (y/x) for numeric types.
</td>
</tr>
<!--attsetvalues-->
<tr>
<td valign=top>
<a href="Built-in/attsetvalues.shtml">
attsetvalues</a></td>
<td>
Applies resources to the given objects.
</td>
</tr>
<!--avg-->
<tr>
<td valign=top>
<a href="Built-in/avg.shtml">
avg</a></td>
<td>
Computes the average of a variable regardless of dimensionality.
</td>
</tr>
<!--band_pass_area_time-->
<tr>
<td valign=top><a name="B"></a>
<a href="Diagnostics/band_pass_area_time.shtml">
band_pass_area_time</a></td>
<td>
Create a time series of area averages; band pass filter the resulting area averaged time series and calculate other statistics.
</td>
</tr>
<!--band_pass_area_time_plot-->
<tr>
<td valign=top>
<a href="Diagnostics/band_pass_area_time_plot.shtml">
band_pass_area_time_plot</a></td>
<td>
Generate a plot using the output from <a href="Diagnostics/band_pass_area_time.shtml"><strong>band_pass_area_time</strong></a>.
</td>
</tr>
<!--band_pass_hovmueller-->
<tr>
<td valign=top>
<a href="Diagnostics/band_pass_hovmueller.shtml">
band_pass_hovmueller</a></td>
<td>
Create a band-pass filtered time series suitable for a  time vs longitude (Hovmueller) plot.
</td>
</tr>
<!--band_pass_hovmueller_plot-->
<tr>
<td valign=top>
<a href="Diagnostics/band_pass_hovmueller_plot.shtml">
band_pass_hovmueller_plot</a></td>
<td>
Generate a plot using the output from <a href="Diagnostics/band_pass_hovmueller.shtml"><strong>band_pass_hovmueller</strong></a>.
</td>
</tr>
<!--band_pass_latlon_time-->
<tr>
<td valign=top>
<a href="Diagnostics/band_pass_latlon_time.shtml">
band_pass_latlon_time</a></td>
<td>
Create band-pass filtered series at each lat/lon grid point.
</td>
</tr>
<!--band_pass_latlon_time_plot-->
<tr>
<td valign=top>
<a href="Diagnostics/band_pass_latlon_time_plot.shtml">
band_pass_latlon_time_plot</a></td>
<td>
Generate a plot using the output from <a href="Diagnostics/band_pass_latlon_time.shtml"><strong>band_pass_latlon_time</strong></a>.
</td>
</tr>
<!--betainc-->
<tr>
<td valign=top>
<a href="Built-in/betainc.shtml">
betainc</a></td>
<td>
Evaluates the incomplete beta function.
</td>
</tr>
<!--bin_avg-->
<tr>
<td valign=top>
<a href="Built-in/bin_avg.shtml">
bin_avg</a></td>
<td>
Calculates gridded binned averages and counts on a rectilinear grid using randomly spaced data.
</td>
</tr>
<!--bin_sum-->
<tr>
<td valign=top>
<a href="Built-in/bin_sum.shtml">
bin_sum</a></td>
<td>
Calculates binned sums and counts over multiple invocations of the procedure on a rectilinear grid.
</td>
</tr>
<!--boxplot-->
<tr>
<td valign=top>
<a href="Shea_util/boxplot.shtml">
boxplot</a></td>
<td>
Creates a boxplot.
</td>
</tr>
<!--bw_bandpass_filter-->
<tr>
<td valign=top>
<a href="Built-in/bw_bandpass_filter.shtml">
bw_bandpass_filter</a></td>
<td>
Applies a Butterworth bandpass filter optimized for narrow bandwidths to time series.
</td>
</tr>
<!--byte2flt-->
<tr>
<td valign=top>
<a href="Contributed/byte2flt.shtml">
byte2flt</a></td>
<td>
Converts values of type byte to values of type float.
</td>
</tr>
<!--byte2flt_hdf-->
<tr>
<td valign=top>
<a href="Contributed/byte2flt_hdf.shtml">
byte2flt_hdf</a></td>
<td>
Converts values of type byte to values of type float using the "scale" and "offset" attributes (if present).
</td>
</tr>
<!--calcDayAnomTLL-->
<tr>
<td valign=top><a name="C"></a>
<a href="Contributed/calcDayAnomTLL.shtml">
calcDayAnomTLL</a></td>
<td>
Calculates daily anomalies from a daily data climatology.
</td>
</tr>
<!--calcMonAnomLLLT-->
<tr>
<td valign=top>
<a href="Contributed/calcMonAnomLLLT.shtml">
calcMonAnomLLLT</a></td>
<td>
Calculates monthly anomalies by subtracting the long term mean from each point  (lev,lat,lon,time version)
</td>
</tr>
<!--calcMonAnomLLT-->
<tr>
<td valign=top>
<a href="Contributed/calcMonAnomLLT.shtml">
calcMonAnomLLT</a></td>
<td>
Calculates monthly anomalies by subtracting the long term mean from each point  (lat,lon,time version)
</td>
</tr>
<!--calcMonAnomTLL-->
<tr>
<td valign=top>
<a href="Contributed/calcMonAnomTLL.shtml">
calcMonAnomTLL</a></td>
<td>
Calculates monthly anomalies by subtracting the long term mean from each point  (time,lat,lon version)
</td>
</tr>
<!--calcMonAnomTLLL-->
<tr>
<td valign=top>
<a href="Contributed/calcMonAnomTLLL.shtml">
calcMonAnomTLLL</a></td>
<td>
Calculates monthly anomalies by subtracting the long term mean from each point:  (time,lev,lat,lon) version.
</td>
</tr>
<!--calculate_monthly_values-->
<tr>
<td valign=top>
<a href="Contributed/calculate_monthly_values.shtml">
calculate_monthly_values</a></td>
<td>
Calculate monthly values [avg, sum, min, max] from high frequency temporal values.
</td>
</tr>
<!--calendar_decode2-->
<tr>
<td valign=top>
<a href="User_contributed/calendar_decode2.shtml">
calendar_decode2</a></td>
<td>
Translates numeric time coordinates to calendar times.
</td>
</tr>
<!--cancor-->
<tr>
<td valign=top>
<a href="Built-in/cancor.shtml">
cancor</a></td>
<td>
Performs canonical correlation analysis between two sets of variables.
</td>
</tr>
<!--cbinread-->
<tr>
<td valign=top>
<a href="Built-in/cbinread.shtml">
cbinread</a></td>
<td>
Reads binary files created using the C block I/O function write.
</td>
</tr>
<!--cbinwrite-->
<tr>
<td valign=top>
<a href="Built-in/cbinwrite.shtml">
cbinwrite</a></td>
<td>
Creates a binary file in raw C block I/O format for a numeric data type.
</td>
</tr>
<!--cd_calendar-->
<tr>
<td valign=top>
<a href="Built-in/cd_calendar.shtml">
cd_calendar</a></td>
<td>
Converts a mixed Julian/Gregorian date to a UT-referenced date.
</td>
</tr>
<!--cd_convert-->
<tr>
<td valign=top>
<a href="Contributed/cd_convert.shtml">
cd_convert</a></td>
<td>
Converts a time variable from one set of units to another.
</td>
</tr>
<!--cd_inv_calendar-->
<tr>
<td valign=top>
<a href="Built-in/cd_inv_calendar.shtml">
cd_inv_calendar</a></td>
<td>
Converts a UT-referenced date to a mixed Julian/Gregorian date.
</td>
</tr>
<!--cd_string-->
<tr>
<td valign=top>
<a href="User_contributed/cd_string.shtml">
cd_string</a></td>
<td>
Converts time values into nicely formatted strings.
</td>
</tr>
<!--cdfbin_p-->
<tr>
<td valign=top>
<a href="Built-in/cdfbin_p.shtml">
cdfbin_p</a></td>
<td>
Calculates the binomial density of a cumulative distribution function.
</td>
</tr>
<!--cdfbin_pr-->
<tr>
<td valign=top>
<a href="Built-in/cdfbin_pr.shtml">
cdfbin_pr</a></td>
<td>
Calculates the probability of success of each trial of a cumulative  distribution function.
</td>
</tr>
<!--cdfbin_s-->
<tr>
<td valign=top>
<a href="Built-in/cdfbin_s.shtml">
cdfbin_s</a></td>
<td>
Calculates the number of successes of a cumulative distribution function.
</td>
</tr>
<!--cdfbin_xn-->
<tr>
<td valign=top>
<a href="Built-in/cdfbin_xn.shtml">
cdfbin_xn</a></td>
<td>
Calculates the number of binomial trials of a cumulative distribution function.
</td>
</tr>
<!--cdfchi_p-->
<tr>
<td valign=top>
<a href="Built-in/cdfchi_p.shtml">
cdfchi_p</a></td>
<td>
Calculates the integral of a cumulative chi-square distribution function.
</td>
</tr>
<!--cdfchi_x-->
<tr>
<td valign=top>
<a href="Built-in/cdfchi_x.shtml">
cdfchi_x</a></td>
<td>
Calculates the upper limit of integration of a cumulative chi-square  distribution function.
</td>
</tr>
<!--cdfgam_p-->
<tr>
<td valign=top>
<a href="Built-in/cdfgam_p.shtml">
cdfgam_p</a></td>
<td>
Calculates the integral of a cumulative gamma distribution  function.
</td>
</tr>
<!--cdfgam_x-->
<tr>
<td valign=top>
<a href="Built-in/cdfgam_x.shtml">
cdfgam_x</a></td>
<td>
Calculates the upper limit of integration of a cumulative gamma distribution  function.
</td>
</tr>
<!--cdfnor_p-->
<tr>
<td valign=top>
<a href="Built-in/cdfnor_p.shtml">
cdfnor_p</a></td>
<td>
Calculates the integral of a cumulative normal distribution function.
</td>
</tr>
<!--cdfnor_x-->
<tr>
<td valign=top>
<a href="Built-in/cdfnor_x.shtml">
cdfnor_x</a></td>
<td>
Calculates the upper limit of integration of a cumulative normal distribution function.
</td>
</tr>
<!--cdft_p-->
<tr>
<td valign=top>
<a href="Built-in/cdft_p.shtml">
cdft_p</a></td>
<td>
Calculates the one-sided probability given a t-value and the degrees of freedom.
</td>
</tr>
<!--cdft_t-->
<tr>
<td valign=top>
<a href="Built-in/cdft_t.shtml">
cdft_t</a></td>
<td>
Calculates the t-value given the one-sided probability and the degrees of freedom.
</td>
</tr>
<!--ceil-->
<tr>
<td valign=top>
<a href="Built-in/ceil.shtml">
ceil</a></td>
<td>
Computes the smallest integer value larger than the input.
</td>
</tr>
<!--center_finite_diff-->
<tr>
<td valign=top>
<a href="Built-in/center_finite_diff.shtml">
center_finite_diff</a></td>
<td>
Performs a centered finite difference operation on the rightmost dimension.
</td>
</tr>
<!--center_finite_diff_n-->
<tr>
<td valign=top>
<a href="Built-in/center_finite_diff_n.shtml">
center_finite_diff_n</a></td>
<td>
Performs a centered finite difference operation on the given dimension.
</td>
</tr>
<!--cfftb-->
<tr>
<td valign=top>
<a href="Built-in/cfftb.shtml">
cfftb</a></td>
<td>
Performs a backward complex discrete fourier transform [Fourier Synthesis].
</td>
</tr>
<!--cfftf-->
<tr>
<td valign=top>
<a href="Built-in/cfftf.shtml">
cfftf</a></td>
<td>
Performs a forward complex discrete fourier transform of a real periodic sequence.
</td>
</tr>
<!--cfftf_frq_reorder-->
<tr>
<td valign=top>
<a href="Built-in/cfftf_frq_reorder.shtml">
cfftf_frq_reorder</a></td>
<td>
Reorders the data returned by <a href="Built-in/cfftf.shtml"><strong>cfftf</strong></a>.
</td>
</tr>
<!--changeCase-->
<tr>
<td valign=top>
<a href="Contributed/changeCase.shtml">
changeCase</a></td>
<td>
Changes the case of a string. <font color="red">(Deprecated: </font> see <a href="Built-in/str_lower.shtml"><strong>str_lower</strong></a>/<a href="Built-in/str_upper.shtml"><strong>str_upper</strong></a>.)
</td>
</tr>
<!--changeCaseChar-->
<tr>
<td valign=top>
<a href="Contributed/changeCaseChar.shtml">
changeCaseChar</a></td>
<td>
Changes the case of each character in a string. <font color="red">(Deprecated: </font> see <a href="Built-in/str_switch.shtml"><strong>str_switch</strong></a>.)
</td>
</tr>
<!--charactertodouble-->
<tr>
<td valign=top>
<a href="Built-in/charactertodouble.shtml">
charactertodouble</a></td>
<td>
Coerces values of type character to values of type double (<font color=red>deprecated</font>; use <a href="Built-in/todouble.shtml"><strong>todouble</strong></a>).
</td>
</tr>
<!--charactertofloat-->
<tr>
<td valign=top>
<a href="Built-in/charactertofloat.shtml">
charactertofloat</a></td>
<td>
Coerces values of type character to values of type float (<font color=red>deprecated</font>; use <a href="Built-in/tofloat.shtml"><strong>tofloat</strong></a>).
</td>
</tr>
<!--charactertointeger-->
<tr>
<td valign=top>
<a href="Built-in/charactertointeger.shtml">
charactertointeger</a></td>
<td>
Coerces values of type character to values of type integer (<font color=red>deprecated</font>; use <a href="Built-in/tointeger.shtml"><strong>tointeger</strong></a>).
</td>
</tr>
<!--charactertolong-->
<tr>
<td valign=top>
<a href="Built-in/charactertolong.shtml">
charactertolong</a></td>
<td>
Coerces values of type character to values of NCL type long (<font color=red>deprecated</font>; use <a href="Built-in/tolong.shtml"><strong>tolong</strong></a>).
</td>
</tr>
<!--charactertoshort-->
<tr>
<td valign=top>
<a href="Built-in/charactertoshort.shtml">
charactertoshort</a></td>
<td>
Coerces values of type character to values of type short (<font color=red>deprecated</font>; use <a href="Built-in/toshort.shtml"><strong>toshort</strong></a>).
</td>
</tr>
<!--charactertostring-->
<tr>
<td valign=top>
<a href="Built-in/charactertostring.shtml">
charactertostring</a></td>
<td>
Coerces values of type character to values of type string (<font color=red>deprecated</font>; use <a href="Built-in/tostring.shtml"><strong>tostring</strong></a>).
</td>
</tr>
<!--chartodouble-->
<tr>
<td valign=top>
<a href="Built-in/chartodouble.shtml">
chartodouble</a></td>
<td>
Coerces values of type character to values of type double (<font color=red>deprecated</font>; use <a href="Built-in/todouble.shtml"><strong>todouble</strong></a>).
</td>
</tr>
<!--chartofloat-->
<tr>
<td valign=top>
<a href="Built-in/chartofloat.shtml">
chartofloat</a></td>
<td>
Coerces values of type character to values of type float (<font color=red>deprecated</font>; use <a href="Built-in/tofloat.shtml"><strong>tofloat</strong></a>).
</td>
</tr>
<!--chartoint-->
<tr>
<td valign=top>
<a href="Built-in/chartoint.shtml">
chartoint</a></td>
<td>
Coerces values of type character to values of type integer (<font color=red>deprecated</font>; use <a href="Built-in/toint.shtml"><strong>toint</strong></a>).
</td>
</tr>
<!--chartointeger-->
<tr>
<td valign=top>
<a href="Built-in/chartointeger.shtml">
chartointeger</a></td>
<td>
Coerces values of type character to values of type integer (<font color=red>deprecated</font>; use <a href="Built-in/tointeger.shtml"><strong>tointeger</strong></a>).
</td>
</tr>
<!--chartolong-->
<tr>
<td valign=top>
<a href="Built-in/chartolong.shtml">
chartolong</a></td>
<td>
Coerces values of type character to values of NCL type long (<font color=red>deprecated</font>; use <a href="Built-in/tolong.shtml"><strong>tolong</strong></a>).
</td>
</tr>
<!--chartoshort-->
<tr>
<td valign=top>
<a href="Built-in/chartoshort.shtml">
chartoshort</a></td>
<td>
Coerces values of type character to values of type short (<font color=red>deprecated</font>; use <a href="Built-in/toshort.shtml"><strong>toshort</strong></a>).
</td>
</tr>
<!--chartostring-->
<tr>
<td valign=top>
<a href="Built-in/chartostring.shtml">
chartostring</a></td>
<td>
Coerces values of type character to values of type string (<font color=red>deprecated</font>; use <a href="Built-in/tostring.shtml"><strong>tostring</strong></a>).
</td>
</tr>
<!--chiinv-->
<tr>
<td valign=top>
<a href="Built-in/chiinv.shtml">
chiinv</a></td>
<td>
Evaluates the inverse chi-squared distribution function.
</td>
</tr>
<!--clear-->
<tr>
<td valign=top>
<a href="Built-in/clear.shtml">
clear</a></td>
<td>
Clears the given workstation objects.
</td>
</tr>
<!--clmDayTLL-->
<tr>
<td valign=top>
<a href="Contributed/clmDayTLL.shtml">
clmDayTLL</a></td>
<td>
Calculates long term daily means (daily climatology) from daily data.
</td>
</tr>
<!--clmDayTLLL-->
<tr>
<td valign=top>
<a href="Contributed/clmDayTLLL.shtml">
clmDayTLLL</a></td>
<td>
Calculates long term daily means (daily climatology) from daily data.
</td>
</tr>
<!--clmMon2clmDay-->
<tr>
<td valign=top>
<a href="Contributed/clmMon2clmDay.shtml">
clmMon2clmDay</a></td>
<td>
Create a daily climatology from a monthly climatology.
</td>
</tr>
<!--clmMonLLLT-->
<tr>
<td valign=top>
<a href="Contributed/clmMonLLLT.shtml">
clmMonLLLT</a></td>
<td>
Calculates long term monthly means (monthly climatology) from monthly data: (lev,lat,lon,time) version.
</td>
</tr>
<!--clmMonLLT-->
<tr>
<td valign=top>
<a href="Contributed/clmMonLLT.shtml">
clmMonLLT</a></td>
<td>
Calculates long term monthly means (monthly climatology) from monthly data (lat,lon,time version)
</td>
</tr>
<!--clmMonTLL-->
<tr>
<td valign=top>
<a href="Contributed/clmMonTLL.shtml">
clmMonTLL</a></td>
<td>
Calculates long term monthly means (monthly climatology) from monthly data:  (time,lat,lon) version
</td>
</tr>
<!--clmMonTLLL-->
<tr>
<td valign=top>
<a href="Contributed/clmMonTLLL.shtml">
clmMonTLLL</a></td>
<td>
Calculates long term monthly means (monthly climatology) from monthly data: (time,lev,lat,lon) version
</td>
</tr>
<!--closest_val-->
<tr>
<td valign=top>
<a href="Contributed/closest_val.shtml">
closest_val</a></td>
<td>
Finds the index value in a monotonically increasing one dimensional array closest to a desired value.
</td>
</tr>
<!--color_index_to_rgba-->
<tr>
<td valign=top>
<a href="Built-in/color_index_to_rgba.shtml">
color_index_to_rgba</a></td>
<td>
Converts an absolute color index to its equivalent RGBA quadruplet
</td>
</tr>
<!--ColorNegDashZeroPosContour-->
<tr>
<td valign=top>
<a href="Shea_util/ColorNegDashZeroPosContour.shtml">
ColorNegDashZeroPosContour</a></td>
<td>
Sets the negative contours to dashed, and colors the negative, positive, and zero contours to user-specified colors.
</td>
</tr>
<!--ColorShadeLeGeContour-->
<tr>
<td valign=top>
<a href="Shea_util/ColorShadeLeGeContour.shtml">
ColorShadeLeGeContour</a></td>
<td>
Shades contour regions given low and high values and two colors.<br> (Superceded by <a href="../Graphics/Interfaces/gsn_contour_shade.shtml"><strong>gsn_contour_shade</strong></a> as of version <a href="../../prev_releases.shtml#4.3.0">4.3.0</a>.)
</td>
</tr>
<!--conform-->
<tr>
<td valign=top>
<a href="Built-in/conform.shtml">
conform</a></td>
<td>
Expands an array or scalar so that it conforms to the shape of the given variable.
</td>
</tr>
<!--conform_dims-->
<tr>
<td valign=top>
<a href="Built-in/conform_dims.shtml">
conform_dims</a></td>
<td>
Expands an array or scalar so that it conforms to the shape of the given dimension sizes.
</td>
</tr>
<!--copy_VarAtts-->
<tr>
<td valign=top>
<a href="Contributed/copy_VarAtts.shtml">
copy_VarAtts</a></td>
<td>
Copies all of a variable's <a href="../Language/attributes.shtml">attributes</a> from one variable to another.
</td>
</tr>
<!--copy_VarCoords-->
<tr>
<td valign=top>
<a href="Contributed/copy_VarCoords.shtml">
copy_VarCoords</a></td>
<td>
Copies all  <a href="../Language/named.shtml">named dimensions</a> and <a href="../Language/cv.shtml">coordinate variables</a> from one variable to another.
</td>
</tr>
<!--copy_VarCoords_1-->
<tr>
<td valign=top>
<a href="Contributed/copy_VarCoords_1.shtml">
copy_VarCoords_1</a></td>
<td>
Copies all  <a href="../Language/named.shtml">named dimensions</a> and <a href="../Language/cv.shtml">coordinate variables</a> from one variable to another except for the rightmost dimension.
</td>
</tr>
<!--copy_VarCoords_2-->
<tr>
<td valign=top>
<a href="Contributed/copy_VarCoords_2.shtml">
copy_VarCoords_2</a></td>
<td>
Copies all  <a href="../Language/named.shtml">named dimensions</a> and <a href="../Language/cv.shtml">coordinate variables</a> from one variable to another except for the rightmost two dimensions.
</td>
</tr>
<!--copy_VarMeta-->
<tr>
<td valign=top>
<a href="Contributed/copy_VarMeta.shtml">
copy_VarMeta</a></td>
<td>
Copies all  <a href="../Language/attributes.shtml">attributes</a>,  <a href="../Language/named.shtml">named dimensions</a>  and  <a href="../Language/cv.shtml">coordinate variables</a>  from one variable to another.
</td>
</tr>
<!--copyatt-->
<tr>
<td valign=top>
<a href="Contributed/copyatt.shtml">
copyatt</a></td>
<td>
Copies all <a href="../Language/attributes.shtml">attributes</a>, <a href="../Language/named.shtml">named dimensions</a> and <a href="../Language/cv.shtml">coordinate variables</a> from one variable to another (deprecated version).
</td>
</tr>
<!--cos-->
<tr>
<td valign=top>
<a href="Built-in/cos.shtml">
cos</a></td>
<td>
Computes the cosine of numeric types.
</td>
</tr>
<!--cosh-->
<tr>
<td valign=top>
<a href="Built-in/cosh.shtml">
cosh</a></td>
<td>
Computes the hyperbolic cosine of numeric types.
</td>
</tr>
<!--count_unique_values-->
<tr>
<td valign=top>
<a href="Built-in/count_unique_values.shtml">
count_unique_values</a></td>
<td>
Counts the number of unique values in the given array.
</td>
</tr>
<!--covcorm-->
<tr>
<td valign=top>
<a href="Built-in/covcorm.shtml">
covcorm</a></td>
<td>
Calculates a covariance or correlation matrix.
</td>
</tr>
<!--covcorm_xy-->
<tr>
<td valign=top>
<a href="Built-in/covcorm_xy.shtml">
covcorm_xy</a></td>
<td>
Calculates a covariance or correlation matrix given two separate '<b>n</b> x <b>m</b>' arrays.
</td>
</tr>
<!--craybinnumrec-->
<tr>
<td valign=top>
<a href="Built-in/craybinnumrec.shtml">
craybinnumrec</a></td>
<td>
Returns the number of unformatted sequential access Fortran records in a Cray COS blocked binary file.
</td>
</tr>
<!--craybinrecread-->
<tr>
<td valign=top>
<a href="Built-in/craybinrecread.shtml">
craybinrecread</a></td>
<td>
Reads COS blocked unformatted sequential access Fortran binary files.
</td>
</tr>
<!--create_graphic-->
<tr>
<td valign=top>
<a href="Built-in/create_graphic.shtml">
create_graphic</a></td>
<td>
Creates a graphic object
</td>
</tr>
<!--crossp3-->
<tr>
<td valign=top>
<a href="Contributed/crossp3.shtml">
crossp3</a></td>
<td>
Compute cross product of multiple vectors of length 3.
</td>
</tr>
<!--csa1-->
<tr>
<td valign=top>
<a href="Built-in/csa1.shtml">
csa1</a></td>
<td>
Calculates an approximating cubic spline for the input data, one 1-dimensional section at a time.
</td>
</tr>
<!--csa1d-->
<tr>
<td valign=top>
<a href="Built-in/csa1d.shtml">
csa1d</a></td>
<td>
Calculates an approximating cubic spline for the input data, one 1-dimensional section at a time.
</td>
</tr>
<!--csa1s-->
<tr>
<td valign=top>
<a href="Built-in/csa1s.shtml">
csa1s</a></td>
<td>
Calculates an approximating cubic spline for the input data, one 1-dimensional section at a time.
</td>
</tr>
<!--csa1x-->
<tr>
<td valign=top>
<a href="Built-in/csa1x.shtml">
csa1x</a></td>
<td>
Calculates an approximating cubic spline for the input data, one 1-dimensional section at a time.
</td>
</tr>
<!--csa1xd-->
<tr>
<td valign=top>
<a href="Built-in/csa1xd.shtml">
csa1xd</a></td>
<td>
Calculates an approximating cubic spline for the input data, one 1-dimensional section at a time.
</td>
</tr>
<!--csa1xs-->
<tr>
<td valign=top>
<a href="Built-in/csa1xs.shtml">
csa1xs</a></td>
<td>
Calculates an approximating cubic spline for the input data, one 1-dimensional section at a time.
</td>
</tr>
<!--csa2-->
<tr>
<td valign=top>
<a href="Built-in/csa2.shtml">
csa2</a></td>
<td>
Calculates an approximating cubic spline for two-dimensional input data.
</td>
</tr>
<!--csa2d-->
<tr>
<td valign=top>
<a href="Built-in/csa2d.shtml">
csa2d</a></td>
<td>
Calculates an approximating cubic spline for two-dimensional input data.
</td>
</tr>
<!--csa2l-->
<tr>
<td valign=top>
<a href="Built-in/csa2l.shtml">
csa2l</a></td>
<td>
Calculates an approximating cubic spline for two-dimensional input data.
</td>
</tr>
<!--csa2ld-->
<tr>
<td valign=top>
<a href="Built-in/csa2ld.shtml">
csa2ld</a></td>
<td>
Calculates an approximating cubic spline for two-dimensional input data.
</td>
</tr>
<!--csa2ls-->
<tr>
<td valign=top>
<a href="Built-in/csa2ls.shtml">
csa2ls</a></td>
<td>
Calculates an approximating cubic spline for two-dimensional input data.
</td>
</tr>
<!--csa2lx-->
<tr>
<td valign=top>
<a href="Built-in/csa2lx.shtml">
csa2lx</a></td>
<td>
Calculates an approximating cubic spline for two-dimensional input data.
</td>
</tr>
<!--csa2lxd-->
<tr>
<td valign=top>
<a href="Built-in/csa2lxd.shtml">
csa2lxd</a></td>
<td>
Calculates an approximating cubic spline for two-dimensional input data.
</td>
</tr>
<!--csa2lxs-->
<tr>
<td valign=top>
<a href="Built-in/csa2lxs.shtml">
csa2lxs</a></td>
<td>
Calculates an approximating cubic spline for two-dimensional input data.
</td>
</tr>
<!--csa2s-->
<tr>
<td valign=top>
<a href="Built-in/csa2s.shtml">
csa2s</a></td>
<td>
Calculates an approximating cubic spline for two-dimensional input data.
</td>
</tr>
<!--csa2x-->
<tr>
<td valign=top>
<a href="Built-in/csa2x.shtml">
csa2x</a></td>
<td>
Calculates an approximating cubic spline for two-dimensional input data.
</td>
</tr>
<!--csa2xd-->
<tr>
<td valign=top>
<a href="Built-in/csa2xd.shtml">
csa2xd</a></td>
<td>
Calculates an approximating cubic spline for two-dimensional input data.
</td>
</tr>
<!--csa2xs-->
<tr>
<td valign=top>
<a href="Built-in/csa2xs.shtml">
csa2xs</a></td>
<td>
Calculates an approximating cubic spline for two-dimensional input data.
</td>
</tr>
<!--csa3-->
<tr>
<td valign=top>
<a href="Built-in/csa3.shtml">
csa3</a></td>
<td>
Calculates an approximating cubic spline for three-dimensional input data.
</td>
</tr>
<!--csa3d-->
<tr>
<td valign=top>
<a href="Built-in/csa3d.shtml">
csa3d</a></td>
<td>
Calculates an approximating cubic spline for three-dimensional input data.
</td>
</tr>
<!--csa3l-->
<tr>
<td valign=top>
<a href="Built-in/csa3l.shtml">
csa3l</a></td>
<td>
Calculates an approximating cubic spline for three-dimensional input data.
</td>
</tr>
<!--csa3ld-->
<tr>
<td valign=top>
<a href="Built-in/csa3ld.shtml">
csa3ld</a></td>
<td>
Calculates an approximating cubic spline for three-dimensional input data.
</td>
</tr>
<!--csa3ls-->
<tr>
<td valign=top>
<a href="Built-in/csa3ls.shtml">
csa3ls</a></td>
<td>
Calculates an approximating cubic spline for three-dimensional input data.
</td>
</tr>
<!--csa3lx-->
<tr>
<td valign=top>
<a href="Built-in/csa3lx.shtml">
csa3lx</a></td>
<td>
Calculates an approximating cubic spline for three-dimensional input data.
</td>
</tr>
<!--csa3lxd-->
<tr>
<td valign=top>
<a href="Built-in/csa3lxd.shtml">
csa3lxd</a></td>
<td>
Calculates an approximating cubic spline for three-dimensional input data.
</td>
</tr>
<!--csa3lxs-->
<tr>
<td valign=top>
<a href="Built-in/csa3lxs.shtml">
csa3lxs</a></td>
<td>
Calculates an approximating cubic spline for three-dimensional input data.
</td>
</tr>
<!--csa3s-->
<tr>
<td valign=top>
<a href="Built-in/csa3s.shtml">
csa3s</a></td>
<td>
Calculates an approximating cubic spline for three-dimensional input data.
</td>
</tr>
<!--csa3x-->
<tr>
<td valign=top>
<a href="Built-in/csa3x.shtml">
csa3x</a></td>
<td>
Calculates an approximating cubic spline for three-dimensional input data.
</td>
</tr>
<!--csa3xd-->
<tr>
<td valign=top>
<a href="Built-in/csa3xd.shtml">
csa3xd</a></td>
<td>
Calculates an approximating cubic spline for three-dimensional input data.
</td>
</tr>
<!--csa3xs-->
<tr>
<td valign=top>
<a href="Built-in/csa3xs.shtml">
csa3xs</a></td>
<td>
Calculates an approximating cubic spline for three-dimensional input data.
</td>
</tr>
<!--csc2s-->
<tr>
<td valign=top>
<a href="Built-in/csc2s.shtml">
csc2s</a></td>
<td>
Converts Cartesian coordinates on a unit sphere to spherical coordinates (lat/lon).
</td>
</tr>
<!--csgetp-->
<tr>
<td valign=top>
<a href="Built-in/csgetp.shtml">
csgetp</a></td>
<td>
Retrieves <a href="http://www.ncarg.ucar.edu//ngmath/definitions.html#ControlParameter">control parameters</a> for <a href="http://www.ncarg.ucar.edu//ngmath/cssgrid/csshome.html">Cssgrid</a> routines.
</td>
</tr>
<!--cshstringtolist-->
<tr>
<td valign=top>
<a href="Contributed/cshstringtolist.shtml">
cshstringtolist</a></td>
<td>
Converts a comma delimited string from csh and breaks it up into separate strings.
</td>
</tr>
<!--css2c-->
<tr>
<td valign=top>
<a href="Built-in/css2c.shtml">
css2c</a></td>
<td>
Converts spherical coordinates (lat/lon) to Cartesian coordinates on a unit sphere.
</td>
</tr>
<!--cssetp-->
<tr>
<td valign=top>
<a href="Built-in/cssetp.shtml">
cssetp</a></td>
<td>
Sets <a href="http://www.ncarg.ucar.edu//ngmath/definitions.html#ControlParameter">control parameters</a> for <a href="http://www.ncarg.ucar.edu//ngmath/cssgrid/csshome.html">Cssgrid</a> routines.
</td>
</tr>
<!--cssgrid-->
<tr>
<td valign=top>
<a href="Built-in/cssgrid.shtml">
cssgrid</a></td>
<td>
Uses <a href="http://www.ncarg.ucar.edu//ngmath/definitions.html#TensionSpline">tension splines</a> to interpolate unstructured (randomly-spaced) data on a unit sphere to data values on a rectilinear grid.
</td>
</tr>
<!--cssgrid_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/cssgrid_Wrap.shtml">
cssgrid_Wrap</a></td>
<td>
Uses <a href="http://www.ncarg.ucar.edu//ngmath/definitions.html#TensionSpline">tension splines</a> to interpolate unstructrued (randomly-spaced) data on a unit sphere to data values on a rectilinear grid (retains metadata).
</td>
</tr>
<!--csstri-->
<tr>
<td valign=top>
<a href="Built-in/csstri.shtml">
csstri</a></td>
<td>
Calculates a <a href="http://www.ncarg.ucar.edu//ngmath/definitions.html#DelaunayTriangulation">Delaunay triangulation</a> of data randomly positioned on the surface of a sphere.
</td>
</tr>
<!--csvoro-->
<tr>
<td valign=top>
<a href="Built-in/csvoro.shtml">
csvoro</a></td>
<td>
Determines <a href="http://www.ncarg.ucar.edu//ngmath/definitions.html#VoronoiPolygon">Voronoi polygons</a> for data randomly positioned on a sphere and returns vertices for the one surrounding a specified input point.
</td>
</tr>
<!--cumsum-->
<tr>
<td valign=top>
<a href="Built-in/cumsum.shtml">
cumsum</a></td>
<td>
Calculates the cumulative sum.
</td>
</tr>
<!--curvilinear_to_SCRIP-->
<tr>
<td valign=top>
<a href="ESMF/curvilinear_to_SCRIP.shtml">
curvilinear_to_SCRIP</a></td>
<td>
Writes the description of a curvilinear grid to a SCRIP file.
</td>
</tr>
<!--cz2ccm-->
<tr>
<td valign=top>
<a href="Built-in/cz2ccm.shtml">
cz2ccm</a></td>
<td>
Computes geopotential height in hybrid coordinates.
</td>
</tr>
<!--datatondc-->
<tr>
<td valign=top><a name="D"></a>
<a href="Built-in/datatondc.shtml">
datatondc</a></td>
<td>
Converts data units into normalized device coordinates (<a href="../Graphics/ndc.shtml">NDCs</a>).
</td>
</tr>
<!--day_of_week-->
<tr>
<td valign=top>
<a href="Built-in/day_of_week.shtml">
day_of_week</a></td>
<td>
Calculates the day of the week given month, day, and year (Gregorian calendar).
</td>
</tr>
<!--day_of_year-->
<tr>
<td valign=top>
<a href="Built-in/day_of_year.shtml">
day_of_year</a></td>
<td>
Calculates the day of the year (sometimes erroneously referred to as 'julian day') given Gregorian calendar month, day, and year.
</td>
</tr>
<!--days_in_month-->
<tr>
<td valign=top>
<a href="Built-in/days_in_month.shtml">
days_in_month</a></td>
<td>
Calculates the number of days in a month given month, day, and year.
</td>
</tr>
<!--dble2flt-->
<tr>
<td valign=top>
<a href="Contributed/dble2flt.shtml">
dble2flt</a></td>
<td>
Converts values of type double to values of type float and preserves metadata.
</td>
</tr>
<!--decimalPlaces-->
<tr>
<td valign=top>
<a href="Contributed/decimalPlaces.shtml">
decimalPlaces</a></td>
<td>
Truncates or rounds to the number of decimal places specified
</td>
</tr>
<!--decomposeSymAsym-->
<tr>
<td valign=top>
<a href="Diagnostics/decomposeSymAsym.shtml">
decomposeSymAsym</a></td>
<td>
Decompose a variable which is symmetric about the equator into symmetric and asymmetric parts.
</td>
</tr>
<!--default_fillvalue-->
<tr>
<td valign=top>
<a href="Built-in/default_fillvalue.shtml">
default_fillvalue</a></td>
<td>
Returns the default missing value for the given variable type.
</td>
</tr>
<!--delete-->
<tr>
<td valign=top>
<a href="Built-in/delete.shtml">
delete</a></td>
<td>
Deletes <a href="../Manuals/Ref_Manual/NclVariables.shtml">variables</a>, <a href="../Manuals/Ref_Manual/NclVariables.shtml#Attributes">attributes</a>, and <a href="../Manuals/Ref_Manual/NclVariables.shtml#Coordinates">coordinate variables</a>.
</td>
</tr>
<!--delete_VarAtts-->
<tr>
<td valign=top>
<a href="Contributed/delete_VarAtts.shtml">
delete_VarAtts</a></td>
<td>
Deletes one or more <a href="../Language/attributes.shtml">attributes</a>  associated with a variable.
</td>
</tr>
<!--depth_to_pres-->
<tr>
<td valign=top>
<a href="Built-in/depth_to_pres.shtml">
depth_to_pres</a></td>
<td>
Convert ocean depth to pressure.
</td>
</tr>
<!--destroy-->
<tr>
<td valign=top>
<a href="Built-in/destroy.shtml">
destroy</a></td>
<td>
Destroys objects from NCL.
</td>
</tr>
<!--determinant-->
<tr>
<td valign=top>
<a href="Built-in/determinant.shtml">
determinant</a></td>
<td>
Calculates the determinant of a square real matrix.
</td>
</tr>
<!--dewtemp_trh-->
<tr>
<td valign=top>
<a href="Built-in/dewtemp_trh.shtml">
dewtemp_trh</a></td>
<td>
Calculates the dew point temperature given temperature and relative humidity.
</td>
</tr>
<!--dgeevx_lapack-->
<tr>
<td valign=top>
<a href="Built-in/dgeevx_lapack.shtml">
dgeevx_lapack</a></td>
<td>
Given a square (N,N) real nonsymmetric matrix, compute the eigenvalues and, optionally, the left and/or right eigenvectors via  the LAPACK subroutine  <a href="http://www.netlib.org/lapack/patch-3.0/src/dgeevx.f"><b>dgeevx</b></a>.
</td>
</tr>
<!--dim_acumrun_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_acumrun_n.shtml">
dim_acumrun_n</a></td>
<td>
Calculates individual accumulated sums of sequences ('runs') of a specified length.
</td>
</tr>
<!--dim_avg-->
<tr>
<td valign=top>
<a href="Built-in/dim_avg.shtml">
dim_avg</a></td>
<td>
Computes the average of a variable's rightmost dimension at all other dimensions.
</td>
</tr>
<!--dim_avg_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_avg_n.shtml">
dim_avg_n</a></td>
<td>
Computes the average of a variable's given dimension(s) at all other dimensions.
</td>
</tr>
<!--dim_avg_n_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_avg_n_Wrap.shtml">
dim_avg_n_Wrap</a></td>
<td>
Computes the average of a variable's given dimensions at all other dimensions and retains metadata.
</td>
</tr>
<!--dim_avg_wgt-->
<tr>
<td valign=top>
<a href="Built-in/dim_avg_wgt.shtml">
dim_avg_wgt</a></td>
<td>
Computes the weighted average of a variable's rightmost dimension at all other dimensions.
</td>
</tr>
<!--dim_avg_wgt_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_avg_wgt_n.shtml">
dim_avg_wgt_n</a></td>
<td>
Computes the weighted average of a variable's given dimension at all other dimensions.
</td>
</tr>
<!--dim_avg_wgt_n_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_avg_wgt_n_Wrap.shtml">
dim_avg_wgt_n_Wrap</a></td>
<td>
Computes the weighted average of a variable's given dimension at all other dimensions and retains metadata.
</td>
</tr>
<!--dim_avg_wgt_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_avg_wgt_Wrap.shtml">
dim_avg_wgt_Wrap</a></td>
<td>
Computes the weighted average of a variable's rightmost dimension at all other dimensions and retains metadata.
</td>
</tr>
<!--dim_avg_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_avg_Wrap.shtml">
dim_avg_Wrap</a></td>
<td>
Computes the average of a variable's rightmost dimension at all other dimensions and retains metadata.
</td>
</tr>
<!--dim_cumsum-->
<tr>
<td valign=top>
<a href="Built-in/dim_cumsum.shtml">
dim_cumsum</a></td>
<td>
Calculates the cumulative sum along the rightmost dimension.
</td>
</tr>
<!--dim_cumsum_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_cumsum_n.shtml">
dim_cumsum_n</a></td>
<td>
Calculates the cumulative sum along the given dimension(s).
</td>
</tr>
<!--dim_cumsum_n_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_cumsum_n_Wrap.shtml">
dim_cumsum_n_Wrap</a></td>
<td>
Calculates the cumulative sum along the given dimension(s) and retains meta data.
</td>
</tr>
<!--dim_cumsum_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_cumsum_Wrap.shtml">
dim_cumsum_Wrap</a></td>
<td>
Calculates the cumulative sum along the rightmost dimension and retains meta data.
</td>
</tr>
<!--dim_gamfit_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_gamfit_n.shtml">
dim_gamfit_n</a></td>
<td>
Fit data to the two parameter gamma distribution.
</td>
</tr>
<!--dim_gbits-->
<tr>
<td valign=top>
<a href="Built-in/dim_gbits.shtml">
dim_gbits</a></td>
<td>
Unpacks bit chunks from the rightmost dimension of the input array.
</td>
</tr>
<!--dim_max-->
<tr>
<td valign=top>
<a href="Built-in/dim_max.shtml">
dim_max</a></td>
<td>
Finds the maximum of a variable's rightmost dimension at all other dimensions.
</td>
</tr>
<!--dim_max_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_max_n.shtml">
dim_max_n</a></td>
<td>
Finds the maximum of a variable's given dimensions at all other dimensions.
</td>
</tr>
<!--dim_max_n_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_max_n_Wrap.shtml">
dim_max_n_Wrap</a></td>
<td>
Computes the maximum of a variable's given dimensions at all other dimensions and retains metadata.
</td>
</tr>
<!--dim_median-->
<tr>
<td valign=top>
<a href="Built-in/dim_median.shtml">
dim_median</a></td>
<td>
Computes the median of a variable's rightmost dimension at all other dimensions.
</td>
</tr>
<!--dim_median_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_median_n.shtml">
dim_median_n</a></td>
<td>
Computes the median of a variable's given dimensions at all other dimensions.
</td>
</tr>
<!--dim_min-->
<tr>
<td valign=top>
<a href="Built-in/dim_min.shtml">
dim_min</a></td>
<td>
Finds the minimum of a variable's rightmost dimension at all other dimensions.
</td>
</tr>
<!--dim_min_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_min_n.shtml">
dim_min_n</a></td>
<td>
Finds the minimum of a variable's given dimensions at all other dimensions.
</td>
</tr>
<!--dim_min_n_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_min_n_Wrap.shtml">
dim_min_n_Wrap</a></td>
<td>
Computes the minimum of a variable's given dimensions at all other dimensions and retains metadata.
</td>
</tr>
<!--dim_num-->
<tr>
<td valign=top>
<a href="Built-in/dim_num.shtml">
dim_num</a></td>
<td>
Calculates the number of True values of a variable's rightmost dimension at all other dimensions.
</td>
</tr>
<!--dim_num_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_num_n.shtml">
dim_num_n</a></td>
<td>
Calculates the number of True values of a variable's given dimensions at all other dimensions.
</td>
</tr>
<!--dim_numrun_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_numrun_n.shtml">
dim_numrun_n</a></td>
<td>
Counts the number of "runs" (sequences) within a series containing zeros and ones.
</td>
</tr>
<!--dim_pqsort-->
<tr>
<td valign=top>
<a href="Built-in/dim_pqsort.shtml">
dim_pqsort</a></td>
<td>
Computes the permutation vector generated by sorting the <I>n</I> - 1th (rightmost) dimension.
</td>
</tr>
<!--dim_pqsort_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_pqsort_n.shtml">
dim_pqsort_n</a></td>
<td>
Computes the permutation vector generated by sorting the given dimension.
</td>
</tr>
<!--dim_product-->
<tr>
<td valign=top>
<a href="Built-in/dim_product.shtml">
dim_product</a></td>
<td>
Computes the product of a variable's rightmost dimension at all other dimensions.
</td>
</tr>
<!--dim_product_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_product_n.shtml">
dim_product_n</a></td>
<td>
Computes the product of a variable's given dimension(s) at all other dimensions.
</td>
</tr>
<!--dim_rmsd-->
<tr>
<td valign=top>
<a href="Built-in/dim_rmsd.shtml">
dim_rmsd</a></td>
<td>
Computes the root-mean-square-difference between two variables' rightmost  dimension at all other dimensions.
</td>
</tr>
<!--dim_rmsd_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_rmsd_n.shtml">
dim_rmsd_n</a></td>
<td>
Computes the root-mean-square-difference between two variables' given dimensions at all other dimensions.
</td>
</tr>
<!--dim_rmsd_n_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_rmsd_n_Wrap.shtml">
dim_rmsd_n_Wrap</a></td>
<td>
Computes the root-mean-square-difference between two variables' given dimensions at all other dimensions.
</td>
</tr>
<!--dim_rmsd_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_rmsd_Wrap.shtml">
dim_rmsd_Wrap</a></td>
<td>
Computes the root-mean-square-difference between two variables' rightmost  dimension at all other dimensions.
</td>
</tr>
<!--dim_rmvmean-->
<tr>
<td valign=top>
<a href="Built-in/dim_rmvmean.shtml">
dim_rmvmean</a></td>
<td>
Calculates and removes the mean of the (rightmost) dimension at all other dimensions.
</td>
</tr>
<!--dim_rmvmean_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_rmvmean_n.shtml">
dim_rmvmean_n</a></td>
<td>
Calculates and removes the mean of the given dimension(s) at all other dimensions.
</td>
</tr>
<!--dim_rmvmean_n_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_rmvmean_n_Wrap.shtml">
dim_rmvmean_n_Wrap</a></td>
<td>
Calculates and removes the mean of the given dimensions at all other dimensions and retains metadata.
</td>
</tr>
<!--dim_rmvmean_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_rmvmean_Wrap.shtml">
dim_rmvmean_Wrap</a></td>
<td>
Calculates and removes the mean of the (rightmost) dimension at all other dimensions and retains metadata.
</td>
</tr>
<!--dim_rmvmed-->
<tr>
<td valign=top>
<a href="Built-in/dim_rmvmed.shtml">
dim_rmvmed</a></td>
<td>
Calculates and removes the median of the (rightmost) dimension at all other dimensions.
</td>
</tr>
<!--dim_rmvmed_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_rmvmed_n.shtml">
dim_rmvmed_n</a></td>
<td>
Calculates and removes the median of the given dimension(s) at all other dimensions.
</td>
</tr>
<!--dim_rmvmed_n_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_rmvmed_n_Wrap.shtml">
dim_rmvmed_n_Wrap</a></td>
<td>
Calculates and removes the median of the given dimensions at all other dimensions and retains metadata.
</td>
</tr>
<!--dim_rmvmed_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_rmvmed_Wrap.shtml">
dim_rmvmed_Wrap</a></td>
<td>
Calculates and removes the median of the (rightmost) dimension at all other dimensions and retains metadata.
</td>
</tr>
<!--dim_spi_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_spi_n.shtml">
dim_spi_n</a></td>
<td>
Calculates the standardized precipitation index (SPI) by fitting a gamma or a Pearson Type III distribution to monthly precipitation values.
</td>
</tr>
<!--dim_standardize-->
<tr>
<td valign=top>
<a href="Built-in/dim_standardize.shtml">
dim_standardize</a></td>
<td>
Calculates standardized anomalies of the rightmost dimension at all other dimensions.
</td>
</tr>
<!--dim_standardize_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_standardize_n.shtml">
dim_standardize_n</a></td>
<td>
Calculates standardized anomalies of the given dimension(s) at all other dimensions.
</td>
</tr>
<!--dim_standardize_n_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_standardize_n_Wrap.shtml">
dim_standardize_n_Wrap</a></td>
<td>
Calculates standardized anomalies of the given dimensions at all other dimensions and retains metadata.
</td>
</tr>
<!--dim_standardize_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_standardize_Wrap.shtml">
dim_standardize_Wrap</a></td>
<td>
Calculates standardized anomalies of the rightmost dimension at all other dimensions and retains metadata.
</td>
</tr>
<!--dim_stat4-->
<tr>
<td valign=top>
<a href="Built-in/dim_stat4.shtml">
dim_stat4</a></td>
<td>
Computes the first four moments (average, variance, skewness, and kurtosis) of the rightmost dimension for all other dimensions.
</td>
</tr>
<!--dim_stat4_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_stat4_n.shtml">
dim_stat4_n</a></td>
<td>
Computes the first four moments (average, variance, skewness, and kurtosis) of the given dimension(s) for all other dimensions.
</td>
</tr>
<!--dim_stddev-->
<tr>
<td valign=top>
<a href="Built-in/dim_stddev.shtml">
dim_stddev</a></td>
<td>
Computes the sample standard deviation of a variable's rightmost dimension at all other dimensions.
</td>
</tr>
<!--dim_stddev_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_stddev_n.shtml">
dim_stddev_n</a></td>
<td>
Computes the sample standard deviation of a variable's given dimension(s) at all other dimensions.
</td>
</tr>
<!--dim_stddev_n_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_stddev_n_Wrap.shtml">
dim_stddev_n_Wrap</a></td>
<td>
Computes the sample standard deviation of a variable's given dimension(s) at all other dimensions and retains metadata.
</td>
</tr>
<!--dim_stddev_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_stddev_Wrap.shtml">
dim_stddev_Wrap</a></td>
<td>
Computes the sample standard deviation of a variable's rightmost dimension at all  other dimensions and retains metadata.
</td>
</tr>
<!--dim_sum-->
<tr>
<td valign=top>
<a href="Built-in/dim_sum.shtml">
dim_sum</a></td>
<td>
Computes the arithmetic sum of a variable's rightmost dimension at all other dimensions.
</td>
</tr>
<!--dim_sum_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_sum_n.shtml">
dim_sum_n</a></td>
<td>
Computes the arithmetic sum of a variable's given dimension(s) at all other dimensions.
</td>
</tr>
<!--dim_sum_n_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_sum_n_Wrap.shtml">
dim_sum_n_Wrap</a></td>
<td>
Computes the arithmetic sum of a variable's given dimensions at all other dimensions and retains metadata.
</td>
</tr>
<!--dim_sum_wgt-->
<tr>
<td valign=top>
<a href="Built-in/dim_sum_wgt.shtml">
dim_sum_wgt</a></td>
<td>
Computes the weighted sum of a variable's rightmost dimension at all other dimensions.
</td>
</tr>
<!--dim_sum_wgt_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_sum_wgt_n.shtml">
dim_sum_wgt_n</a></td>
<td>
Computes the weighted sum of a variable's given dimension at all other dimensions.
</td>
</tr>
<!--dim_sum_wgt_n_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_sum_wgt_n_Wrap.shtml">
dim_sum_wgt_n_Wrap</a></td>
<td>
Computes the weighted sum of a variable's given dimension at all other dimensions and retains metadata.
</td>
</tr>
<!--dim_sum_wgt_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_sum_wgt_Wrap.shtml">
dim_sum_wgt_Wrap</a></td>
<td>
Computes the weighted sum of a variable's rightmost dimension at all other dimensions and retains metadata.
</td>
</tr>
<!--dim_sum_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_sum_Wrap.shtml">
dim_sum_Wrap</a></td>
<td>
Computes the arithmetic sum of a variable's rightmost dimension at all other dimensions and retains metadata.
</td>
</tr>
<!--dim_variance-->
<tr>
<td valign=top>
<a href="Built-in/dim_variance.shtml">
dim_variance</a></td>
<td>
Computes the unbiased estimates of the variance of a variable's rightmost dimension.
</td>
</tr>
<!--dim_variance_n-->
<tr>
<td valign=top>
<a href="Built-in/dim_variance_n.shtml">
dim_variance_n</a></td>
<td>
Computes the unbiased estimates of the variance of a variable's given dimension(s) at all other dimensions.
</td>
</tr>
<!--dim_variance_n_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_variance_n_Wrap.shtml">
dim_variance_n_Wrap</a></td>
<td>
Computes unbiased estimates of the variance of a variable's given dimension(s) at all other dimensions and retains metadata.
</td>
</tr>
<!--dim_variance_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dim_variance_Wrap.shtml">
dim_variance_Wrap</a></td>
<td>
Computes unbiased estimates of the variance of a variable's rightmost dimension at all other dimensions and retains metadata.
</td>
</tr>
<!--dimsizes-->
<tr>
<td valign=top>
<a href="Built-in/dimsizes.shtml">
dimsizes</a></td>
<td>
Returns the dimension sizes of the input variable.
</td>
</tr>
<!--doubletobyte-->
<tr>
<td valign=top>
<a href="Built-in/doubletobyte.shtml">
doubletobyte</a></td>
<td>
Coerces values of type double to values of type byte (<font color=red>deprecated</font>; use <a href="Built-in/tobyte.shtml"><strong>tobyte</strong></a>).
</td>
</tr>
<!--doubletochar-->
<tr>
<td valign=top>
<a href="Built-in/doubletochar.shtml">
doubletochar</a></td>
<td>
Coerces values of type double to values of type character (<font color=red>deprecated</font>; use <a href="Built-in/tochar.shtml"><strong>tochar</strong></a>).
</td>
</tr>
<!--doubletocharacter-->
<tr>
<td valign=top>
<a href="Built-in/doubletocharacter.shtml">
doubletocharacter</a></td>
<td>
Coerces values of type double to values of type character (<font color=red>deprecated</font>; use <a href="Built-in/tochar.shtml"><strong>tochar</strong></a>).
</td>
</tr>
<!--doubletofloat-->
<tr>
<td valign=top>
<a href="Built-in/doubletofloat.shtml">
doubletofloat</a></td>
<td>
Coerces values of type double to values of type float (<font color=red>deprecated</font>; use <a href="Built-in/tofloat.shtml"><strong>tofloat</strong></a>).
</td>
</tr>
<!--doubletoint-->
<tr>
<td valign=top>
<a href="Built-in/doubletoint.shtml">
doubletoint</a></td>
<td>
Coerces values of type double to values of type integer (<font color=red>deprecated</font>; use <a href="Built-in/toint.shtml"><strong>toint</strong></a>).
</td>
</tr>
<!--doubletointeger-->
<tr>
<td valign=top>
<a href="Built-in/doubletointeger.shtml">
doubletointeger</a></td>
<td>
Coerces values of type double to values of type integer (<font color=red>deprecated</font>; use <a href="Built-in/tointeger.shtml"><strong>tointeger</strong></a>).
</td>
</tr>
<!--doubletolong-->
<tr>
<td valign=top>
<a href="Built-in/doubletolong.shtml">
doubletolong</a></td>
<td>
Coerces values of type double to values of type long (<font color=red>deprecated</font>; use <a href="Built-in/tolong.shtml"><strong>tolong</strong></a>).
</td>
</tr>
<!--doubletoshort-->
<tr>
<td valign=top>
<a href="Built-in/doubletoshort.shtml">
doubletoshort</a></td>
<td>
Coerces values of type double to values of type short (<font color=red>deprecated</font>; use <a href="Built-in/toshort.shtml"><strong>toshort</strong></a>).
</td>
</tr>
<!--dpres_hybrid_ccm-->
<tr>
<td valign=top>
<a href="Built-in/dpres_hybrid_ccm.shtml">
dpres_hybrid_ccm</a></td>
<td>
Calculates the pressure differences of a hybrid coordinate system.
</td>
</tr>
<!--dpres_plevel-->
<tr>
<td valign=top>
<a href="Built-in/dpres_plevel.shtml">
dpres_plevel</a></td>
<td>
Calculates the pressure layer thicknesses of a constant pressure level coordinate system.
</td>
</tr>
<!--dpres_plevel_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dpres_plevel_Wrap.shtml">
dpres_plevel_Wrap</a></td>
<td>
Calculates the pressure layer thicknesses of a constant pressure level coordinate system.
</td>
</tr>
<!--draw-->
<tr>
<td valign=top>
<a href="Built-in/draw.shtml">
draw</a></td>
<td>
Draws the given graphical objects.
</td>
</tr>
<!--draw_color_palette-->
<tr>
<td valign=top>
<a href="Built-in/draw_color_palette.shtml">
draw_color_palette</a></td>
<td>
Draws the given colors or color map as a series of filled boxes.
</td>
</tr>
<!--drawNDCGrid-->
<tr>
<td valign=top>
<a href="Shea_util/drawNDCGrid.shtml">
drawNDCGrid</a></td>
<td>
Draws NDC grid lines at 0.1 NDC coordinate intervals and labels them.
</td>
</tr>
<!--dsgetp-->
<tr>
<td valign=top>
<a href="Built-in/dsgetp.shtml">
dsgetp</a></td>
<td>
Gets <a href="http://www.ncarg.ucar.edu//ngmath/dsgrid/parameters.html">parameters</a> for <a href="http://www.ncarg.ucar.edu//ngmath/dsgrid/dshome.html">Dsgrid</a> routines.
</td>
</tr>
<!--dsgrid2-->
<tr>
<td valign=top>
<a href="Built-in/dsgrid2.shtml">
dsgrid2</a></td>
<td>
Interpolates data from an unstructured (randomly-spaced) grid to a rectilinear grid using inverse distance weighted interpolation.
</td>
</tr>
<!--dsgrid2d-->
<tr>
<td valign=top>
<a href="Built-in/dsgrid2d.shtml">
dsgrid2d</a></td>
<td>
Interpolates double data from an unstructured (randomly-spaced) grid to a rectilinear grid using inverse distance weighted interpolation. (<font color=red>Deprecated version</font>.)
</td>
</tr>
<!--dsgrid2s-->
<tr>
<td valign=top>
<a href="Built-in/dsgrid2s.shtml">
dsgrid2s</a></td>
<td>
Interpolates float data from an unstructured (randomly-spaced) grid to a rectilinear grid using inverse distance weighted interpolation. (<font color=red>Deprecated version</font>.)
</td>
</tr>
<!--dsgrid3-->
<tr>
<td valign=top>
<a href="Built-in/dsgrid3.shtml">
dsgrid3</a></td>
<td>
Interpolates data from an unstructured (randomly-spaced) grid to a 3D grid using inverse distance weighted interpolation.
</td>
</tr>
<!--dsgrid3d-->
<tr>
<td valign=top>
<a href="Built-in/dsgrid3d.shtml">
dsgrid3d</a></td>
<td>
Interpolates double data from an <a href="../glossary.shtml#UnstructuredGrid">unstructured</a> (randomly-spaced) grid to a 3D grid using inverse distance weighted interpolation.  (<font color=red>Deprecated version</font>.)
</td>
</tr>
<!--dsgrid3s-->
<tr>
<td valign=top>
<a href="Built-in/dsgrid3s.shtml">
dsgrid3s</a></td>
<td>
Interpolates float data from an <a href="../glossary.shtml#UnstructuredGrid">unstructured</a> (randomly-spaced) grid to a 3D grid using inverse distance weighted interpolation.  (<font color=red>Deprecated version</font>.)
</td>
</tr>
<!--dspnt2-->
<tr>
<td valign=top>
<a href="Built-in/dspnt2.shtml">
dspnt2</a></td>
<td>
Interpolates 2D data at specified points.
</td>
</tr>
<!--dspnt2d-->
<tr>
<td valign=top>
<a href="Built-in/dspnt2d.shtml">
dspnt2d</a></td>
<td>
Interpolates 2D data at specified points.   (<font color=red>Deprecated version</font>.)
</td>
</tr>
<!--dspnt2s-->
<tr>
<td valign=top>
<a href="Built-in/dspnt2s.shtml">
dspnt2s</a></td>
<td>
Interpolates 2D float data at specified points.   (<font color=red>Deprecated version</font>.)
</td>
</tr>
<!--dspnt3-->
<tr>
<td valign=top>
<a href="Built-in/dspnt3.shtml">
dspnt3</a></td>
<td>
Interpolates 3D data at specified points.
</td>
</tr>
<!--dspnt3d-->
<tr>
<td valign=top>
<a href="Built-in/dspnt3d.shtml">
dspnt3d</a></td>
<td>
Interpolates 3D double data at specified points. (<font color=red>Deprecated version</font>.)
</td>
</tr>
<!--dspnt3s-->
<tr>
<td valign=top>
<a href="Built-in/dspnt3s.shtml">
dspnt3s</a></td>
<td>
Interpolates 3D float data at specified points. (<font color=red>Deprecated version</font>.)
</td>
</tr>
<!--dssetp-->
<tr>
<td valign=top>
<a href="Built-in/dssetp.shtml">
dssetp</a></td>
<td>
Sets <a href="http://www.ncarg.ucar.edu//ngmath/dsgrid/parameters.html">parameters</a> for <a href="http://www.ncarg.ucar.edu//ngmath/dsgrid/dshome.html">Dsgrid</a> routines.
</td>
</tr>
<!--dtrend-->
<tr>
<td valign=top>
<a href="Built-in/dtrend.shtml">
dtrend</a></td>
<td>
Estimates and removes the least squares linear trend of the rightmost dimension from all grid points.
</td>
</tr>
<!--dtrend_leftdim-->
<tr>
<td valign=top>
<a href="Contributed/dtrend_leftdim.shtml">
dtrend_leftdim</a></td>
<td>
Estimates and removes the least squares linear trend of the <i>leftmost</i> dimension from all grid points and retains meta data.
</td>
</tr>
<!--dtrend_msg-->
<tr>
<td valign=top>
<a href="Built-in/dtrend_msg.shtml">
dtrend_msg</a></td>
<td>
Estimates and removes the least squares linear trend of the rightmost dimension from all grid points (<a href="../Language/fillval.shtml">missing values</a> allowed).
</td>
</tr>
<!--dtrend_msg_n-->
<tr>
<td valign=top>
<a href="Built-in/dtrend_msg_n.shtml">
dtrend_msg_n</a></td>
<td>
Estimates and removes the least squares linear trend of the <em>dim</em>-th dimension from all grid points (<a href="../Language/fillval.shtml">missing values</a> allowed).
</td>
</tr>
<!--dtrend_n-->
<tr>
<td valign=top>
<a href="Built-in/dtrend_n.shtml">
dtrend_n</a></td>
<td>
Estimates and removes the least squares linear trend of the given dimension from all grid points.
</td>
</tr>
<!--dtrend_quadratic-->
<tr>
<td valign=top>
<a href="Built-in/dtrend_quadratic.shtml">
dtrend_quadratic</a></td>
<td>
Estimates and removes the least squares quadratic trend of the rightmost dimension from all grid points.
</td>
</tr>
<!--dtrend_quadratic_msg_n-->
<tr>
<td valign=top>
<a href="Built-in/dtrend_quadratic_msg_n.shtml">
dtrend_quadratic_msg_n</a></td>
<td>
Estimates and removes the least squares quadratic trend of the <em>dim</em>-th dimension from all grid points (<a href="../Language/fillval.shtml">missing values</a> allowed).
</td>
</tr>
<!--dv2uvF-->
<tr>
<td valign=top>
<a href="Built-in/dv2uvF-1.shtml">
dv2uvF</a></td>
<td>
Computes the divergent (irrotational) wind components for a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a> via spherical harmonics.
</td>
</tr>
<!--dv2uvf-->
<tr>
<td valign=top>
<a href="Built-in/dv2uvf.shtml">
dv2uvf</a></td>
<td>
Computes the divergent (irrotational) wind components for a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a> via spherical harmonics.
</td>
</tr>
<!--dv2uvF_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dv2uvF_Wrap.shtml">
dv2uvF_Wrap</a></td>
<td>
Computes the divergent (irrotational) wind components for a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a> via spherical harmonics and retains metadata.
</td>
</tr>
<!--dv2uvG-->
<tr>
<td valign=top>
<a href="Built-in/dv2uvG-1.shtml">
dv2uvG</a></td>
<td>
Computes the divergent (irrotational) wind components for a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a> via spherical harmonics.
</td>
</tr>
<!--dv2uvg-->
<tr>
<td valign=top>
<a href="Built-in/dv2uvg.shtml">
dv2uvg</a></td>
<td>
Computes the divergent (irrotational) wind components for a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a> via spherical harmonics.
</td>
</tr>
<!--dv2uvG_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/dv2uvG_Wrap.shtml">
dv2uvG_Wrap</a></td>
<td>
Computes the divergent (irrotational) wind components for a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a> via spherical harmonics and retains metadata.
</td>
</tr>
<!--dz_height-->
<tr>
<td valign=top>
<a href="Built-in/dz_height.shtml">
dz_height</a></td>
<td>
Calculates the height layer thicknesses at each grid point over varying surface terrain.
</td>
</tr>
<!--echo_off-->
<tr>
<td valign=top><a name="E"></a>
<a href="Built-in/echo_off.shtml">
echo_off</a></td>
<td>
Disables echoing of NCL statements as they are encountered.
</td>
</tr>
<!--echo_on-->
<tr>
<td valign=top>
<a href="Built-in/echo_on.shtml">
echo_on</a></td>
<td>
Enables echoing of NCL statements as they are encountered.
</td>
</tr>
<!--eof2data-->
<tr>
<td valign=top>
<a href="Built-in/eof2data.shtml">
eof2data</a></td>
<td>
Reconstructs a data set from EOFs and EOF time series.
</td>
</tr>
<!--eof_north-->
<tr>
<td valign=top>
<a href="Contributed/eof_north.shtml">
eof_north</a></td>
<td>
Use North et al (MWR, 1982) equation 24 to evaluate eigenvalue separation.
</td>
</tr>
<!--eof_varimax-->
<tr>
<td valign=top>
<a href="https://www.ncl.ucar.edu/Document/Functions/Built-in/eof_varimax.shtml">
eof_varimax</a></td>
<td>
Rotates EOFs using the using Kaiser row normalization and the varimax criterion  (deprecated version).
</td>
</tr>
<!--eofcor-->
<tr>
<td valign=top>
<a href="Built-in/eofcor.shtml">
eofcor</a></td>
<td>
Calculates empirical orthogonal functions via a correlation matrix  (<i>NCL's original function</i>).
</td>
</tr>
<!--eofcor_pcmsg-->
<tr>
<td valign=top>
<a href="Built-in/eofcor_pcmsg.shtml">
eofcor_pcmsg</a></td>
<td>
Calculates empirical orthogonal functions via a correlation matrix  (missing values allowed) (deprecated version).
</td>
</tr>
<!--eofcor_ts-->
<tr>
<td valign=top>
<a href="Built-in/eofcor_ts.shtml">
eofcor_ts</a></td>
<td>
Calculates the time series of the amplitudes associated with each eigenvalue in an EOF which was calculated using a correlation matrix.
</td>
</tr>
<!--eofcor_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/eofcor_Wrap.shtml">
eofcor_Wrap</a></td>
<td>
Calculates empirical orthogonal functions and retains meta data.  (<i>NCL's original function</i>).
</td>
</tr>
<!--eofcov-->
<tr>
<td valign=top>
<a href="Built-in/eofcov.shtml">
eofcov</a></td>
<td>
Calculates empirical orthogonal functions via a covariance matrix  (original version).
</td>
</tr>
<!--eofcov_pcmsg-->
<tr>
<td valign=top>
<a href="Built-in/eofcov_pcmsg.shtml">
eofcov_pcmsg</a></td>
<td>
Calculates empirical orthogonal functions via a covariance matrix  (missing values allowed)(deprecated version).
</td>
</tr>
<!--eofcov_ts-->
<tr>
<td valign=top>
<a href="Built-in/eofcov_ts.shtml">
eofcov_ts</a></td>
<td>
Calculates the time series of the amplitudes associated with each eigenvalue in an EOF which was calculated using a covariance matrix.
</td>
</tr>
<!--eofcov_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/eofcov_Wrap.shtml">
eofcov_Wrap</a></td>
<td>
Calculates empirical orthogonal functions and retains meta data.  (<i>NCL's original EOF function</i>).
</td>
</tr>
<!--eofunc-->
<tr>
<td valign=top>
<a href="Built-in/eofunc.shtml">
eofunc</a></td>
<td>
Compute empirical orthogonal functions (EOFs, aka: Principal Component Analysis).
</td>
</tr>
<!--eofunc_north-->
<tr>
<td valign=top>
<a href="Contributed/eofunc_north.shtml">
eofunc_north</a></td>
<td>
Use North et al (MWR, 1982) equation 24 to evaluate eigenvalue separation.
</td>
</tr>
<!--eofunc_ts-->
<tr>
<td valign=top>
<a href="Built-in/eofunc_ts.shtml">
eofunc_ts</a></td>
<td>
Calculates the time series of the amplitudes associated with each eigenvalue in an EOF.
</td>
</tr>
<!--eofunc_ts_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/eofunc_ts_Wrap.shtml">
eofunc_ts_Wrap</a></td>
<td>
Calculates the time series of the amplitudes associated with each eigenvalue in an EOF and retains metadata.
</td>
</tr>
<!--eofunc_varimax-->
<tr>
<td valign=top>
<a href="Built-in/eofunc_varimax.shtml">
eofunc_varimax</a></td>
<td>
Rotates EOFs using the using Kaiser row normalization and the varimax criterion.
</td>
</tr>
<!--eofunc_varimax_reorder-->
<tr>
<td valign=top>
<a href="Contributed/eofunc_varimax_reorder.shtml">
eofunc_varimax_reorder</a></td>
<td>
Reorder the results returned by <a href="https://www.ncl.ucar.edu/Document/Functions/Built-in/eof_varimax.shtml"><strong>eof_varimax</strong></a> into  descending order by percent variance explained.
</td>
</tr>
<!--eofunc_varimax_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/eofunc_varimax_Wrap.shtml">
eofunc_varimax_Wrap</a></td>
<td>
Rotates EOFs using the using Kaiser row normalization and the varimax criterion and retains metadata.
</td>
</tr>
<!--eofunc_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/eofunc_Wrap.shtml">
eofunc_Wrap</a></td>
<td>
Computes empirical orthogonal functions (aka: Principal Component Analysis, Eigen Analysis) and retains metadata.
</td>
</tr>
<!--epsZero-->
<tr>
<td valign=top>
<a href="Contributed/epsZero.shtml">
epsZero</a></td>
<td>
Sets all values in input array to zero that are +/- a user supplied epsilon about zero.
</td>
</tr>
<!--equiv_sample_size-->
<tr>
<td valign=top>
<a href="Built-in/equiv_sample_size.shtml">
equiv_sample_size</a></td>
<td>
Estimates the number of independent values of a series of correlated observations.
</td>
</tr>
<!--erf-->
<tr>
<td valign=top>
<a href="Built-in/erf.shtml">
erf</a></td>
<td>
Evaluates the real error function.
</td>
</tr>
<!--erfc-->
<tr>
<td valign=top>
<a href="Built-in/erfc.shtml">
erfc</a></td>
<td>
Evaluates the real complementary  error function.
</td>
</tr>
<!--esacr-->
<tr>
<td valign=top>
<a href="Built-in/esacr.shtml">
esacr</a></td>
<td>
Computes sample auto-correlations
</td>
</tr>
<!--esacv-->
<tr>
<td valign=top>
<a href="Built-in/esacv.shtml">
esacv</a></td>
<td>
Computes sample auto-covariances
</td>
</tr>
<!--esccr-->
<tr>
<td valign=top>
<a href="Built-in/esccr.shtml">
esccr</a></td>
<td>
Computes sample cross-correlations.
</td>
</tr>
<!--esccv-->
<tr>
<td valign=top>
<a href="Built-in/esccv.shtml">
esccv</a></td>
<td>
Computes sample cross-covariances.
</td>
</tr>
<!--escorc-->
<tr>
<td valign=top>
<a href="Built-in/escorc.shtml">
escorc</a></td>
<td>
Computes sample linear cross-correlations at lag 0 only.
</td>
</tr>
<!--escorc_n-->
<tr>
<td valign=top>
<a href="Built-in/escorc_n.shtml">
escorc_n</a></td>
<td>
Computes sample cross-correlations at lag 0 only, across the given dimensions.
</td>
</tr>
<!--escovc-->
<tr>
<td valign=top>
<a href="Built-in/escovc.shtml">
escovc</a></td>
<td>
Computes sample cross-covariances at lag 0 only.
</td>
</tr>
<!--ESMF_regrid-->
<tr>
<td valign=top>
<a href="ESMF/ESMF_regrid.shtml">
ESMF_regrid</a></td>
<td>
Regrids data from one lat/lon grid to another, using ESMF software.
</td>
</tr>
<!--ESMF_regrid_gen_weights-->
<tr>
<td valign=top>
<a href="ESMF/ESMF_regrid_gen_weights.shtml">
ESMF_regrid_gen_weights</a></td>
<td>
Writes a weight file using the offline ESMF weight generator.
</td>
</tr>
<!--ESMF_regrid_with_weights-->
<tr>
<td valign=top>
<a href="ESMF/ESMF_regrid_with_weights.shtml">
ESMF_regrid_with_weights</a></td>
<td>
Using the provided weight file, regrids data from one lat/lon grid to another.
</td>
</tr>
<!--exit-->
<tr>
<td valign=top>
<a href="Built-in/exit.shtml">
exit</a></td>
<td>
Forces an NCL script to exit immediately.
</td>
</tr>
<!--exp-->
<tr>
<td valign=top>
<a href="Built-in/exp.shtml">
exp</a></td>
<td>
Computes the value of <b>e</b> (the base of natural logarithms) raised to the power of the input.
</td>
</tr>
<!--exp_tapersh-->
<tr>
<td valign=top>
<a href="Built-in/exp_tapersh.shtml">
exp_tapersh</a></td>
<td>
Performs tapering (filtering) of the spherical harmonic coefficients.
</td>
</tr>
<!--exp_tapersh_wgts-->
<tr>
<td valign=top>
<a href="Built-in/exp_tapersh_wgts.shtml">
exp_tapersh_wgts</a></td>
<td>
Calculates weights which can be used to perform tapering (filtering) of spherical harmonic coefficients.
</td>
</tr>
<!--exp_tapershC-->
<tr>
<td valign=top>
<a href="Built-in/exp_tapershC.shtml">
exp_tapershC</a></td>
<td>
Performs tapering (filtering) of the spherical harmonic coefficients.
</td>
</tr>
<!--ezfftb-->
<tr>
<td valign=top>
<a href="Built-in/ezfftb.shtml">
ezfftb</a></td>
<td>
Perform a Fourier synthesis from real and imaginary coefficients.
</td>
</tr>
<!--ezfftb_n-->
<tr>
<td valign=top>
<a href="Built-in/ezfftb_n.shtml">
ezfftb_n</a></td>
<td>
Perform a Fourier synthesis from real and imaginary coefficients on the given dimension.
</td>
</tr>
<!--ezfftf-->
<tr>
<td valign=top>
<a href="Built-in/ezfftf.shtml">
ezfftf</a></td>
<td>
Perform a Fourier analysis on a real periodic sequence.
</td>
</tr>
<!--ezfftf_n-->
<tr>
<td valign=top>
<a href="Built-in/ezfftf_n.shtml">
ezfftf_n</a></td>
<td>
Performs a Fourier analysis on a real periodic sequence on the given dimension.
</td>
</tr>
<!--f2fosh-->
<tr>
<td valign=top><a name="F"></a>
<a href="Built-in/f2fosh.shtml">
f2fosh</a></td>
<td>
Interpolates a scalar quantity from a <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid (including pole points) to a <a href="sphpk_grids.shtml#FixedOffsetGrids">fixed-offset</a> grid.
</td>
</tr>
<!--f2fosh_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/f2fosh_Wrap.shtml">
f2fosh_Wrap</a></td>
<td>
Interpolates a scalar quantity from a <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid (including pole points) to a <a href="sphpk_grids.shtml#FixedOffsetGrids">fixed-offset</a> grid (retains metadata).
</td>
</tr>
<!--f2foshv-->
<tr>
<td valign=top>
<a href="Built-in/f2foshv.shtml">
f2foshv</a></td>
<td>
Interpolates a vector quantity on a <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid (including pole points) to a <a href="sphpk_grids.shtml#FixedOffsetGrids">fixed-offset</a> grid.
</td>
</tr>
<!--f2foshv_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/f2foshv_Wrap.shtml">
f2foshv_Wrap</a></td>
<td>
Interpolates a vector quantity on a <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid (including pole points) to a <a href="sphpk_grids.shtml#FixedOffsetGrids">fixed-offset</a> grid (retains metadata).
</td>
</tr>
<!--f2fsh-->
<tr>
<td valign=top>
<a href="Built-in/f2fsh.shtml">
f2fsh</a></td>
<td>
Interpolates a scalar quantity from one <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid to another.
</td>
</tr>
<!--f2fsh_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/f2fsh_Wrap.shtml">
f2fsh_Wrap</a></td>
<td>
Interpolates a scalar quantity from one <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid to another (retains metadata).
</td>
</tr>
<!--f2fshv-->
<tr>
<td valign=top>
<a href="Built-in/f2fshv.shtml">
f2fshv</a></td>
<td>
Interpolates a vector quantity from one <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid to another.
</td>
</tr>
<!--f2fshv_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/f2fshv_Wrap.shtml">
f2fshv_Wrap</a></td>
<td>
Interpolates a vector quantity from one <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid to another (retains metadata).
</td>
</tr>
<!--f2gsh-->
<tr>
<td valign=top>
<a href="Built-in/f2gsh.shtml">
f2gsh</a></td>
<td>
Interpolates a scalar quantity from a <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid to a <a href="sphpk_grids.shtml#GaussianGrids">Gaussian</a> grid (with optional truncation).
</td>
</tr>
<!--f2gsh_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/f2gsh_Wrap.shtml">
f2gsh_Wrap</a></td>
<td>
Interpolates a scalar quantity from a <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid to a <a href="sphpk_grids.shtml#GaussianGrids">Gaussian</a> grid (with optional truncation) (retains metadata).
</td>
</tr>
<!--f2gshv-->
<tr>
<td valign=top>
<a href="Built-in/f2gshv.shtml">
f2gshv</a></td>
<td>
Interpolates a vector quantity on a <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid to a <a href="sphpk_grids.shtml#GaussianGrids">Gaussian</a> grid (optional truncation).
</td>
</tr>
<!--f2gshv_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/f2gshv_Wrap.shtml">
f2gshv_Wrap</a></td>
<td>
Interpolates a vector quantity on a <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid to a <a href="sphpk_grids.shtml#GaussianGrids">Gaussian</a> grid (optional truncation) (retains metadata).
</td>
</tr>
<!--fabs-->
<tr>
<td valign=top>
<a href="Built-in/fabs.shtml">
fabs</a></td>
<td>
Computes the absolute value of numeric types.
</td>
</tr>
<!--fbindirread-->
<tr>
<td valign=top>
<a href="Built-in/fbindirread.shtml">
fbindirread</a></td>
<td>
Reads binary records written by a Fortran direct access write or C write.
</td>
</tr>
<!--fbindirSwap-->
<tr>
<td valign=top>
<a href="Contributed/fbindirSwap.shtml">
fbindirSwap</a></td>
<td>
Reads byte-reversed data and writes output file that can be read by <a href="Built-in/fbindirread.shtml"><strong>fbindirread</strong></a> or <a href="Built-in/cbinread.shtml"><strong>cbinread</strong></a> <font color=red>(deprecated)</font>.
</td>
</tr>
<!--fbindirwrite-->
<tr>
<td valign=top>
<a href="Built-in/fbindirwrite.shtml">
fbindirwrite</a></td>
<td>
Writes binary records to a file in manner analogous to fortran's "access=direct".
</td>
</tr>
<!--fbinnumrec-->
<tr>
<td valign=top>
<a href="Built-in/fbinnumrec.shtml">
fbinnumrec</a></td>
<td>
Returns the number of unformatted sequential Fortran records in a binary file.
</td>
</tr>
<!--fbinread-->
<tr>
<td valign=top>
<a href="Built-in/fbinread.shtml">
fbinread</a></td>
<td>
Reads one binary record that has been written using an UNFORMATTED FORTRAN write.
</td>
</tr>
<!--fbinrecread-->
<tr>
<td valign=top>
<a href="Built-in/fbinrecread.shtml">
fbinrecread</a></td>
<td>
Reads unformatted sequential access Fortran binary files.
</td>
</tr>
<!--fbinrecwrite-->
<tr>
<td valign=top>
<a href="Built-in/fbinrecwrite.shtml">
fbinrecwrite</a></td>
<td>
Writes a single unformatted sequential access Fortran record to a file.
</td>
</tr>
<!--fbinseqSwap1-->
<tr>
<td valign=top>
<a href="Contributed/fbinseqSwap1.shtml">
fbinseqSwap1</a></td>
<td>
Byte swaps Fortran sequential files <font color=red>(deprecated)</font>.
</td>
</tr>
<!--fbinseqSwap2-->
<tr>
<td valign=top>
<a href="Contributed/fbinseqSwap2.shtml">
fbinseqSwap2</a></td>
<td>
Byte swaps Fortran sequential files (more memory friendly) <font color=red>(deprecated)</font>.
</td>
</tr>
<!--fbinwrite-->
<tr>
<td valign=top>
<a href="Built-in/fbinwrite.shtml">
fbinwrite</a></td>
<td>
Writes a single  binary record to a file in manner analogous to fortran's "form=unformatted, access=sequential".
</td>
</tr>
<!--fft2db-->
<tr>
<td valign=top>
<a href="Built-in/fft2db.shtml">
fft2db</a></td>
<td>
Performs a two-dimensional discrete backward Fourier transform (Fourier synthesis).
</td>
</tr>
<!--fft2df-->
<tr>
<td valign=top>
<a href="Built-in/fft2df.shtml">
fft2df</a></td>
<td>
Performs a two-dimensional forward real discrete Fourier transform (i.e., Fourier analysis) of a real periodic array.
</td>
</tr>
<!--fftshift-->
<tr>
<td valign=top>
<a href="Built-in/fftshift.shtml">
fftshift</a></td>
<td>
Rearranges an array in a manner similar to Matlab's <a href="http://www.mathworks.com/help/matlab/ref/fftshift.html"><b>fftshift</b></a> function.
</td>
</tr>
<!--fileattdef-->
<tr>
<td valign=top>
<a href="Built-in/fileattdef.shtml">
fileattdef</a></td>
<td>
Defines global (file) attributes associated with a  <a href="../Manuals/Ref_Manual/NclFormatSupport.shtml">supported file</a>.
</td>
</tr>
<!--filechunkdimdef-->
<tr>
<td valign=top>
<a href="Built-in/filechunkdimdef.shtml">
filechunkdimdef</a></td>
<td>
Defines chunking dimension names, dimension sizes, unlimited dimensions on a  <a href="../Manuals/Ref_Manual/NclFormatSupport.shtml">supported file</a>.
</td>
</tr>
<!--filedimdef-->
<tr>
<td valign=top>
<a href="Built-in/filedimdef.shtml">
filedimdef</a></td>
<td>
Defines dimension names, dimension sizes, unlimited dimensions on a  <a href="../Manuals/Ref_Manual/NclFormatSupport.shtml">supported file</a>.
</td>
</tr>
<!--fileexists-->
<tr>
<td valign=top>
<a href="Built-in/fileexists.shtml">
fileexists</a></td>
<td>
Checks for existence of any UNIX file.
</td>
</tr>
<!--filegrpdef-->
<tr>
<td valign=top>
<a href="Built-in/filegrpdef.shtml">
filegrpdef</a></td>
<td>
Defines a list of group (names), for a <a href="../Manuals/Ref_Manual/NclFormatSupport.shtml">supported file</a>, or group.
</td>
</tr>
<!--filevarattdef-->
<tr>
<td valign=top>
<a href="Built-in/filevarattdef.shtml">
filevarattdef</a></td>
<td>
Copies attributes from an input variable to one or more variables on a  <a href="../Manuals/Ref_Manual/NclFormatSupport.shtml">supported file</a>.
</td>
</tr>
<!--filevarchunkdef-->
<tr>
<td valign=top>
<a href="Built-in/filevarchunkdef.shtml">
filevarchunkdef</a></td>
<td>
Defines a list of variable names, variable var_types, and variable dimension names for a <a href="../Manuals/Ref_Manual/NclFormatSupport.shtml">supported file</a>.
</td>
</tr>
<!--filevarcompressleveldef-->
<tr>
<td valign=top>
<a href="Built-in/filevarcompressleveldef.shtml">
filevarcompressleveldef</a></td>
<td>
Defines a list of variable names, variable var_types, and variable dimension names for a <a href="../Manuals/Ref_Manual/NclFormatSupport.shtml">supported file</a>.
</td>
</tr>
<!--filevardef-->
<tr>
<td valign=top>
<a href="Built-in/filevardef.shtml">
filevardef</a></td>
<td>
Defines a list of variable names, variable types, and variable dimension names for a <a href="../Manuals/Ref_Manual/NclFormatSupport.shtml">supported file</a>.
</td>
</tr>
<!--filevardimsizes-->
<tr>
<td valign=top>
<a href="Built-in/filevardimsizes.shtml">
filevardimsizes</a></td>
<td>
Returns the dimension sizes of variable on a <a href="../Manuals/Ref_Manual/NclFormatSupport.shtml">supported file</a>.
</td>
</tr>
<!--filwgts_lancos-->
<tr>
<td valign=top>
<a href="Built-in/filwgts_lancos.shtml">
filwgts_lancos</a></td>
<td>
Calculates one-dimensional filter weights (deprecated).
</td>
</tr>
<!--filwgts_lanczos-->
<tr>
<td valign=top>
<a href="Built-in/filwgts_lanczos.shtml">
filwgts_lanczos</a></td>
<td>
Calculates one-dimensional filter weights.
</td>
</tr>
<!--filwgts_normal-->
<tr>
<td valign=top>
<a href="Built-in/filwgts_normal.shtml">
filwgts_normal</a></td>
<td>
Calculates one-dimensional filter weights based upon the normal (gaussian) distribution.
</td>
</tr>
<!--floattobyte-->
<tr>
<td valign=top>
<a href="Built-in/floattobyte.shtml">
floattobyte</a></td>
<td>
Coerces values of type float to values of type byte.
</td>
</tr>
<!--floattochar-->
<tr>
<td valign=top>
<a href="Built-in/floattochar.shtml">
floattochar</a></td>
<td>
Coerces values of type float to values of type character.
</td>
</tr>
<!--floattocharacter-->
<tr>
<td valign=top>
<a href="Built-in/floattocharacter.shtml">
floattocharacter</a></td>
<td>
Coerces values of type float to values of type character.
</td>
</tr>
<!--floattoint-->
<tr>
<td valign=top>
<a href="Built-in/floattoint.shtml">
floattoint</a></td>
<td>
Coerces values of type float to values of type integer.
</td>
</tr>
<!--floattointeger-->
<tr>
<td valign=top>
<a href="Built-in/floattointeger.shtml">
floattointeger</a></td>
<td>
Coerces values of type float to values of type integer.
</td>
</tr>
<!--floattolong-->
<tr>
<td valign=top>
<a href="Built-in/floattolong.shtml">
floattolong</a></td>
<td>
Coerces values of type float to values of type long.
</td>
</tr>
<!--floattoshort-->
<tr>
<td valign=top>
<a href="Built-in/floattoshort.shtml">
floattoshort</a></td>
<td>
Coerces values of type float to values of type short.
</td>
</tr>
<!--floor-->
<tr>
<td valign=top>
<a href="Built-in/floor.shtml">
floor</a></td>
<td>
Computes the largest integer value smaller than the input.
</td>
</tr>
<!--flt2dble-->
<tr>
<td valign=top>
<a href="Contributed/flt2dble.shtml">
flt2dble</a></td>
<td>
Converts values of type float to values of type double and preserves metadata.
</td>
</tr>
<!--flt2string-->
<tr>
<td valign=top>
<a href="Contributed/flt2string.shtml">
flt2string</a></td>
<td>
Converts values of type float to values of type string.
</td>
</tr>
<!--fluxEddy-->
<tr>
<td valign=top>
<a href="Built-in/fluxEddy.shtml">
fluxEddy</a></td>
<td>
Calculates time averaged eddy flux quantities.
</td>
</tr>
<!--fo2fsh-->
<tr>
<td valign=top>
<a href="Built-in/fo2fsh.shtml">
fo2fsh</a></td>
<td>
Interpolates a scalar quantity from a <a href="sphpk_grids.shtml#FixedOffsetGrids">fixed-offset</a> grid to a <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid.
</td>
</tr>
<!--fo2fsh_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/fo2fsh_Wrap.shtml">
fo2fsh_Wrap</a></td>
<td>
Interpolates a scalar quantity from a <a href="sphpk_grids.shtml#FixedOffsetGrids">fixed-offset</a> grid to a <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid (retains metadata).
</td>
</tr>
<!--fo2fshv-->
<tr>
<td valign=top>
<a href="Built-in/fo2fshv.shtml">
fo2fshv</a></td>
<td>
Interpolates a vector quantity from a <a href="sphpk_grids.shtml#FixedOffsetGrids">fixed-offset</a> grid to a <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid.
</td>
</tr>
<!--fo2fshv_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/fo2fshv_Wrap.shtml">
fo2fshv_Wrap</a></td>
<td>
Interpolates a vector quantity from a <a href="sphpk_grids.shtml#FixedOffsetGrids">fixed-offset</a> grid to a <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid (retains metadata).
</td>
</tr>
<!--fourier_info-->
<tr>
<td valign=top>
<a href="Built-in/fourier_info.shtml">
fourier_info</a></td>
<td>
Performs fourier analysis on one or more periodic series.
</td>
</tr>
<!--frame-->
<tr>
<td valign=top>
<a href="Built-in/frame.shtml">
frame</a></td>
<td>
Updates and clears the given workstation objects.
</td>
</tr>
<!--fspan-->
<tr>
<td valign=top>
<a href="Built-in/fspan.shtml">
fspan</a></td>
<td>
Creates an array of evenly-spaced floating point numbers.
</td>
</tr>
<!--ftcurv-->
<tr>
<td valign=top>
<a href="Built-in/ftcurv.shtml">
ftcurv</a></td>
<td>
Calculates an interpolatory spline through a sequence of functional values.
</td>
</tr>
<!--ftcurvd-->
<tr>
<td valign=top>
<a href="Built-in/ftcurvd.shtml">
ftcurvd</a></td>
<td>
Calculates the derivatives of an interpolatory spline under tension.
</td>
</tr>
<!--ftcurvi-->
<tr>
<td valign=top>
<a href="Built-in/ftcurvi.shtml">
ftcurvi</a></td>
<td>
Calculates integrals of an interpolatory spline under tension between two user-specified limits.
</td>
</tr>
<!--ftcurvp-->
<tr>
<td valign=top>
<a href="Built-in/ftcurvp.shtml">
ftcurvp</a></td>
<td>
Calculates an interpolatory spline under tension through a sequence of functional values for a periodic function.
</td>
</tr>
<!--ftcurvpi-->
<tr>
<td valign=top>
<a href="Built-in/ftcurvpi.shtml">
ftcurvpi</a></td>
<td>
Calculates an integral of an interpolatory spline between two specified points.
</td>
</tr>
<!--ftcurvps-->
<tr>
<td valign=top>
<a href="Built-in/ftcurvps.shtml">
ftcurvps</a></td>
<td>
Calculates a smoothing spline.
</td>
</tr>
<!--ftcurvs-->
<tr>
<td valign=top>
<a href="Built-in/ftcurvs.shtml">
ftcurvs</a></td>
<td>
Calculates a smoothing spline.
</td>
</tr>
<!--ftest-->
<tr>
<td valign=top>
<a href="Built-in/ftest.shtml">
ftest</a></td>
<td>
Applies F-test for variances and returns an estimate of the statistical significance.
</td>
</tr>
<!--ftgetp-->
<tr>
<td valign=top>
<a href="Built-in/ftgetp.shtml">
ftgetp</a></td>
<td>
Retrieves <a href="http://www.ncarg.ucar.edu//ngmath/definitions.html#ControlParameter">control parameters</a> for <a href="http://www.ncarg.ucar.edu//ngmath/fitgrid/fithome.html">Fitgrid</a> routines.
</td>
</tr>
<!--ftkurv-->
<tr>
<td valign=top>
<a href="Built-in/ftkurv.shtml">
ftkurv</a></td>
<td>
Calculates an interpolatory spline for parametric curves.
</td>
</tr>
<!--ftkurvd-->
<tr>
<td valign=top>
<a href="Built-in/ftkurvd.shtml">
ftkurvd</a></td>
<td>
Calculates an interpolatory spline for parametric curves; it also calculates first and second derivatives of the interpolatory spline.
</td>
</tr>
<!--ftkurvp-->
<tr>
<td valign=top>
<a href="Built-in/ftkurvp.shtml">
ftkurvp</a></td>
<td>
Calculates an interpolatory spline under tension through a sequence of points in the plane forming a closed curve.
</td>
</tr>
<!--ftkurvpd-->
<tr>
<td valign=top>
<a href="Built-in/ftkurvpd.shtml">
ftkurvpd</a></td>
<td>
Calculates an interpolatory spline for closed parametric curves; it also calculates first and second derivatives of the interpolatory spline.
</td>
</tr>
<!--ftsetp-->
<tr>
<td valign=top>
<a href="Built-in/ftsetp.shtml">
ftsetp</a></td>
<td>
Sets <a href="http://www.ncarg.ucar.edu//ngmath/definitions.html#ControlParameter">control parameters</a> for <a href="http://www.ncarg.ucar.edu//ngmath/fitgrid/fithome.html">Fitgrid</a> routines.
</td>
</tr>
<!--ftsurf-->
<tr>
<td valign=top>
<a href="Built-in/ftsurf.shtml">
ftsurf</a></td>
<td>
Calculates an interpolatory surface passing through a rectangular grid of function values.
</td>
</tr>
<!--g2fsh-->
<tr>
<td valign=top><a name="G"></a>
<a href="Built-in/g2fsh.shtml">
g2fsh</a></td>
<td>
Interpolates a scalar quantity from a <a href="sphpk_grids.shtml#GaussianGrids">Gaussian</a> grid to a <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid.
</td>
</tr>
<!--g2fsh_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/g2fsh_Wrap.shtml">
g2fsh_Wrap</a></td>
<td>
Interpolates a scalar quantity from a <a href="sphpk_grids.shtml#GaussianGrids">Gaussian</a> grid to a <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid (retains metadata).
</td>
</tr>
<!--g2fshv-->
<tr>
<td valign=top>
<a href="Built-in/g2fshv.shtml">
g2fshv</a></td>
<td>
Interpolates a vector quantity from a <a href="sphpk_grids.shtml#GaussianGrids">Gaussian</a> grid to a <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid.
</td>
</tr>
<!--g2fshv_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/g2fshv_Wrap.shtml">
g2fshv_Wrap</a></td>
<td>
Interpolates a vector quantity from a <a href="sphpk_grids.shtml#GaussianGrids">Gaussian</a> grid to a <a href="sphpk_grids.shtml#FixedGrids">fixed</a> grid (retains metadata).
</td>
</tr>
<!--g2gsh-->
<tr>
<td valign=top>
<a href="Built-in/g2gsh.shtml">
g2gsh</a></td>
<td>
Interpolates a scalar quantity from one <a href="sphpk_grids.shtml#GaussianGrids">Gaussian</a> grid to another (with optional truncation).
</td>
</tr>
<!--g2gsh_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/g2gsh_Wrap.shtml">
g2gsh_Wrap</a></td>
<td>
Interpolates a scalar quantity from one <a href="sphpk_grids.shtml#GaussianGrids">Gaussian</a> grid to another (with optional truncation) (retains metadata).
</td>
</tr>
<!--g2gshv-->
<tr>
<td valign=top>
<a href="Built-in/g2gshv.shtml">
g2gshv</a></td>
<td>
Interpolates a vector quantity from one <a href="sphpk_grids.shtml#GaussianGrids">Gaussian</a> to another (optional truncation).
</td>
</tr>
<!--g2gshv_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/g2gshv_Wrap.shtml">
g2gshv_Wrap</a></td>
<td>
Interpolates a vector quantity from one <a href="sphpk_grids.shtml#GaussianGrids">Gaussian</a> to another (optional truncation) (retains metadata).
</td>
</tr>
<!--gamma-->
<tr>
<td valign=top>
<a href="Built-in/gamma.shtml">
gamma</a></td>
<td>
Evaluates the complete gamma function.
</td>
</tr>
<!--gammainc-->
<tr>
<td valign=top>
<a href="Built-in/gammainc.shtml">
gammainc</a></td>
<td>
Evaluates the incomplete gamma function.
</td>
</tr>
<!--gaus-->
<tr>
<td valign=top>
<a href="Built-in/gaus.shtml">
gaus</a></td>
<td>
Computes gaussian latitudes and weights.
</td>
</tr>
<!--gaus_lobat-->
<tr>
<td valign=top>
<a href="Built-in/gaus_lobat.shtml">
gaus_lobat</a></td>
<td>
Computes gaussian latitudes and weights using Gauss-Lobatto quadrature.
</td>
</tr>
<!--gaus_lobat_wgt-->
<tr>
<td valign=top>
<a href="Built-in/gaus_lobat_wgt.shtml">
gaus_lobat_wgt</a></td>
<td>
Computes Gauss-Lobatto weights given a one-dimensional array of  Gauss-Lobatto latitudes.
</td>
</tr>
<!--gc_aangle-->
<tr>
<td valign=top>
<a href="Built-in/gc_aangle.shtml">
gc_aangle</a></td>
<td>
Finds the acute angle between two great circles on the globe.
</td>
</tr>
<!--gc_clkwise-->
<tr>
<td valign=top>
<a href="Built-in/gc_clkwise.shtml">
gc_clkwise</a></td>
<td>
Tests clockwise/counterclockwise ordering of points on spherical polygon.
</td>
</tr>
<!--gc_dangle-->
<tr>
<td valign=top>
<a href="Built-in/gc_dangle.shtml">
gc_dangle</a></td>
<td>
Finds the directed angle between two great circles having a specified intersection point.
</td>
</tr>
<!--gc_inout-->
<tr>
<td valign=top>
<a href="Built-in/gc_inout.shtml">
gc_inout</a></td>
<td>
Determines if a list of lat/lon specified points are inside or outside of spherical lat/lon polygon(s).
</td>
</tr>
<!--gc_latlon-->
<tr>
<td valign=top>
<a href="Built-in/gc_latlon.shtml">
gc_latlon</a></td>
<td>
Finds the great circle distance (true surface distance) between two points on the globe and interpolates points along the great circle.
</td>
</tr>
<!--gc_onarc-->
<tr>
<td valign=top>
<a href="Built-in/gc_onarc.shtml">
gc_onarc</a></td>
<td>
Determines if a point on the globe lies on a specified great circle arc.
</td>
</tr>
<!--gc_pnt2gc-->
<tr>
<td valign=top>
<a href="Built-in/gc_pnt2gc.shtml">
gc_pnt2gc</a></td>
<td>
Finds the angular distance from a point to a great circle.
</td>
</tr>
<!--gc_qarea-->
<tr>
<td valign=top>
<a href="Built-in/gc_qarea.shtml">
gc_qarea</a></td>
<td>
Finds the area of a quadrilateral patch on the unit sphere.
</td>
</tr>
<!--gc_tarea-->
<tr>
<td valign=top>
<a href="Built-in/gc_tarea.shtml">
gc_tarea</a></td>
<td>
Finds the area of a triangular patch on the unit sphere.
</td>
</tr>
<!--generate_2d_array-->
<tr>
<td valign=top>
<a href="Built-in/generate_2d_array.shtml">
generate_2d_array</a></td>
<td>
Generates a "nice" 2D array of pseudo random data, especially for use in 2D graphics.
</td>
</tr>
<!--generate_resample_indices-->
<tr>
<td valign=top>
<a href="Contributed/generate_resample_indices.shtml">
generate_resample_indices</a></td>
<td>
Generate indices (subscripts) for resampling: with and without replacement.
</td>
</tr>
<!--generate_sample_indices-->
<tr>
<td valign=top>
<a href="Contributed/generate_sample_indices.shtml">
generate_sample_indices</a></td>
<td>
Generate indices (subscripts) for resampling: with and without replacement.
</td>
</tr>
<!--generate_unique_indices-->
<tr>
<td valign=top>
<a href="Contributed/generate_unique_indices.shtml">
generate_unique_indices</a></td>
<td>
Generate unique random indices (subscripts).
</td>
</tr>
<!--genNormalDist-->
<tr>
<td valign=top>
<a href="Contributed/genNormalDist.shtml">
genNormalDist</a></td>
<td>
Generates a normal distribution.
</td>
</tr>
<!--get1Dindex-->
<tr>
<td valign=top>
<a href="Contributed/get1Dindex.shtml">
get1Dindex</a></td>
<td>
Finds the indices of a one-dimensional array which exactly match a user specified list of  values.
</td>
</tr>
<!--get1Dindex_Collapse-->
<tr>
<td valign=top>
<a href="Contributed/get1Dindex_Collapse.shtml">
get1Dindex_Collapse</a></td>
<td>
Returns a one dimensional array of subscript indices that DO NOT match the values contained in a user specified list.
</td>
</tr>
<!--get1Dindex_Exclude-->
<tr>
<td valign=top>
<a href="Contributed/get1Dindex_Exclude.shtml">
get1Dindex_Exclude</a></td>
<td>
Returns a one dimensional array of subscript indices that DO NOT match the values contained in a user specified list.
</td>
</tr>
<!--get_color_index-->
<tr>
<td valign=top>
<a href="Built-in/get_color_index.shtml">
get_color_index</a></td>
<td>
Chooses a color index for a scalar value, given a color map and a range of values.
</td>
</tr>
<!--get_color_rgba-->
<tr>
<td valign=top>
<a href="Built-in/get_color_rgba.shtml">
get_color_rgba</a></td>
<td>
Chooses an RGB triplet or RGBA quadruplet for a scalar value, given a color map and a range of values.
</td>
</tr>
<!--get_cpu_time-->
<tr>
<td valign=top>
<a href="Built-in/get_cpu_time.shtml">
get_cpu_time</a></td>
<td>
Returns the CPU time used by NCL.
</td>
</tr>
<!--get_file_suffix-->
<tr>
<td valign=top>
<a href="Contributed/get_file_suffix.shtml">
get_file_suffix</a></td>
<td>
Extract the suffix associated with a file name.
</td>
</tr>
<!--get_isolines-->
<tr>
<td valign=top>
<a href="Built-in/get_isolines.shtml">
get_isolines</a></td>
<td>
Retrieves the points that define a contour line.
</td>
</tr>
<!--get_ncl_version-->
<tr>
<td valign=top>
<a href="Built-in/get_ncl_version.shtml">
get_ncl_version</a></td>
<td>
Returns the current NCL version.
</td>
</tr>
<!--get_script_name-->
<tr>
<td valign=top>
<a href="Built-in/get_script_name.shtml">
get_script_name</a></td>
<td>
Returns the name of a script of commands provided to NCL for execution.
</td>
</tr>
<!--get_script_prefix_name-->
<tr>
<td valign=top>
<a href="Built-in/get_script_prefix_name.shtml">
get_script_prefix_name</a></td>
<td>
Returns the name of a script of commands provided to NCL for execution, if provided, with any script name tag removed.
</td>
</tr>
<!--get_sphere_radius-->
<tr>
<td valign=top>
<a href="Built-in/get_sphere_radius.shtml">
get_sphere_radius</a></td>
<td>
Retrieves the radius of a sphere used in spherical harmonic routines.
</td>
</tr>
<!--get_unique_values-->
<tr>
<td valign=top>
<a href="Built-in/get_unique_values.shtml">
get_unique_values</a></td>
<td>
Returns the unique values of the given array.
</td>
</tr>
<!--getbitsone-->
<tr>
<td valign=top>
<a href="Built-in/getbitsone.shtml">
getbitsone</a></td>
<td>
Unpacks one-bit chunks from the input array.
</td>
</tr>
<!--getenv-->
<tr>
<td valign=top>
<a href="Built-in/getenv.shtml">
getenv</a></td>
<td>
Returns the string value of a shell environment variable.
</td>
</tr>
<!--getfiledimsizes-->
<tr>
<td valign=top>
<a href="Built-in/getfiledimsizes.shtml">
getfiledimsizes</a></td>
<td>
Returns a list of dimension sizes of the given file variable.
</td>
</tr>
<!--getfilegrpnames-->
<tr>
<td valign=top>
<a href="Built-in/getfilegrpnames.shtml">
getfilegrpnames</a></td>
<td>
Returns an array of file group names in the specified <a href="../Manuals/Ref_Manual/NclFormatSupport.shtml">supported file</a>.
</td>
</tr>
<!--getfilepath-->
<tr>
<td valign=top>
<a href="Built-in/getfilepath.shtml">
getfilepath</a></td>
<td>
Returns a string of the opened file's path.
</td>
</tr>
<!--getfilevaratts-->
<tr>
<td valign=top>
<a href="Built-in/getfilevaratts.shtml">
getfilevaratts</a></td>
<td>
Returns all attribute names associated with a variable on a  <a href="../Manuals/Ref_Manual/NclFormatSupport.shtml">supported file</a>.
</td>
</tr>
<!--getfilevarchunkdimsizes-->
<tr>
<td valign=top>
<a href="Built-in/getfilevarchunkdimsizes.shtml">
getfilevarchunkdimsizes</a></td>
<td>
Returns the chunk dimension sizes of variable on a file (which has chunk dimensions).
</td>
</tr>
<!--getfilevardims-->
<tr>
<td valign=top>
<a href="Built-in/getfilevardims.shtml">
getfilevardims</a></td>
<td>
Returns all dimension names associated with a variable on a  <a href="../Manuals/Ref_Manual/NclFormatSupport.shtml">supported file</a>.
</td>
</tr>
<!--getfilevardimsizes-->
<tr>
<td valign=top>
<a href="Built-in/getfilevardimsizes.shtml">
getfilevardimsizes</a></td>
<td>
Returns the dimension sizes of variable on a <a href="../Manuals/Ref_Manual/NclFormatSupport.shtml">supported file</a>.
</td>
</tr>
<!--getfilevarnames-->
<tr>
<td valign=top>
<a href="Built-in/getfilevarnames.shtml">
getfilevarnames</a></td>
<td>
Returns an array of file variable names in the specified <a href="../Manuals/Ref_Manual/NclFormatSupport.shtml">supported file</a>.
</td>
</tr>
<!--getfilevartypes-->
<tr>
<td valign=top>
<a href="Built-in/getfilevartypes.shtml">
getfilevartypes</a></td>
<td>
Returns the types of the named variables stored in the given  <a href="../Manuals/Ref_Manual/NclFormatSupport.shtml">supported file</a>.
</td>
</tr>
<!--GetFillColor-->
<tr>
<td valign=top>
<a href="Contributed/GetFillColor.shtml">
GetFillColor</a></td>
<td>
Chooses a color from a group of RGB triplets based upon a secondary scalar field (<font color=red>deprecated version</font>).
</td>
</tr>
<!--GetFillColorIndex-->
<tr>
<td valign=top>
<a href="Contributed/GetFillColorIndex.shtml">
GetFillColorIndex</a></td>
<td>
Chooses from a list of color table indices based upon a secondary scalar field (<font color=red>deprecated version</font>).
</td>
</tr>
<!--getFillValue-->
<tr>
<td valign=top>
<a href="Contributed/getFillValue.shtml">
getFillValue</a></td>
<td>
Retrieves the <a href="../Language/fillval.shtml">_FillValue</a> of a variable, if present.
</td>
</tr>
<!--getind_latlon2d-->
<tr>
<td valign=top>
<a href="Contributed/getind_latlon2d.shtml">
getind_latlon2d</a></td>
<td>
Finds the indices (subscripts) of two-dimensional latitude/longitude arrays closest to a user specified latitude/longitude coordinate pair.
</td>
</tr>
<!--getvaratts-->
<tr>
<td valign=top>
<a href="Built-in/getvaratts.shtml">
getvaratts</a></td>
<td>
Returns a list of attribute names for the given variable or file pointer.
</td>
</tr>
<!--getVarDimNames-->
<tr>
<td valign=top>
<a href="Contributed/getVarDimNames.shtml">
getVarDimNames</a></td>
<td>
Retrieves dimension names for a variable in memory (deprecated version).
</td>
</tr>
<!--getvardims-->
<tr>
<td valign=top>
<a href="Built-in/getvardims.shtml">
getvardims</a></td>
<td>
Returns a list of  <a href="../Manuals/Ref_Manual/NclVariables.shtml#Dimensions">dimension names</a> for the given variable.
</td>
</tr>
<!--getVarFillValue-->
<tr>
<td valign=top>
<a href="Contributed/getVarFillValue.shtml">
getVarFillValue</a></td>
<td>
Retrieves the <a href="../Language/fillval.shtml">missing value</a>  of a variable, otherwise, it returns the default _FillValue.
</td>
</tr>
<!--gradsf-->
<tr>
<td valign=top>
<a href="Built-in/gradsf.shtml">
gradsf</a></td>
<td>
Computes the gradient of an array that is on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a> using spherical harmonics.
</td>
</tr>
<!--gradsg-->
<tr>
<td valign=top>
<a href="Built-in/gradsg.shtml">
gradsg</a></td>
<td>
Computes the gradient of an array that is on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a> using spherical  harmonics.
</td>
</tr>
<!--greg2jul-->
<tr>
<td valign=top>
<a href="Built-in/greg2jul.shtml">
greg2jul</a></td>
<td>
Converts Gregorian dates to <a href="http://en.wikipedia.org/wiki/Julian_day"><b>astronomical Julian days</b>.
</td>
</tr>
<!--grib_stime2itime-->
<tr>
<td valign=top>
<a href="Contributed/grib_stime2itime.shtml">
grib_stime2itime</a></td>
<td>
Converts grib initial_time (string) to time (integer).
</td>
</tr>
<!--grid2triple-->
<tr>
<td valign=top>
<a href="Built-in/grid2triple.shtml">
grid2triple</a></td>
<td>
Converts a two-dimensional grid with one-dimensional coordinate variables to an array where each grid value is associated with its coordinates.
</td>
</tr>
<!--gsn_add_annotation-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_add_annotation.shtml">
gsn_add_annotation</a></td>
<td>
Attaches the given annotation to the given plot.
</td>
</tr>
<!--gsn_add_polygon-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_add_polygon.shtml">
gsn_add_polygon</a></td>
<td>
Attaches a <a href="../Graphics/fill_patterns.shtml">filled</a> polygon to the given plot.
</td>
</tr>
<!--gsn_add_polyline-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_add_polyline.shtml">
gsn_add_polyline</a></td>
<td>
Attaches a polyline to the given plot.
</td>
</tr>
<!--gsn_add_polymarker-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_add_polymarker.shtml">
gsn_add_polymarker</a></td>
<td>
Attaches polymarkers to the given plot.
</td>
</tr>
<!--gsn_add_shapefile_polygons-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_add_shapefile_polygons.shtml">
gsn_add_shapefile_polygons</a></td>
<td>
Attaches shapefile polygon data to the given plot(s) using randomly-filled polygons.
</td>
</tr>
<!--gsn_add_shapefile_polylines-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_add_shapefile_polylines.shtml">
gsn_add_shapefile_polylines</a></td>
<td>
Attaches shapefile polyline or polygon data to the given plot(s) using polylines.
</td>
</tr>
<!--gsn_add_shapefile_polymarkers-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_add_shapefile_polymarkers.shtml">
gsn_add_shapefile_polymarkers</a></td>
<td>
Attaches shapefile point data to the given plot(s) using polymarkers.
</td>
</tr>
<!--gsn_add_text-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_add_text.shtml">
gsn_add_text</a></td>
<td>
Attaches text strings to the given plot.
</td>
</tr>
<!--gsn_attach_plots-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_attach_plots.shtml">
gsn_attach_plots</a></td>
<td>
Attaches a series of plots to a base plot.
</td>
</tr>
<!--gsn_blank_plot-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_blank_plot.shtml">
gsn_blank_plot</a></td>
<td>
Draws a blank plot with tickmarks pointing inward.
</td>
</tr>
<!--gsn_contour-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_contour.shtml">
gsn_contour</a></td>
<td>
Creates and draws a contour plot.
</td>
</tr>
<!--gsn_contour_map-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_contour_map.shtml">
gsn_contour_map</a></td>
<td>
Creates and draws a contour plot over a map.
</td>
</tr>
<!--gsn_contour_shade-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_contour_shade.shtml">
gsn_contour_shade</a></td>
<td>
Shades contour regions given low and/or high values using colors or patterns.
</td>
</tr>
<!--gsn_coordinates-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_coordinates.shtml">
gsn_coordinates</a></td>
<td>
Draws or attaches the data coordinate locations on the given plot as grid lines or markers.
</td>
</tr>
<!--gsn_create_labelbar-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_create_labelbar.shtml">
gsn_create_labelbar</a></td>
<td>
Creates a labelbar.
</td>
</tr>
<!--gsn_create_legend-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_create_legend.shtml">
gsn_create_legend</a></td>
<td>
Creates a legend.
</td>
</tr>
<!--gsn_create_text-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_create_text.shtml">
gsn_create_text</a></td>
<td>
Creates text strings.
</td>
</tr>
<!--gsn_csm_attach_zonal_means-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_attach_zonal_means.shtml">
gsn_csm_attach_zonal_means</a></td>
<td>
Attaches a zonal means plot to a contour/map plot.
</td>
</tr>
<!--gsn_csm_blank_plot-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_blank_plot.shtml">
gsn_csm_blank_plot</a></td>
<td>
Draws a blank plot with tickmarks pointing outward.
</td>
</tr>
<!--gsn_csm_contour-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_contour.shtml">
gsn_csm_contour</a></td>
<td>
Creates and draws a contour plot.
</td>
</tr>
<!--gsn_csm_contour_map-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_contour_map.shtml">
gsn_csm_contour_map</a></td>
<td>
Creates and draws a contour plot over a map.
</td>
</tr>
<!--gsn_csm_contour_map_ce-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_contour_map_ce.shtml">
gsn_csm_contour_map_ce</a></td>
<td>
Creates and draws a contour plot over a cylindrical equidistant map.
</td>
</tr>
<!--gsn_csm_contour_map_overlay-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_contour_map_overlay.shtml">
gsn_csm_contour_map_overlay</a></td>
<td>
Creates and draws two contour plots over a map.
</td>
</tr>
<!--gsn_csm_contour_map_polar-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_contour_map_polar.shtml">
gsn_csm_contour_map_polar</a></td>
<td>
Creates and draws a contour plot over a polar stereographic map.
</td>
</tr>
<!--gsn_csm_hov-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_hov.shtml">
gsn_csm_hov</a></td>
<td>
Creates and draws a Hovmueller (time v.s. longitude) plot.
</td>
</tr>
<!--gsn_csm_lat_time-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_lat_time.shtml">
gsn_csm_lat_time</a></td>
<td>
Creates and draws a latitude versus time plot.
</td>
</tr>
<!--gsn_csm_map-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_map.shtml">
gsn_csm_map</a></td>
<td>
Creates and draws a map.
</td>
</tr>
<!--gsn_csm_map_ce-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_map_ce.shtml">
gsn_csm_map_ce</a></td>
<td>
Creates and draws a cylindrical equidistant map.
</td>
</tr>
<!--gsn_csm_map_polar-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_map_polar.shtml">
gsn_csm_map_polar</a></td>
<td>
Creates and draws a polar stereographic map.
</td>
</tr>
<!--gsn_csm_pres_hgt-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_pres_hgt.shtml">
gsn_csm_pres_hgt</a></td>
<td>
Creates and draws a pressure/height plot.
</td>
</tr>
<!--gsn_csm_pres_hgt_streamline-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_pres_hgt_streamline.shtml">
gsn_csm_pres_hgt_streamline</a></td>
<td>
Creates and draws a pressure/height contour plot overlaid with streamlines.
</td>
</tr>
<!--gsn_csm_pres_hgt_vector-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_pres_hgt_vector.shtml">
gsn_csm_pres_hgt_vector</a></td>
<td>
Creates and draws a pressure/height contour plot overlaid with vectors.
</td>
</tr>
<!--gsn_csm_streamline-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_streamline.shtml">
gsn_csm_streamline</a></td>
<td>
Creates and draws a streamline plot.
</td>
</tr>
<!--gsn_csm_streamline_contour_map-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_streamline_contour_map.shtml">
gsn_csm_streamline_contour_map</a></td>
<td>
Creates and draws streamlines over a contour plot over a map.
</td>
</tr>
<!--gsn_csm_streamline_contour_map_ce-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_streamline_contour_map_ce.shtml">
gsn_csm_streamline_contour_map_ce</a></td>
<td>
Creates and draws streamlines over a contour plot over a cylindrical equidistant map.
</td>
</tr>
<!--gsn_csm_streamline_contour_map_polar-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_streamline_contour_map_polar.shtml">
gsn_csm_streamline_contour_map_polar</a></td>
<td>
Creates and draws streamlines over a contour plot over a polar stereographic map.
</td>
</tr>
<!--gsn_csm_streamline_map-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_streamline_map.shtml">
gsn_csm_streamline_map</a></td>
<td>
Creates and draws a streamline plot over a map.
</td>
</tr>
<!--gsn_csm_streamline_map_ce-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_streamline_map_ce.shtml">
gsn_csm_streamline_map_ce</a></td>
<td>
Creates and draws a streamline plot over a cylindrical equidistant map.
</td>
</tr>
<!--gsn_csm_streamline_map_polar-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_streamline_map_polar.shtml">
gsn_csm_streamline_map_polar</a></td>
<td>
Creates and draws a streamline plot over a polar stereographic map.
</td>
</tr>
<!--gsn_csm_streamline_scalar-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_streamline_scalar.shtml">
gsn_csm_streamline_scalar</a></td>
<td>
Creates and draws a streamline plot, using a scalar field to color the streamlines.
</td>
</tr>
<!--gsn_csm_streamline_scalar_map-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_streamline_scalar_map.shtml">
gsn_csm_streamline_scalar_map</a></td>
<td>
Creates and draws a streamline plot over a map, using a scalar field to color the streamlines.
</td>
</tr>
<!--gsn_csm_streamline_scalar_map_ce-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_streamline_scalar_map_ce.shtml">
gsn_csm_streamline_scalar_map_ce</a></td>
<td>
Creates and draws a streamline plot over a cylindrical equidistant map, using a scalar field to color the streamlines.
</td>
</tr>
<!--gsn_csm_streamline_scalar_map_polar-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_streamline_scalar_map_polar.shtml">
gsn_csm_streamline_scalar_map_polar</a></td>
<td>
Creates and draws a streamline plot over a polar stereographic map, using a scalar field to color the streamlines.
</td>
</tr>
<!--gsn_csm_time_lat-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_time_lat.shtml">
gsn_csm_time_lat</a></td>
<td>
Creates and draws a time versus latitude plot.
</td>
</tr>
<!--gsn_csm_vector-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_vector.shtml">
gsn_csm_vector</a></td>
<td>
Creates and draws a vector plot.
</td>
</tr>
<!--gsn_csm_vector_map-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_vector_map.shtml">
gsn_csm_vector_map</a></td>
<td>
Creates and draws a vector plot over a map.
</td>
</tr>
<!--gsn_csm_vector_map_ce-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_vector_map_ce.shtml">
gsn_csm_vector_map_ce</a></td>
<td>
Creates and draws a vector plot over a cylindrical equidistant map.
</td>
</tr>
<!--gsn_csm_vector_map_polar-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_vector_map_polar.shtml">
gsn_csm_vector_map_polar</a></td>
<td>
Creates and draws a vector plot over a polar stereographic map.
</td>
</tr>
<!--gsn_csm_vector_scalar-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_vector_scalar.shtml">
gsn_csm_vector_scalar</a></td>
<td>
Creates and draws a vector plot, and uses a scalar field to draw a separate contour plot or color the vectors.
</td>
</tr>
<!--gsn_csm_vector_scalar_map-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_vector_scalar_map.shtml">
gsn_csm_vector_scalar_map</a></td>
<td>
Creates and draws a vector plot over a map, and uses a scalar field to draw a separate contour plot or color the vectors.
</td>
</tr>
<!--gsn_csm_vector_scalar_map_ce-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_vector_scalar_map_ce.shtml">
gsn_csm_vector_scalar_map_ce</a></td>
<td>
Creates and draws a vector plot over a cylindrical equidistant map projection, and uses a scalar field to draw a separate contour plot or color the vectors.
</td>
</tr>
<!--gsn_csm_vector_scalar_map_polar-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_vector_scalar_map_polar.shtml">
gsn_csm_vector_scalar_map_polar</a></td>
<td>
Creates and draws a vector plot over a polar stereographic map projection, and uses a scalar field to draw a separate contour plot or color the vectors.
</td>
</tr>
<!--gsn_csm_x2y-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_x2y.shtml">
gsn_csm_x2y</a></td>
<td>
Creates and draws an XY plot with two different X axes.
</td>
</tr>
<!--gsn_csm_x2y2-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_x2y2.shtml">
gsn_csm_x2y2</a></td>
<td>
Creates and draws an XY plot with two different X and Y axes
</td>
</tr>
<!--gsn_csm_xy-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_xy.shtml">
gsn_csm_xy</a></td>
<td>
Creates and draws an XY plot.
</td>
</tr>
<!--gsn_csm_xy2-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_xy2.shtml">
gsn_csm_xy2</a></td>
<td>
Creates and draws an XY plot with two different Y axes.
</td>
</tr>
<!--gsn_csm_xy3-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_xy3.shtml">
gsn_csm_xy3</a></td>
<td>
Creates and draws an XY plot with three different Y axes.
</td>
</tr>
<!--gsn_csm_y-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_csm_y.shtml">
gsn_csm_y</a></td>
<td>
Creates and draws an XY plot, using index values for the X axis.
</td>
</tr>
<!--gsn_define_colormap-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_define_colormap.shtml">
gsn_define_colormap</a></td>
<td>
Defines a color map for the given workstation.
</td>
</tr>
<!--gsn_draw_colormap-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_draw_colormap.shtml">
gsn_draw_colormap</a></td>
<td>
Draws the current color map for the given workstation.
</td>
</tr>
<!--gsn_draw_named_colors-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_draw_named_colors.shtml">
gsn_draw_named_colors</a></td>
<td>
Draws the given list of <a href="../Graphics/named_colors.shtml">named colors</a>.
</td>
</tr>
<!--gsn_histogram-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_histogram.shtml">
gsn_histogram</a></td>
<td>
Draws a histogram plot on the given workstation.
</td>
</tr>
<!--gsn_labelbar_ndc-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_labelbar_ndc.shtml">
gsn_labelbar_ndc</a></td>
<td>
Draws a labelbar on the given workstation.
</td>
</tr>
<!--gsn_legend_ndc-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_legend_ndc.shtml">
gsn_legend_ndc</a></td>
<td>
Draws a legend on the given workstation.
</td>
</tr>
<!--gsn_map-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_map.shtml">
gsn_map</a></td>
<td>
Creates and draws a map.
</td>
</tr>
<!--gsn_merge_colormaps-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_merge_colormaps.shtml">
gsn_merge_colormaps</a></td>
<td>
Merges two color maps and sets this as the color map for the given workstation.
</td>
</tr>
<!--gsn_open_wks-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_open_wks.shtml">
gsn_open_wks</a></td>
<td>
Opens a workstation on which to draw graphics.
</td>
</tr>
<!--gsn_panel-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_panel.shtml">
gsn_panel</a></td>
<td>
Draws multiple plots of identical size on a single frame.
</td>
</tr>
<!--gsn_polygon-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_polygon.shtml">
gsn_polygon</a></td>
<td>
Draws a filled polygon on the given plot.
</td>
</tr>
<!--gsn_polygon_ndc-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_polygon_ndc.shtml">
gsn_polygon_ndc</a></td>
<td>
Draws a filled polygon on the given workstation.
</td>
</tr>
<!--gsn_polyline-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_polyline.shtml">
gsn_polyline</a></td>
<td>
Draws a polyline on the given plot.
</td>
</tr>
<!--gsn_polyline_ndc-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_polyline_ndc.shtml">
gsn_polyline_ndc</a></td>
<td>
Draws a polyline on the given workstation.
</td>
</tr>
<!--gsn_polymarker-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_polymarker.shtml">
gsn_polymarker</a></td>
<td>
Draws polymarkers on the given plot.
</td>
</tr>
<!--gsn_polymarker_ndc-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_polymarker_ndc.shtml">
gsn_polymarker_ndc</a></td>
<td>
Draws polymarkers on the given workstation.
</td>
</tr>
<!--gsn_retrieve_colormap-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_retrieve_colormap.shtml">
gsn_retrieve_colormap</a></td>
<td>
Retrieves a color map for the given workstation.
</td>
</tr>
<!--gsn_reverse_colormap-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_reverse_colormap.shtml">
gsn_reverse_colormap</a></td>
<td>
Reverses the color map for the given workstation.
</td>
</tr>
<!--gsn_streamline-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_streamline.shtml">
gsn_streamline</a></td>
<td>
Creates and draws a streamline plot.
</td>
</tr>
<!--gsn_streamline_map-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_streamline_map.shtml">
gsn_streamline_map</a></td>
<td>
Creates and draws a streamline plot over a map.
</td>
</tr>
<!--gsn_streamline_scalar-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_streamline_scalar.shtml">
gsn_streamline_scalar</a></td>
<td>
Creates and draws a streamline plot colored by a given a scalar field.
</td>
</tr>
<!--gsn_streamline_scalar_map-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_streamline_scalar_map.shtml">
gsn_streamline_scalar_map</a></td>
<td>
Creates and draws a streamline plot over a map, and colors the streamlines using the given scalar field.
</td>
</tr>
<!--gsn_table-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_table.shtml">
gsn_table</a></td>
<td>
Draws a table with text.
</td>
</tr>
<!--gsn_text-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_text.shtml">
gsn_text</a></td>
<td>
Draws text strings on the given plot.
</td>
</tr>
<!--gsn_text_ndc-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_text_ndc.shtml">
gsn_text_ndc</a></td>
<td>
Draws text strings on the given workstation.
</td>
</tr>
<!--gsn_vector-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_vector.shtml">
gsn_vector</a></td>
<td>
Creates and draws a vector plot.
</td>
</tr>
<!--gsn_vector_map-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_vector_map.shtml">
gsn_vector_map</a></td>
<td>
Creates and draws a vector plot over a map.
</td>
</tr>
<!--gsn_vector_scalar-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_vector_scalar.shtml">
gsn_vector_scalar</a></td>
<td>
Creates and draws a vector plot colored by a given a scalar field.
</td>
</tr>
<!--gsn_vector_scalar_map-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_vector_scalar_map.shtml">
gsn_vector_scalar_map</a></td>
<td>
Creates and draws a vector plot over a map, and colors the vectors using the given scalar field.
</td>
</tr>
<!--gsn_xy-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_xy.shtml">
gsn_xy</a></td>
<td>
Creates and draws an XY plot.
</td>
</tr>
<!--gsn_y-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/gsn_y.shtml">
gsn_y</a></td>
<td>
Creates and draws an XY plot, using index values for the X axis.
</td>
</tr>
<!--hlsrgb-->
<tr>
<td valign=top><a name="H"></a>
<a href="Built-in/hlsrgb.shtml">
hlsrgb</a></td>
<td>
Converts HLS color values to RGB.
</td>
</tr>
<!--hsv2rgb-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/hsv2rgb.shtml">
hsv2rgb</a></td>
<td>
Maps values from the HSV color model to the RGB color model (<font color=red>deprecated</font>).
</td>
</tr>
<!--hsvrgb-->
<tr>
<td valign=top>
<a href="Built-in/hsvrgb.shtml">
hsvrgb</a></td>
<td>
Converts HSV color values to RGB.
</td>
</tr>
<!--hydro-->
<tr>
<td valign=top>
<a href="Built-in/hydro.shtml">
hydro</a></td>
<td>
Computes geopotential height using the hydrostatic equation.
</td>
</tr>
<!--hyi2hyo-->
<tr>
<td valign=top>
<a href="Built-in/hyi2hyo.shtml">
hyi2hyo</a></td>
<td>
Interpolates from data on one set of hybrid levels to another set of hybrid levels.
</td>
</tr>
<!--hyi2hyo_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/hyi2hyo_Wrap.shtml">
hyi2hyo_Wrap</a></td>
<td>
Interpolates from data on one set of hybrid levels to another set of hybrid levels and preserves metadata.
</td>
</tr>
<!--idsfft-->
<tr>
<td valign=top><a name="I"></a>
<a href="Built-in/idsfft.shtml">
idsfft</a></td>
<td>
Interpolates 2D random data.
</td>
</tr>
<!--igradsf-->
<tr>
<td valign=top>
<a href="Built-in/igradsf.shtml">
igradsf</a></td>
<td>
Computes a scalar array from its gradient components on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a> using spherical harmonics.
</td>
</tr>
<!--igradsF-->
<tr>
<td valign=top>
<a href="Built-in/igradsF-1.shtml">
igradsF</a></td>
<td>
Computes a scalar array from its gradient components on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a> using spherical harmonics.
</td>
</tr>
<!--igradsg-->
<tr>
<td valign=top>
<a href="Built-in/igradsg.shtml">
igradsg</a></td>
<td>
Computes a scalar array from its gradient components on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a> using spherical harmonics.
</td>
</tr>
<!--igradsG-->
<tr>
<td valign=top>
<a href="Built-in/igradsG-1.shtml">
igradsG</a></td>
<td>
Computes a scalar array from its gradient components on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a> using spherical harmonics.
</td>
</tr>
<!--ilapsf-->
<tr>
<td valign=top>
<a href="Built-in/ilapsf.shtml">
ilapsf</a></td>
<td>
Inverts the Laplacian (on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>) using spherical harmonics.
</td>
</tr>
<!--ilapsF-->
<tr>
<td valign=top>
<a href="Built-in/ilapsF-1.shtml">
ilapsF</a></td>
<td>
Inverts the Laplacian (on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>) using spherical harmonics.
</td>
</tr>
<!--ilapsF_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/ilapsF_Wrap.shtml">
ilapsF_Wrap</a></td>
<td>
Inverts the Laplacian (on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>) using spherical harmonics and retains metadata.
</td>
</tr>
<!--ilapsg-->
<tr>
<td valign=top>
<a href="Built-in/ilapsg.shtml">
ilapsg</a></td>
<td>
Inverts the Laplacian (on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>) using spherical harmonics.
</td>
</tr>
<!--ilapsG-->
<tr>
<td valign=top>
<a href="Built-in/ilapsG-1.shtml">
ilapsG</a></td>
<td>
Inverts the Laplacian (on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>) using spherical harmonics.
</td>
</tr>
<!--ilapsG_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/ilapsG_Wrap.shtml">
ilapsG_Wrap</a></td>
<td>
Inverts the Laplacian (on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>) using spherical harmonics and retains metadata.
</td>
</tr>
<!--ilapvf-->
<tr>
<td valign=top>
<a href="Built-in/ilapvf.shtml">
ilapvf</a></td>
<td>
Inverts the vector Laplacian (on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>) using spherical harmonics.
</td>
</tr>
<!--ilapvg-->
<tr>
<td valign=top>
<a href="Built-in/ilapvg.shtml">
ilapvg</a></td>
<td>
Inverts the vector Laplacian (on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>) using spherical harmonics.
</td>
</tr>
<!--ind-->
<tr>
<td valign=top>
<a href="Built-in/ind.shtml">
ind</a></td>
<td>
Returns the indices where the input is True.
</td>
</tr>
<!--ind_nearest_coord-->
<tr>
<td valign=top>
<a href="Contributed/ind_nearest_coord.shtml">
ind_nearest_coord</a></td>
<td>
Determine indices of locations closest to a coordinate array.
</td>
</tr>
<!--ind_resolve-->
<tr>
<td valign=top>
<a href="Built-in/ind_resolve.shtml">
ind_resolve</a></td>
<td>
Resolves a single list of indices to their multi-dimensional representation.
</td>
</tr>
<!--indStrSubset-->
<tr>
<td valign=top>
<a href="Contributed/indStrSubset.shtml">
indStrSubset</a></td>
<td>
Returns the indices corresponding to the location of the substring, if it is a subset of the other given string. <font color="red">(Deprecated: </font> see <a href="Built-in/str_index_of_substr.shtml"><strong>str_index_of_substr</strong></a>.)
</td>
</tr>
<!--infoTimeStamp-->
<tr>
<td valign=top>
<a href="Shea_util/infoTimeStamp.shtml">
infoTimeStamp</a></td>
<td>
Draws two text strings at the bottom of the workstation to indicate the time the plot was created and other information.
</td>
</tr>
<!--int2dble-->
<tr>
<td valign=top>
<a href="Contributed/int2dble.shtml">
int2dble</a></td>
<td>
Converts values of type integer to values of type float and preserves metadata.
</td>
</tr>
<!--int2flt-->
<tr>
<td valign=top>
<a href="Contributed/int2flt.shtml">
int2flt</a></td>
<td>
Converts values of type integer to values of type float and preserves metadata.
</td>
</tr>
<!--int2p-->
<tr>
<td valign=top>
<a href="Built-in/int2p.shtml">
int2p</a></td>
<td>
Interpolates pressure levels to a different set of pressure levels.
</td>
</tr>
<!--int2p_n-->
<tr>
<td valign=top>
<a href="Built-in/int2p_n.shtml">
int2p_n</a></td>
<td>
Interpolates pressure levels to a different set of pressure levels on the given dimension.
</td>
</tr>
<!--int2p_n_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/int2p_n_Wrap.shtml">
int2p_n_Wrap</a></td>
<td>
Interpolates pressure levels to a different set of pressure levels and returns meta data.
</td>
</tr>
<!--int2p_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/int2p_Wrap.shtml">
int2p_Wrap</a></td>
<td>
Interpolates pressure levels to a different set of pressure levels and returns meta data.
</td>
</tr>
<!--integertobyte-->
<tr>
<td valign=top>
<a href="Built-in/integertobyte.shtml">
integertobyte</a></td>
<td>
Coerces values of type integer to values of type byte.
</td>
</tr>
<!--integertochar-->
<tr>
<td valign=top>
<a href="Built-in/integertochar.shtml">
integertochar</a></td>
<td>
Coerces values of type integer to values of type character.
</td>
</tr>
<!--integertocharacter-->
<tr>
<td valign=top>
<a href="Built-in/integertocharacter.shtml">
integertocharacter</a></td>
<td>
Coerces values of type integer to values of type character.
</td>
</tr>
<!--integertoshort-->
<tr>
<td valign=top>
<a href="Built-in/integertoshort.shtml">
integertoshort</a></td>
<td>
Coerces values of type integer to values of type short.
</td>
</tr>
<!--inttobyte-->
<tr>
<td valign=top>
<a href="Built-in/inttobyte.shtml">
inttobyte</a></td>
<td>
Coerces values of type integer to values of type byte.
</td>
</tr>
<!--inttochar-->
<tr>
<td valign=top>
<a href="Built-in/inttochar.shtml">
inttochar</a></td>
<td>
Coerces values of type integer to values of type character.
</td>
</tr>
<!--inttoshort-->
<tr>
<td valign=top>
<a href="Built-in/inttoshort.shtml">
inttoshort</a></td>
<td>
Coerces values of type integer to values of type short.
</td>
</tr>
<!--inverse_matrix-->
<tr>
<td valign=top>
<a href="Built-in/inverse_matrix.shtml">
inverse_matrix</a></td>
<td>
Computes the inverse of a general matrix using LU factorization.
</td>
</tr>
<!--isatt-->
<tr>
<td valign=top>
<a href="Built-in/isatt.shtml">
isatt</a></td>
<td>
Returns logical values indicating whether the given attributes are attached to the given variable.
</td>
</tr>
<!--isbigendian-->
<tr>
<td valign=top>
<a href="Built-in/isbigendian.shtml">
isbigendian</a></td>
<td>
Returns True if you are running NCL on a big endian machine.
</td>
</tr>
<!--isbyte-->
<tr>
<td valign=top>
<a href="Built-in/isbyte.shtml">
isbyte</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">byte</a>.
</td>
</tr>
<!--ischar-->
<tr>
<td valign=top>
<a href="Built-in/ischar.shtml">
ischar</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">char</a>.
</td>
</tr>
<!--iscoord-->
<tr>
<td valign=top>
<a href="Built-in/iscoord.shtml">
iscoord</a></td>
<td>
Returns True for every input string that is a coordinate variables of the given variable.
</td>
</tr>
<!--isdefined-->
<tr>
<td valign=top>
<a href="Built-in/isdefined.shtml">
isdefined</a></td>
<td>
Returns True for every element of the input that is a defined keyword, variable, or function/procedure name.
</td>
</tr>
<!--isdim-->
<tr>
<td valign=top>
<a href="Built-in/isdim.shtml">
isdim</a></td>
<td>
Returns True if <a href="../Manuals/Ref_Manual/NclVariables.shtml#Dimensions">variable dimensions</a> are defined in the given variable.
</td>
</tr>
<!--isdimnamed-->
<tr>
<td valign=top>
<a href="Built-in/isdimnamed.shtml">
isdimnamed</a></td>
<td>
Returns True if <a href="../Manuals/Ref_Manual/NclVariables.shtml#Dimensions">variable dimensions</a> have names in  given variable.
</td>
</tr>
<!--isdouble-->
<tr>
<td valign=top>
<a href="Built-in/isdouble.shtml">
isdouble</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">double</a>.
</td>
</tr>
<!--isenumeric-->
<tr>
<td valign=top>
<a href="Built-in/isenumeric.shtml">
isenumeric</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">enumeric</a>.
</td>
</tr>
<!--isfile-->
<tr>
<td valign=top>
<a href="Built-in/isfile.shtml">
isfile</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">file</a>.
</td>
</tr>
<!--isfilepresent-->
<tr>
<td valign=top>
<a href="Built-in/isfilepresent.shtml">
isfilepresent</a></td>
<td>
Checks if a <a href="../glossary.shtml#SupportedDataFormat">supported</a> file exists.
</td>
</tr>
<!--isfilevar-->
<tr>
<td valign=top>
<a href="Built-in/isfilevar.shtml">
isfilevar</a></td>
<td>
Checks if specified <a href="../Manuals/Ref_Manual/NclVariables.shtml#Files">file variables</a> are defined in a file.
</td>
</tr>
<!--isfilevaratt-->
<tr>
<td valign=top>
<a href="Built-in/isfilevaratt.shtml">
isfilevaratt</a></td>
<td>
Checks if specified  <a href="../Manuals/Ref_Manual/NclVariables.shtml#Files">file variable attributes</a> are defined for a file variable.
</td>
</tr>
<!--isfilevarcoord-->
<tr>
<td valign=top>
<a href="Built-in/isfilevarcoord.shtml">
isfilevarcoord</a></td>
<td>
Checks if a <a href="../Manuals/Ref_Manual/NclVariables.shtml#Coordinates">coordinate variable</a> is defined in a file.
</td>
</tr>
<!--isfilevardim-->
<tr>
<td valign=top>
<a href="Built-in/isfilevardim.shtml">
isfilevardim</a></td>
<td>
Checks if <a href="../Manuals/Ref_Manual/NclVariables.shtml#Files">file variable dimensions</a> are defined for a file variable.
</td>
</tr>
<!--isfloat-->
<tr>
<td valign=top>
<a href="Built-in/isfloat.shtml">
isfloat</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">float</a>.
</td>
</tr>
<!--isfunc-->
<tr>
<td valign=top>
<a href="Built-in/isfunc.shtml">
isfunc</a></td>
<td>
Returns True for every element of the input that is a defined function.
</td>
</tr>
<!--isgraphic-->
<tr>
<td valign=top>
<a href="Built-in/isgraphic.shtml">
isgraphic</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">graphic</a>.
</td>
</tr>
<!--isint-->
<tr>
<td valign=top>
<a href="Built-in/isint.shtml">
isint</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">integer</a>.
</td>
</tr>
<!--isint64-->
<tr>
<td valign=top>
<a href="Built-in/isint64.shtml">
isint64</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">int64</a>.
</td>
</tr>
<!--isinteger-->
<tr>
<td valign=top>
<a href="Built-in/isinteger.shtml">
isinteger</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">integer</a>.
</td>
</tr>
<!--isleapyear-->
<tr>
<td valign=top>
<a href="Built-in/isleapyear.shtml">
isleapyear</a></td>
<td>
Determines if a given year is a leap year.
</td>
</tr>
<!--islogical-->
<tr>
<td valign=top>
<a href="Built-in/islogical.shtml">
islogical</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">logical</a>.
</td>
</tr>
<!--islong-->
<tr>
<td valign=top>
<a href="Built-in/islong.shtml">
islong</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">long</a>.
</td>
</tr>
<!--ismissing-->
<tr>
<td valign=top>
<a href="Built-in/ismissing.shtml">
ismissing</a></td>
<td>
Returns True for every element of the input that contains a <a href="../Language/fillval.shtml">missing value</a>.
</td>
</tr>
<!--isMonotonic-->
<tr>
<td valign=top>
<a href="Contributed/isMonotonic.shtml">
isMonotonic</a></td>
<td>
Check a one dimensional array to see if it is monotonic.
</td>
</tr>
<!--isnan_ieee-->
<tr>
<td valign=top>
<a href="Built-in/isnan_ieee.shtml">
isnan_ieee</a></td>
<td>
Returns a logical array indicating which input values contain an IEEE NaN.
</td>
</tr>
<!--isnumeric-->
<tr>
<td valign=top>
<a href="Built-in/isnumeric.shtml">
isnumeric</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">numeric</a>.
</td>
</tr>
<!--ispan-->
<tr>
<td valign=top>
<a href="Built-in/ispan.shtml">
ispan</a></td>
<td>
Creates an array of equally-spaced integer, long, or int64 values.
</td>
</tr>
<!--isproc-->
<tr>
<td valign=top>
<a href="Built-in/isproc.shtml">
isproc</a></td>
<td>
Returns True for every element of the input that is a defined procedure.
</td>
</tr>
<!--isshort-->
<tr>
<td valign=top>
<a href="Built-in/isshort.shtml">
isshort</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">short</a>.
</td>
</tr>
<!--issnumeric-->
<tr>
<td valign=top>
<a href="Built-in/issnumeric.shtml">
issnumeric</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">snumeric</a>.
</td>
</tr>
<!--isstring-->
<tr>
<td valign=top>
<a href="Built-in/isstring.shtml">
isstring</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">string</a>.
</td>
</tr>
<!--isStrSubset-->
<tr>
<td valign=top>
<a href="Contributed/isStrSubset.shtml">
isStrSubset</a></td>
<td>
Return True or False if one string is a subset of another string.
</td>
</tr>
<!--isubyte-->
<tr>
<td valign=top>
<a href="Built-in/isubyte.shtml">
isubyte</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">ubyte</a>.
</td>
</tr>
<!--isuint-->
<tr>
<td valign=top>
<a href="Built-in/isuint.shtml">
isuint</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">uint</a>.
</td>
</tr>
<!--isuint64-->
<tr>
<td valign=top>
<a href="Built-in/isuint64.shtml">
isuint64</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">uint64</a>.
</td>
</tr>
<!--isulong-->
<tr>
<td valign=top>
<a href="Built-in/isulong.shtml">
isulong</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">ulong</a>.
</td>
</tr>
<!--isunlimited-->
<tr>
<td valign=top>
<a href="Built-in/isunlimited.shtml">
isunlimited</a></td>
<td>
Returns True if the given dimension name is defined as unlimited on the given file.
</td>
</tr>
<!--isunsigned-->
<tr>
<td valign=top>
<a href="Built-in/isunsigned.shtml">
isunsigned</a></td>
<td>
Returns True if input is one of the <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">unsigned types</a>.
</td>
</tr>
<!--isushort-->
<tr>
<td valign=top>
<a href="Built-in/isushort.shtml">
isushort</a></td>
<td>
Returns True if input is of type <a href="../Manuals/Ref_Manual/NclDataTypes.shtml">short</a>.
</td>
</tr>
<!--isvar-->
<tr>
<td valign=top>
<a href="Built-in/isvar.shtml">
isvar</a></td>
<td>
Returns True for every element of the input that is a defined <a href="../Manuals/Ref_Manual/NclVariables.shtml">variable</a>.
</td>
</tr>
<!--jul2greg-->
<tr>
<td valign=top><a name="J"></a>
<a href="Built-in/jul2greg.shtml">
jul2greg</a></td>
<td>
Converts the astronomical Julian day given a Gregorian date.
</td>
</tr>
<!--kf_filter-->
<tr>
<td valign=top><a name="K"></a>
<a href="User_contributed/kf_filter.shtml">
kf_filter</a></td>
<td>
Extract equatorial waves by filtering in the Wheeler-Kiladis  wavenumber-frequency domain.
</td>
</tr>
<!--kmeans_as136-->
<tr>
<td valign=top>
<a href="Built-in/kmeans_as136.shtml">
kmeans_as136</a></td>
<td>
Performs k-means clustering via the Hartigan and Wong AS-136 algorithm.
</td>
</tr>
<!--kolsm2_n-->
<tr>
<td valign=top>
<a href="Built-in/kolsm2_n.shtml">
kolsm2_n</a></td>
<td>
Use the Kolmogorov-Smirnov two-sample test to determine if two samples are from the same distribution.
</td>
</tr>
<!--kron_product-->
<tr>
<td valign=top>
<a href="Built-in/kron_product.shtml">
kron_product</a></td>
<td>
Computes the Kronecker product for two-dimensional matrices.
</td>
</tr>
<!--landsea_mask-->
<tr>
<td valign=top><a name="L"></a>
<a href="Shea_util/landsea_mask.shtml">
landsea_mask</a></td>
<td>
Returns a grid that contains a land sea mask given any latitude and longitude array.
</td>
</tr>
<!--lapsF-->
<tr>
<td valign=top>
<a href="Built-in/lapsF-1.shtml">
lapsF</a></td>
<td>
Computes the Laplacian using spherical harmonics, given a scalar z on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>.
</td>
</tr>
<!--lapsf-->
<tr>
<td valign=top>
<a href="Built-in/lapsf.shtml">
lapsf</a></td>
<td>
Computes the Laplacian using spherical harmonics, given a scalar z on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>.
</td>
</tr>
<!--lapsG-->
<tr>
<td valign=top>
<a href="Built-in/lapsG-1.shtml">
lapsG</a></td>
<td>
Computes the Laplacian using spherical harmonics, given a scalar z on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>.
</td>
</tr>
<!--lapsg-->
<tr>
<td valign=top>
<a href="Built-in/lapsg.shtml">
lapsg</a></td>
<td>
Computes the Laplacian using spherical harmonics, given a scalar z on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>.
</td>
</tr>
<!--lapvf-->
<tr>
<td valign=top>
<a href="Built-in/lapvf.shtml">
lapvf</a></td>
<td>
Computes the vector Laplacian using spherical harmonics, given a vector quantity (u,v) on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>.
</td>
</tr>
<!--lapvg-->
<tr>
<td valign=top>
<a href="Built-in/lapvg.shtml">
lapvg</a></td>
<td>
Computes the vector Laplacian using spherical harmonics, given a vector quantity (u,v) on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>.
</td>
</tr>
<!--latGau-->
<tr>
<td valign=top>
<a href="Contributed/latGau.shtml">
latGau</a></td>
<td>
Generates gaussian latitudes and associated metadata.
</td>
</tr>
<!--latGauWgt-->
<tr>
<td valign=top>
<a href="Contributed/latGauWgt.shtml">
latGauWgt</a></td>
<td>
Generates gaussian weights and associated metadata.
</td>
</tr>
<!--latGlobeF-->
<tr>
<td valign=top>
<a href="Contributed/latGlobeF.shtml">
latGlobeF</a></td>
<td>
Generates latitudes and associated metadata for a global <a href="sphpk_grids.shtml#FixedGrids"> fixed</a> grid.
</td>
</tr>
<!--latGlobeFo-->
<tr>
<td valign=top>
<a href="Contributed/latGlobeFo.shtml">
latGlobeFo</a></td>
<td>
Generates latitudes and associated metadata for a global <a href="sphpk_grids.shtml#FixedOffsetGrids"> fixed offset</a> grid.
</td>
</tr>
<!--latlon2utm-->
<tr>
<td valign=top>
<a href="Built-in/latlon2utm.shtml">
latlon2utm</a></td>
<td>
Converts from lat/lon to UTM using a specified datum.
</td>
</tr>
<!--latlon_to_SCRIP-->
<tr>
<td valign=top>
<a href="ESMF/latlon_to_SCRIP.shtml">
latlon_to_SCRIP</a></td>
<td>
Writes the description of a lat/lon grid to a SCRIP file.
</td>
</tr>
<!--latRegWgt-->
<tr>
<td valign=top>
<a href="Contributed/latRegWgt.shtml">
latRegWgt</a></td>
<td>
Generates [sin(lat+dlat/2)-sin(lat-dlat/2) weights for equally  spaced (regular) global grids that will sum to 2.0.
</td>
</tr>
<!--lclvl-->
<tr>
<td valign=top>
<a href="Built-in/lclvl.shtml">
lclvl</a></td>
<td>
Calculates the pressure of the lifting condensation level.
</td>
</tr>
<!--lderuvf-->
<tr>
<td valign=top>
<a href="Built-in/lderuvf.shtml">
lderuvf</a></td>
<td>
Computes the latitudinal derivatives using spherical harmonics, given vector components (u,v) on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>.
</td>
</tr>
<!--lderuvg-->
<tr>
<td valign=top>
<a href="Built-in/lderuvg.shtml">
lderuvg</a></td>
<td>
Computes the latitudinal derivatives using spherical harmonics, given vector components (u,v) on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>.
</td>
</tr>
<!--linint1-->
<tr>
<td valign=top>
<a href="Built-in/linint1.shtml">
linint1</a></td>
<td>
Interpolates from one series to another using piecewise linear interpolation across the rightmost dimension.
</td>
</tr>
<!--linint1_n-->
<tr>
<td valign=top>
<a href="Built-in/linint1_n.shtml">
linint1_n</a></td>
<td>
Interpolates from one series to another using piecewise linear interpolation across the given dimension.
</td>
</tr>
<!--linint1_n_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/linint1_n_Wrap.shtml">
linint1_n_Wrap</a></td>
<td>
Interpolates from one series to another using piecewise linear interpolation across the given dimension, and retains metadata.
</td>
</tr>
<!--linint1_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/linint1_Wrap.shtml">
linint1_Wrap</a></td>
<td>
Interpolates from one series to another using piecewise linear interpolation, and retains metadata.
</td>
</tr>
<!--linint2-->
<tr>
<td valign=top>
<a href="Built-in/linint2.shtml">
linint2</a></td>
<td>
Interpolates from a rectilinear grid to another rectilinear grid using bilinear interpolation.
</td>
</tr>
<!--linint2_points-->
<tr>
<td valign=top>
<a href="Built-in/linint2_points.shtml">
linint2_points</a></td>
<td>
Interpolates from a rectilinear grid to an unstructured grid using bilinear interpolation.
</td>
</tr>
<!--linint2_points_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/linint2_points_Wrap.shtml">
linint2_points_Wrap</a></td>
<td>
Interpolates from a rectilinear grid to an unstructured grid using bilinear interpolation, and retains metadata.
</td>
</tr>
<!--linint2_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/linint2_Wrap.shtml">
linint2_Wrap</a></td>
<td>
Interpolates from a rectilinear grid to another rectilinear grid using bilinear interpolation, and retains metadata.
</td>
</tr>
<!--linmsg-->
<tr>
<td valign=top>
<a href="Built-in/linmsg.shtml">
linmsg</a></td>
<td>
Linearly interpolates to fill in missing values.
</td>
</tr>
<!--linmsg_n-->
<tr>
<td valign=top>
<a href="Built-in/linmsg_n.shtml">
linmsg_n</a></td>
<td>
Linearly interpolates to fill in missing values, given the dimension to do the interpolation across.
</td>
</tr>
<!--linrood_latwgt-->
<tr>
<td valign=top>
<a href="Built-in/linrood_latwgt.shtml">
linrood_latwgt</a></td>
<td>
Computes the latitudes and weights used by the Lin-Rood Model.
</td>
</tr>
<!--linrood_wgt-->
<tr>
<td valign=top>
<a href="Built-in/linrood_wgt.shtml">
linrood_wgt</a></td>
<td>
Computes the weights used by the Lin-Rood Model.
</td>
</tr>
<!--list_files-->
<tr>
<td valign=top>
<a href="Built-in/list_files.shtml">
list_files</a></td>
<td>
Lists all of the variables that reference files.
</td>
</tr>
<!--list_filevars-->
<tr>
<td valign=top>
<a href="Built-in/list_filevars.shtml">
list_filevars</a></td>
<td>
Lists all of the variables associated with a specific file.
</td>
</tr>
<!--list_hlus-->
<tr>
<td valign=top>
<a href="Built-in/list_hlus.shtml">
list_hlus</a></td>
<td>
Lists all of the HLU objects currently referenced by NCL variables.
</td>
</tr>
<!--list_procfuncs-->
<tr>
<td valign=top>
<a href="Built-in/list_procfuncs.shtml">
list_procfuncs</a></td>
<td>
Lists all of the currently defined NCL functions and procedures and their argument lists.
</td>
</tr>
<!--list_vars-->
<tr>
<td valign=top>
<a href="Built-in/list_vars.shtml">
list_vars</a></td>
<td>
Lists the currently defined variables that do not reference files or HLU objects.
</td>
</tr>
<!--ListAppend-->
<tr>
<td valign=top>
<a href="Built-in/ListAppend.shtml">
ListAppend</a></td>
<td>
Append a variable into the list.
</td>
</tr>
<!--ListCount-->
<tr>
<td valign=top>
<a href="Built-in/ListCount.shtml">
ListCount</a></td>
<td>
Queries the number of element(s) in a list.
</td>
</tr>
<!--ListGetType-->
<tr>
<td valign=top>
<a href="Built-in/ListGetType.shtml">
ListGetType</a></td>
<td>
Queries the manner in which a variable of type list was created.
</td>
</tr>
<!--ListIndex-->
<tr>
<td valign=top>
<a href="Built-in/ListIndex.shtml">
ListIndex</a></td>
<td>
Queries the index of a variable in a list.
</td>
</tr>
<!--ListIndexFromName-->
<tr>
<td valign=top>
<a href="Built-in/ListIndexFromName.shtml">
ListIndexFromName</a></td>
<td>
Returns the index of a variable in a list given its name.
</td>
</tr>
<!--ListPop-->
<tr>
<td valign=top>
<a href="Built-in/ListPop.shtml">
ListPop</a></td>
<td>
Pop (out) an element from list.
</td>
</tr>
<!--ListPush-->
<tr>
<td valign=top>
<a href="Built-in/ListPush.shtml">
ListPush</a></td>
<td>
Push a variable into the list.
</td>
</tr>
<!--ListSetType-->
<tr>
<td valign=top>
<a href="Built-in/ListSetType.shtml">
ListSetType</a></td>
<td>
Specifies the manner in which a variable of type list is to be implemented.
</td>
</tr>
<!--loadscript-->
<tr>
<td valign=top>
<a href="Built-in/loadscript.shtml">
loadscript</a></td>
<td>
Loads the given NCL script.
</td>
</tr>
<!--local_max-->
<tr>
<td valign=top>
<a href="Built-in/local_max.shtml">
local_max</a></td>
<td>
Determines the relative maxima for a 2-dimensional array.
</td>
</tr>
<!--local_max_1d-->
<tr>
<td valign=top>
<a href="Contributed/local_max_1d.shtml">
local_max_1d</a></td>
<td>
Determines the relative maxima for a 1-dimensional array.
</td>
</tr>
<!--local_min-->
<tr>
<td valign=top>
<a href="Built-in/local_min.shtml">
local_min</a></td>
<td>
Determines the relative minima for a 2-dimensional array.
</td>
</tr>
<!--local_min_1d-->
<tr>
<td valign=top>
<a href="Contributed/local_min_1d.shtml">
local_min_1d</a></td>
<td>
Determines the relative minima for a 1-dimensional array.
</td>
</tr>
<!--log-->
<tr>
<td valign=top>
<a href="Built-in/log.shtml">
log</a></td>
<td>
Computes the natural log of a numeric type.
</td>
</tr>
<!--log10-->
<tr>
<td valign=top>
<a href="Built-in/log10.shtml">
log10</a></td>
<td>
Computes the log base 10 of a numeric type.
</td>
</tr>
<!--lonFlip-->
<tr>
<td valign=top>
<a href="Contributed/lonFlip.shtml">
lonFlip</a></td>
<td>
Reorders an array about the central longitude coordinate variable (rectilinear grids only).
</td>
</tr>
<!--lonGlobeF-->
<tr>
<td valign=top>
<a href="Contributed/lonGlobeF.shtml">
lonGlobeF</a></td>
<td>
Generates longitudes and associated metadata for a global  <a href="sphpk_grids.shtml#FixedGrids"> fixed</a> grid.
</td>
</tr>
<!--lonGlobeFo-->
<tr>
<td valign=top>
<a href="Contributed/lonGlobeFo.shtml">
lonGlobeFo</a></td>
<td>
Generates longitudes and associated metadata for a global  <a href="sphpk_grids.shtml#FixedOffsetGrids"> fixed offset</a> grid.
</td>
</tr>
<!--longtobyte-->
<tr>
<td valign=top>
<a href="Built-in/longtobyte.shtml">
longtobyte</a></td>
<td>
Coerces values of type long to values of type byte.
</td>
</tr>
<!--longtochar-->
<tr>
<td valign=top>
<a href="Built-in/longtochar.shtml">
longtochar</a></td>
<td>
Coerces values of type long to values of type character.
</td>
</tr>
<!--longtocharacter-->
<tr>
<td valign=top>
<a href="Built-in/longtocharacter.shtml">
longtocharacter</a></td>
<td>
Coerces values of type long to values of type character.
</td>
</tr>
<!--longtoint-->
<tr>
<td valign=top>
<a href="Built-in/longtoint.shtml">
longtoint</a></td>
<td>
Coerces values of type long to values of type integer.
</td>
</tr>
<!--longtointeger-->
<tr>
<td valign=top>
<a href="Built-in/longtointeger.shtml">
longtointeger</a></td>
<td>
Coerces values of type long to values of type integer.
</td>
</tr>
<!--longtoshort-->
<tr>
<td valign=top>
<a href="Built-in/longtoshort.shtml">
longtoshort</a></td>
<td>
Coerces values of type long to values of type short.
</td>
</tr>
<!--lonPivot-->
<tr>
<td valign=top>
<a href="Contributed/lonPivot.shtml">
lonPivot</a></td>
<td>
Pivots about a user specified longitude (rectilinear grids only).
</td>
</tr>
<!--lspoly-->
<tr>
<td valign=top>
<a href="Built-in/lspoly.shtml">
lspoly</a></td>
<td>
Calculates a set of coefficients for a weighted least squares  polynomial fit to the given data.
</td>
</tr>
<!--lspoly_n-->
<tr>
<td valign=top>
<a href="Built-in/lspoly_n.shtml">
lspoly_n</a></td>
<td>
Calculates a set of coefficients for a weighted least squares  polynomial fit to the given data on the given dimension.
</td>
</tr>
<!--mask-->
<tr>
<td valign=top><a name="M"></a>
<a href="Built-in/mask.shtml">
mask</a></td>
<td>
Masks a multi-dimensional array against another given a single mask value.
</td>
</tr>
<!--max-->
<tr>
<td valign=top>
<a href="Built-in/max.shtml">
max</a></td>
<td>
Computes the maximum value of a multi-dimensional array.
</td>
</tr>
<!--maximize_output-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/maximize_output.shtml">
maximize_output</a></td>
<td>
Maximizes the sizes of a series of plots drawn in a single frame.
</td>
</tr>
<!--maxind-->
<tr>
<td valign=top>
<a href="Built-in/maxind.shtml">
maxind</a></td>
<td>
Returns the index of the first occurrence of a maximum value.
</td>
</tr>
<!--merge_levels_sfc-->
<tr>
<td valign=top>
<a href="Contributed/merge_levels_sfc.shtml">
merge_levels_sfc</a></td>
<td>
Merges a multiple level variable with the corresponding surface variable.
</td>
</tr>
<!--min-->
<tr>
<td valign=top>
<a href="Built-in/min.shtml">
min</a></td>
<td>
Computes the minimum value of a multi-dimensional array.
</td>
</tr>
<!--minind-->
<tr>
<td valign=top>
<a href="Built-in/minind.shtml">
minind</a></td>
<td>
Returns the index of the first occurrence of a minimum value.
</td>
</tr>
<!--mixed_layer_depth-->
<tr>
<td valign=top>
<a href="Built-in/mixed_layer_depth.shtml">
mixed_layer_depth</a></td>
<td>
Calculates a quantity derived from the Potential Density of significance. (Documentation under construction.)
</td>
</tr>
<!--mixhum_ptd-->
<tr>
<td valign=top>
<a href="Built-in/mixhum_ptd.shtml">
mixhum_ptd</a></td>
<td>
Calculates the mixing ratio or specific humidity given pressure and dew point temperature.
</td>
</tr>
<!--mixhum_ptrh-->
<tr>
<td valign=top>
<a href="Built-in/mixhum_ptrh.shtml">
mixhum_ptrh</a></td>
<td>
Calculates the mixing ratio or specific humidity given pressure, temperature and relative humidity.
</td>
</tr>
<!--mjo_cross-->
<tr>
<td valign=top>
<a href="Diagnostics/mjo_cross.shtml">
mjo_cross</a></td>
<td>
Calculate space-time cross spectrum over multiple segments.
</td>
</tr>
<!--mjo_cross_coh2pha-->
<tr>
<td valign=top>
<a href="Built-in/mjo_cross_coh2pha.shtml">
mjo_cross_coh2pha</a></td>
<td>
Calculate space-time coherence-squared and phase using the array returned by <a href="Built-in/mjo_cross_segment.shtml"><strong>mjo_cross_segment</strong></a> .
</td>
</tr>
<!--mjo_cross_plot-->
<tr>
<td valign=top>
<a href="Diagnostics/mjo_cross_plot.shtml">
mjo_cross_plot</a></td>
<td>
Plot coherence-squared and phase spectra as returned by  <a href="Diagnostics/mjo_cross.shtml"><strong>mjo_cross</strong></a>.
</td>
</tr>
<!--mjo_cross_segment-->
<tr>
<td valign=top>
<a href="Built-in/mjo_cross_segment.shtml">
mjo_cross_segment</a></td>
<td>
Calculate space-time cross spectrum for a single time segment.
</td>
</tr>
<!--mjo_phase_background-->
<tr>
<td valign=top>
<a href="Diagnostics/mjo_phase_background.shtml">
mjo_phase_background</a></td>
<td>
Plot background for MJO phase-space diagram.
</td>
</tr>
<!--mjo_space_time_cross-->
<tr>
<td valign=top>
<a href="Diagnostics/mjo_space_time_cross.shtml">
mjo_space_time_cross</a></td>
<td>
Calculate space-time cross spectrum over multiple segments.
</td>
</tr>
<!--mjo_spectra-->
<tr>
<td valign=top>
<a href="Diagnostics/mjo_spectra.shtml">
mjo_spectra</a></td>
<td>
Driver to calculate and plot seasonal spectra via segment averaging  as defined by the <a href="http://climate.snu.ac.kr/mjo_diagnostics/index.htm">  US-CLIVAR MJO diagnostics website </a>.
</td>
</tr>
<!--mjo_spectra_season-->
<tr>
<td valign=top>
<a href="Diagnostics/mjo_spectra_season.shtml">
mjo_spectra_season</a></td>
<td>
Calculates seasonal spectra via segment averaging as defined by the <a href="http://climate.snu.ac.kr/mjo_diagnostics/index.htm">  US-CLIVAR MJO diagnostics website </a>.
</td>
</tr>
<!--mjo_wavenum_freq_season-->
<tr>
<td valign=top>
<a href="Diagnostics/mjo_wavenum_freq_season.shtml">
mjo_wavenum_freq_season</a></td>
<td>
Calculates wavenumber-frequency spectar via seasonal averaging as defined by the <a href="http://climate.snu.ac.kr/mjo_diagnostics/index.htm">  US-CLIVAR MJO diagnostics website </a>.
</td>
</tr>
<!--mjo_wavenum_freq_season_plot-->
<tr>
<td valign=top>
<a href="Diagnostics/mjo_wavenum_freq_season_plot.shtml">
mjo_wavenum_freq_season_plot</a></td>
<td>
Plot wavenumber-frequency spectra as returned by  <a href="Diagnostics/mjo_wavenum_freq_season.shtml"><strong>mjo_wavenum_freq_season</strong></a>.
</td>
</tr>
<!--mjo_xcor_lag_ovly-->
<tr>
<td valign=top>
<a href="Diagnostics/mjo_xcor_lag_ovly.shtml">
mjo_xcor_lag_ovly</a></td>
<td>
Plot lagged cross-correlations as returned by  <a href="Diagnostics/mjo_xcor_lag_season.shtml"><strong>mjo_xcor_lag_season</strong></a>.
</td>
</tr>
<!--mjo_xcor_lag_ovly_panel-->
<tr>
<td valign=top>
<a href="Diagnostics/mjo_xcor_lag_ovly_panel.shtml">
mjo_xcor_lag_ovly_panel</a></td>
<td>
Plot lagged cross-correlations as returned by  <a href="Diagnostics/mjo_xcor_lag_season.shtml"><strong>mjo_xcor_lag_season</strong></a> as panels.
</td>
</tr>
<!--mjo_xcor_lag_season-->
<tr>
<td valign=top>
<a href="Diagnostics/mjo_xcor_lag_season.shtml">
mjo_xcor_lag_season</a></td>
<td>
Calculates lagged correlations between a reference series and gridded data as specified by the <a href="http://climate.snu.ac.kr/mjo_diagnostics/index.htm">  US-CLIVAR MJO diagnostics website </a>.
</td>
</tr>
<!--moc_globe_atl-->
<tr>
<td valign=top>
<a href="Built-in/moc_globe_atl.shtml">
moc_globe_atl</a></td>
<td>
Facilitates calculating the meridional overturning circulation for the globe and Atlantic.
</td>
</tr>
<!--mod-->
<tr>
<td valign=top>
<a href="Contributed/mod.shtml">
mod</a></td>
<td>
Remainder function which emulates the fortran "mod" intrinsic function.
</td>
</tr>
<!--month_to_annual-->
<tr>
<td valign=top>
<a href="Contributed/month_to_annual.shtml">
month_to_annual</a></td>
<td>
Converts monthly values to annual values.
</td>
</tr>
<!--month_to_annual_weighted-->
<tr>
<td valign=top>
<a href="Contributed/month_to_annual_weighted.shtml">
month_to_annual_weighted</a></td>
<td>
Converts monthly values to annual values weighted by the number of days in a month.
</td>
</tr>
<!--month_to_season-->
<tr>
<td valign=top>
<a href="Contributed/month_to_season.shtml">
month_to_season</a></td>
<td>
Computes a user-specified three-month seasonal mean (DJF, JFM, FMA, MAM, AMJ, MJJ, JJA, JAS, ASO, SON, OND, NDJ).
</td>
</tr>
<!--month_to_season12-->
<tr>
<td valign=top>
<a href="Contributed/month_to_season12.shtml">
month_to_season12</a></td>
<td>
Computes three-month seasonal means (DJF, JFM, FMA, MAM, AMJ, MJJ, JJA, JAS, ASO, SON, OND, NDJ).
</td>
</tr>
<!--month_to_seasonN-->
<tr>
<td valign=top>
<a href="Contributed/month_to_seasonN.shtml">
month_to_seasonN</a></td>
<td>
Computes a user-specified list of three-month seasonal means (DJF, JFM, FMA, MAM, AMJ, MJJ, JJA, JAS, ASO, SON, OND, NDJ).
</td>
</tr>
<!--monthday-->
<tr>
<td valign=top>
<a href="Built-in/monthday.shtml">
monthday</a></td>
<td>
Calculates a concatenated month_day given a day and year.
</td>
</tr>
<!--monthly_total_to_daily_mean-->
<tr>
<td valign=top>
<a href="Contributed/monthly_total_to_daily_mean.shtml">
monthly_total_to_daily_mean</a></td>
<td>
Convert monthly total values [eg, precipitation] to "per day" values.
</td>
</tr>
<!--msgValOutline-->
<tr>
<td valign=top>
<a href="Shea_util/msgValOutline.shtml">
msgValOutline</a></td>
<td>
Draws an outline around missing data in vector and streamline plots.
</td>
</tr>
<!--namedcolor2rgb-->
<tr>
<td valign=top><a name="N"></a>
<a href="../Graphics/Interfaces/namedcolor2rgb.shtml">
namedcolor2rgb</a></td>
<td>
Returns the RGB triplets of the given list of <a href="../Graphics/named_colors.shtml">named colors</a>.
</td>
</tr>
<!--namedcolor2rgba-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/namedcolor2rgba.shtml">
namedcolor2rgba</a></td>
<td>
Returns the RGBA quadruplets of the given list of <a href="../Graphics/named_colors.shtml">named colors</a>.
</td>
</tr>
<!--nameDim-->
<tr>
<td valign=top>
<a href="Contributed/nameDim.shtml">
nameDim</a></td>
<td>
Assigns given named dimensions, long_name, and units to the input variable.
</td>
</tr>
<!--natgrid-->
<tr>
<td valign=top>
<a href="Built-in/natgrid.shtml">
natgrid</a></td>
<td>
Interpolates data from an unstructured (randomly-spaced) grid to a rectilinear grid using natural neighbor interpolation.
</td>
</tr>
<!--natgrid_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/natgrid_Wrap.shtml">
natgrid_Wrap</a></td>
<td>
Interpolates data from an unstructured (randomly-spaced) grid to a rectilinear grid using natural neighbor interpolation and retains metadata.
</td>
</tr>
<!--natgridd-->
<tr>
<td valign=top>
<a href="Built-in/natgridd.shtml">
natgridd</a></td>
<td>
Interpolates double data on an unstructured grid to a rectilinear grid. (<font color=red>Deprecated version</font>.)
</td>
</tr>
<!--natgrids-->
<tr>
<td valign=top>
<a href="Built-in/natgrids.shtml">
natgrids</a></td>
<td>
Interpolates float data on an unstructured grid to a rectilinear grid. (<font color=red>Deprecated version</font>.)
</td>
</tr>
<!--ncargpath-->
<tr>
<td valign=top>
<a href="Built-in/ncargpath.shtml">
ncargpath</a></td>
<td>
Returns the absolute pathnames of various NCAR Graphics directories.
</td>
</tr>
<!--ncargversion-->
<tr>
<td valign=top>
<a href="Built-in/ncargversion.shtml">
ncargversion</a></td>
<td>
Prints the NCAR Graphics version, copyright, trademark and general licensing terms.
</td>
</tr>
<!--ndctodata-->
<tr>
<td valign=top>
<a href="Built-in/ndctodata.shtml">
ndctodata</a></td>
<td>
Converts normalized device coordinates (<a href="../Graphics/ndc.shtml">NDCs</a>) into data coordinates.
</td>
</tr>
<!--ndtooned-->
<tr>
<td valign=top>
<a href="Built-in/ndtooned.shtml">
ndtooned</a></td>
<td>
Converts a multi-dimensional array to a one-dimensional array.
</td>
</tr>
<!--new-->
<tr>
<td valign=top>
<a href="Built-in/new.shtml">
new</a></td>
<td>
Creates an <a href="../Manuals/Ref_Manual/NclVariables.shtml">NCL variable</a>.
</td>
</tr>
<!--NewCosWeight-->
<tr>
<td valign=top>
<a href="Contributed/NewCosWeight.shtml">
NewCosWeight</a></td>
<td>
Performs cosine of the latitude weighting on the given array.
</td>
</tr>
<!--NewList-->
<tr>
<td valign=top>
<a href="Built-in/NewList.shtml">
NewList</a></td>
<td>
Create a list (type variable).
</td>
</tr>
<!--ngezlogo-->
<tr>
<td valign=top>
<a href="Built-in/ngezlogo.shtml">
ngezlogo</a></td>
<td>
Draws the NCAR logo in the lower right corner of the given workstation.
</td>
</tr>
<!--nggcog-->
<tr>
<td valign=top>
<a href="Built-in/nggcog.shtml">
nggcog</a></td>
<td>
Calculates the latitudes and longitudes of a set of points approximating a circle at a given point on the surface of the globe.
</td>
</tr>
<!--nggetp-->
<tr>
<td valign=top>
<a href="Built-in/nggetp.shtml">
nggetp</a></td>
<td>
Retrieves values for various parameters for the NCAR <a href="Built-in/ngezlogo.shtml"><strong>ngezlogo</strong></a> procedure.
</td>
</tr>
<!--nglogo-->
<tr>
<td valign=top>
<a href="Built-in/nglogo.shtml">
nglogo</a></td>
<td>
Draws various NCAR and UCAR logos on the given workstation.
</td>
</tr>
<!--ngsetp-->
<tr>
<td valign=top>
<a href="Built-in/ngsetp.shtml">
ngsetp</a></td>
<td>
Sets values for various parameters for the NCAR <a href="Built-in/ngezlogo.shtml"><strong>ngezlogo</strong></a> procedure.
</td>
</tr>
<!--NhlAddAnnotation-->
<tr>
<td valign=top>
<a href="Built-in/NhlAddAnnotation.shtml">
NhlAddAnnotation</a></td>
<td>
Add annotations to a plot object as an external annotation.
</td>
</tr>
<!--NhlAddData-->
<tr>
<td valign=top>
<a href="Built-in/NhlAddData.shtml">
NhlAddData</a></td>
<td>
Adds one or more additional data items to a plot.
</td>
</tr>
<!--NhlAddOverlay-->
<tr>
<td valign=top>
<a href="Built-in/NhlAddOverlay.shtml">
NhlAddOverlay</a></td>
<td>
Overlays one plot object on another.
</td>
</tr>
<!--NhlAddPrimitive-->
<tr>
<td valign=top>
<a href="Built-in/NhlAddPrimitive.shtml">
NhlAddPrimitive</a></td>
<td>
Adds a <a href="../HLUs/Classes/Primitive.shtml"><strong>Primitive</strong></a> object to an existing plot.
</td>
</tr>
<!--NhlAppGetDefaultParentId-->
<tr>
<td valign=top>
<a href="Built-in/NhlAppGetDefaultParentId.shtml">
NhlAppGetDefaultParentId</a></td>
<td>
Returns a reference to the current default <a href="../HLUs/Classes/App.shtml"><strong>App</strong></a> object.
</td>
</tr>
<!--NhlChangeWorkstation-->
<tr>
<td valign=top>
<a href="Built-in/NhlChangeWorkstation.shtml">
NhlChangeWorkstation</a></td>
<td>
Changes the output workstation of one or more NCL <a href="../HLUs/Classes/View.shtml"><strong>View</strong></a> objects.
</td>
</tr>
<!--NhlClassName-->
<tr>
<td valign=top>
<a href="Built-in/NhlClassName.shtml">
NhlClassName</a></td>
<td>
Retrieve the class name of one or more NCL objects.
</td>
</tr>
<!--NhlClearWorkstation-->
<tr>
<td valign=top>
<a href="Built-in/NhlClearWorkstation.shtml">
NhlClearWorkstation</a></td>
<td>
Clears the given workstation objects.
</td>
</tr>
<!--NhlDataPolygon-->
<tr>
<td valign=top>
<a href="Built-in/NhlDataPolygon.shtml">
NhlDataPolygon</a></td>
<td>
Draws a polygon using data coordinates.
</td>
</tr>
<!--NhlDataPolyline-->
<tr>
<td valign=top>
<a href="Built-in/NhlDataPolyline.shtml">
NhlDataPolyline</a></td>
<td>
Draws a polyline using data coordinates.
</td>
</tr>
<!--NhlDataPolymarker-->
<tr>
<td valign=top>
<a href="Built-in/NhlDataPolymarker.shtml">
NhlDataPolymarker</a></td>
<td>
Draws polymarkers using data coordinates.
</td>
</tr>
<!--NhlDataToNDC-->
<tr>
<td valign=top>
<a href="Built-in/NhlDataToNDC.shtml">
NhlDataToNDC</a></td>
<td>
Converts data units into normalized device coordinates (<a href="../Graphics/ndc.shtml">NDCs</a>).
</td>
</tr>
<!--NhlDestroy-->
<tr>
<td valign=top>
<a href="Built-in/NhlDestroy.shtml">
NhlDestroy</a></td>
<td>
Destroys objects from NCL.
</td>
</tr>
<!--NhlDraw-->
<tr>
<td valign=top>
<a href="Built-in/NhlDraw.shtml">
NhlDraw</a></td>
<td>
Draws the given graphical objects.
</td>
</tr>
<!--NhlFrame-->
<tr>
<td valign=top>
<a href="Built-in/NhlFrame.shtml">
NhlFrame</a></td>
<td>
Updates and clears the given workstation objects.
</td>
</tr>
<!--NhlFreeColor-->
<tr>
<td valign=top>
<a href="Built-in/NhlFreeColor.shtml">
NhlFreeColor</a></td>
<td>
Removes one or more color entries from one or more workstations.
</td>
</tr>
<!--NhlGetBB-->
<tr>
<td valign=top>
<a href="Built-in/NhlGetBB.shtml">
NhlGetBB</a></td>
<td>
Retrieves the bounding boxes of a list of NCL objects.
</td>
</tr>
<!--NhlGetClassResources-->
<tr>
<td valign=top>
<a href="Built-in/NhlGetClassResources.shtml">
NhlGetClassResources</a></td>
<td>
Returns a list of resources associated with the given class name and an optional filter string.
</td>
</tr>
<!--NhlGetErrorObjectId-->
<tr>
<td valign=top>
<a href="Built-in/NhlGetErrorObjectId.shtml">
NhlGetErrorObjectId</a></td>
<td>
Returns a reference to the current <a href="../HLUs/Classes/Error.shtml"><strong>Error</strong></a> object.
</td>
</tr>
<!--NhlGetNamedColorIndex-->
<tr>
<td valign=top>
<a href="Built-in/NhlGetNamedColorIndex.shtml">
NhlGetNamedColorIndex</a></td>
<td>
Returns color map indexes that match the given color names in the color maps of the given workstations.
</td>
</tr>
<!--NhlGetParentId-->
<tr>
<td valign=top>
<a href="Built-in/NhlGetParentId.shtml">
NhlGetParentId</a></td>
<td>
Returns the ids of the parent ids of the given objects.
</td>
</tr>
<!--NhlGetParentWorkstation-->
<tr>
<td valign=top>
<a href="Built-in/NhlGetParentWorkstation.shtml">
NhlGetParentWorkstation</a></td>
<td>
Returns the ids of the parent workstations of the given objects.
</td>
</tr>
<!--NhlGetWorkspaceObjectId-->
<tr>
<td valign=top>
<a href="Built-in/NhlGetWorkspaceObjectId.shtml">
NhlGetWorkspaceObjectId</a></td>
<td>
Returns a reference to the current <a href="../HLUs/Classes/Workspace.shtml"><strong>Workspace</strong></a> object.
</td>
</tr>
<!--NhlIsAllocatedColor-->
<tr>
<td valign=top>
<a href="Built-in/NhlIsAllocatedColor.shtml">
NhlIsAllocatedColor</a></td>
<td>
Queries a list of workstations to determine whether or not the given color indexes have been allocated.
</td>
</tr>
<!--NhlIsApp-->
<tr>
<td valign=top>
<a href="Built-in/NhlIsApp.shtml">
NhlIsApp</a></td>
<td>
Returns True for each given object that is an <a href="../HLUs/Classes/App.shtml"><strong>App</strong></a> object.
</td>
</tr>
<!--NhlIsDataComm-->
<tr>
<td valign=top>
<a href="Built-in/NhlIsDataComm.shtml">
NhlIsDataComm</a></td>
<td>
Returns True for each given object that is a <a href="../HLUs/Classes/DataComm.shtml"><strong>DataComm</strong></a> object.
</td>
</tr>
<!--NhlIsDataItem-->
<tr>
<td valign=top>
<a href="Built-in/NhlIsDataItem.shtml">
NhlIsDataItem</a></td>
<td>
Returns True for each given object that is a <a href="../HLUs/Classes/DataItem.shtml"><strong>DataItem</strong></a> object.
</td>
</tr>
<!--NhlIsDataSpec-->
<tr>
<td valign=top>
<a href="Built-in/NhlIsDataSpec.shtml">
NhlIsDataSpec</a></td>
<td>
Returns True for each given object that is a <a href="../HLUs/Classes/DataSpec.shtml"><strong>DataSpec</strong></a> object.
</td>
</tr>
<!--NhlIsTransform-->
<tr>
<td valign=top>
<a href="Built-in/NhlIsTransform.shtml">
NhlIsTransform</a></td>
<td>
Returns True for each given object that is a <a href="../HLUs/Classes/Transform.shtml"><strong>Transform</strong></a> object.
</td>
</tr>
<!--NhlIsView-->
<tr>
<td valign=top>
<a href="Built-in/NhlIsView.shtml">
NhlIsView</a></td>
<td>
Returns True for each given object that is a <a href="../HLUs/Classes/View.shtml"><strong>View</strong></a> object.
</td>
</tr>
<!--NhlIsWorkstation-->
<tr>
<td valign=top>
<a href="Built-in/NhlIsWorkstation.shtml">
NhlIsWorkstation</a></td>
<td>
Returns True for each given object that is a <a href="../HLUs/Classes/Workstation.shtml"><strong>Workstation</strong></a> object.
</td>
</tr>
<!--NhlName-->
<tr>
<td valign=top>
<a href="Built-in/NhlName.shtml">
NhlName</a></td>
<td>
Retrieves the name of one or more NCL objects.
</td>
</tr>
<!--NhlNDCPolygon-->
<tr>
<td valign=top>
<a href="Built-in/NhlNDCPolygon.shtml">
NhlNDCPolygon</a></td>
<td>
Draws a polygon using <a href="../Graphics/ndc.shtml">NDC</a> coordinates.
</td>
</tr>
<!--NhlNDCPolyline-->
<tr>
<td valign=top>
<a href="Built-in/NhlNDCPolyline.shtml">
NhlNDCPolyline</a></td>
<td>
Draws a polyline using <a href="../Graphics/ndc.shtml">NDC</a> coordinates.
</td>
</tr>
<!--NhlNDCPolymarker-->
<tr>
<td valign=top>
<a href="Built-in/NhlNDCPolymarker.shtml">
NhlNDCPolymarker</a></td>
<td>
Draws polymarkers using <a href="../Graphics/ndc.shtml">NDC</a> coordinates.
</td>
</tr>
<!--NhlNDCToData-->
<tr>
<td valign=top>
<a href="Built-in/NhlNDCToData.shtml">
NhlNDCToData</a></td>
<td>
Converts normalized device coordinates (<a href="../Graphics/ndc.shtml">NDCs</a>) into data coordinates.
</td>
</tr>
<!--NhlNewColor-->
<tr>
<td valign=top>
<a href="Built-in/NhlNewColor.shtml">
NhlNewColor</a></td>
<td>
Allocates new workstation color indexes.
</td>
</tr>
<!--NhlNewDashPattern-->
<tr>
<td valign=top>
<a href="Built-in/NhlNewDashPattern.shtml">
NhlNewDashPattern</a></td>
<td>
Adds new dash patterns to the existing <a href="../Graphics/dash_patterns.shtml">table of dash patterns</a>.
</td>
</tr>
<!--NhlNewMarker-->
<tr>
<td valign=top>
<a href="Built-in/NhlNewMarker.shtml">
NhlNewMarker</a></td>
<td>
Adds new markers to the existing <a href="../Graphics/marker_styles.shtml">table of markers</a>.
</td>
</tr>
<!--NhlPalGetDefined-->
<tr>
<td valign=top>
<a href="Built-in/NhlPalGetDefined.shtml">
NhlPalGetDefined</a></td>
<td>
Returns a list of available color maps.
</td>
</tr>
<!--NhlRemoveAnnotation-->
<tr>
<td valign=top>
<a href="Built-in/NhlRemoveAnnotation.shtml">
NhlRemoveAnnotation</a></td>
<td>
Remove annotations from the plot they are registered in.
</td>
</tr>
<!--NhlRemoveData-->
<tr>
<td valign=top>
<a href="Built-in/NhlRemoveData.shtml">
NhlRemoveData</a></td>
<td>
Removes data items from one or more plots.
</td>
</tr>
<!--NhlRemoveOverlay-->
<tr>
<td valign=top>
<a href="Built-in/NhlRemoveOverlay.shtml">
NhlRemoveOverlay</a></td>
<td>
Removes one or more plots from an overlay.
</td>
</tr>
<!--NhlRemovePrimitive-->
<tr>
<td valign=top>
<a href="Built-in/NhlRemovePrimitive.shtml">
NhlRemovePrimitive</a></td>
<td>
Removes one or more primitives from the given <a href="../HLUs/Classes/Transform.shtml"><strong>Transform</strong></a> object.
</td>
</tr>
<!--NhlSetColor-->
<tr>
<td valign=top>
<a href="Built-in/NhlSetColor.shtml">
NhlSetColor</a></td>
<td>
Sets the colors for a given list of color indexes and workstations.
</td>
</tr>
<!--NhlSetDashPattern-->
<tr>
<td valign=top>
<a href="Built-in/NhlSetDashPattern.shtml">
NhlSetDashPattern</a></td>
<td>
Sets the dash patterns for a given list of dash pattern indexes and workstations.
</td>
</tr>
<!--NhlSetMarker-->
<tr>
<td valign=top>
<a href="Built-in/NhlSetMarker.shtml">
NhlSetMarker</a></td>
<td>
Sets the markers for a given list of marker indexes and workstations.
</td>
</tr>
<!--NhlUpdateData-->
<tr>
<td valign=top>
<a href="Built-in/NhlUpdateData.shtml">
NhlUpdateData</a></td>
<td>
Forces the <a href="../HLUs/Classes/DataComm.shtml"><strong>DataComm</strong></a> instances to update their internal states.
</td>
</tr>
<!--NhlUpdateWorkstation-->
<tr>
<td valign=top>
<a href="Built-in/NhlUpdateWorkstation.shtml">
NhlUpdateWorkstation</a></td>
<td>
Updates the given workstation objects.
</td>
</tr>
<!--nice_mnmxintvl-->
<tr>
<td valign=top>
<a href="Built-in/nice_mnmxintvl.shtml">
nice_mnmxintvl</a></td>
<td>
Calculates "nice" values for endpoints and spacing to be used for creating a series of equally-spaced levels through the data domain.
</td>
</tr>
<!--niceLatLon2D-->
<tr>
<td valign=top>
<a href="Contributed/niceLatLon2D.shtml">
niceLatLon2D</a></td>
<td>
Check two dimensional map coordinates to see if they have a "nice" structure.
</td>
</tr>
<!--nngetaspectd-->
<tr>
<td valign=top>
<a href="Built-in/nngetaspectd.shtml">
nngetaspectd</a></td>
<td>
Retrieves an <a href="http://www.ncarg.ucar.edu//ngmath/definitions.html#Aspect">aspect</a> at a specified coordinate position.
</td>
</tr>
<!--nngetaspects-->
<tr>
<td valign=top>
<a href="Built-in/nngetaspects.shtml">
nngetaspects</a></td>
<td>
Retrieves an <a href="http://www.ncarg.ucar.edu//ngmath/definitions.html#Aspect">aspect</a> at a specified coordinate position.
</td>
</tr>
<!--nngetp-->
<tr>
<td valign=top>
<a href="Built-in/nngetp.shtml">
nngetp</a></td>
<td>
Retrieves <a href="http://www.ncarg.ucar.edu//ngmath/definitions.html#ControlParameter">control parameters</a> for <a href="http://www.ncarg.ucar.edu//ngmath/natgrid/nnhome.html">Natgrid</a> routines.
</td>
</tr>
<!--nngetsloped-->
<tr>
<td valign=top>
<a href="Built-in/nngetsloped.shtml">
nngetsloped</a></td>
<td>
Retrieves a <a href="http://www.ncarg.ucar.edu//ngmath/definitions.html#Slope">slope</a> at a specified coordinate position.
</td>
</tr>
<!--nngetslopes-->
<tr>
<td valign=top>
<a href="Built-in/nngetslopes.shtml">
nngetslopes</a></td>
<td>
Retrieves a <a href="http://www.ncarg.ucar.edu//ngmath/definitions.html#Slope">slope</a> at a specified coordinate position.
</td>
</tr>
<!--nngetwts-->
<tr>
<td valign=top>
<a href="Built-in/nngetwts.shtml">
nngetwts</a></td>
<td>
Retrieves natural neighbors and weights for the function values at those neighbors.
</td>
</tr>
<!--nngetwtsd-->
<tr>
<td valign=top>
<a href="Built-in/nngetwtsd.shtml">
nngetwtsd</a></td>
<td>
Retrieves natural neighbors and weights for the function values at those neighbors.
</td>
</tr>
<!--nnpnt-->
<tr>
<td valign=top>
<a href="Built-in/nnpnt.shtml">
nnpnt</a></td>
<td>
Interpolates from 2D random data to get values at a specified set of points.
</td>
</tr>
<!--nnpntd-->
<tr>
<td valign=top>
<a href="Built-in/nnpntd.shtml">
nnpntd</a></td>
<td>
Interpolates from 2D random double data to get values at a specified set of points.  (<font color=red>Deprecated version</font>.)
</td>
</tr>
<!--nnpntend-->
<tr>
<td valign=top>
<a href="Built-in/nnpntend.shtml">
nnpntend</a></td>
<td>
Terminates interpolation from 2D random data to get values at a specified set of points.
</td>
</tr>
<!--nnpntendd-->
<tr>
<td valign=top>
<a href="Built-in/nnpntendd.shtml">
nnpntendd</a></td>
<td>
Terminates interpolation from 2D random data to get values at a specified set of points.
</td>
</tr>
<!--nnpntinit-->
<tr>
<td valign=top>
<a href="Built-in/nnpntinit.shtml">
nnpntinit</a></td>
<td>
Initializes internal quantities, for given input data, to allow subsequent <a href="Built-in/nnpnt.shtml"><strong>nnpnt</strong></a> calls to interpolate at specified points.
</td>
</tr>
<!--nnpntinitd-->
<tr>
<td valign=top>
<a href="Built-in/nnpntinitd.shtml">
nnpntinitd</a></td>
<td>
Initializes internal quantities, for given input data, to allow subsequent <a href="Built-in/nnpntd.shtml"><strong>nnpntd</strong></a> calls to interpolate at specified points.
</td>
</tr>
<!--nnpntinits-->
<tr>
<td valign=top>
<a href="Built-in/nnpntinits.shtml">
nnpntinits</a></td>
<td>
Initializes internal quantities, for given input data, to allow subsequent <a href="Built-in/nnpnts.shtml"><strong>nnpnts</strong></a> calls to interpolate at specified points.
</td>
</tr>
<!--nnpnts-->
<tr>
<td valign=top>
<a href="Built-in/nnpnts.shtml">
nnpnts</a></td>
<td>
Interpolates from 2D random float data to get values at a specified set of points.  (<font color=red>Deprecated version</font>.)
</td>
</tr>
<!--nnsetp-->
<tr>
<td valign=top>
<a href="Built-in/nnsetp.shtml">
nnsetp</a></td>
<td>
Sets <a href="http://www.ncarg.ucar.edu//ngmath/definitions.html#ControlParameter">control parameters</a> for <a href="http://www.ncarg.ucar.edu//ngmath/natgrid/nnhome.html">Natgrid</a> routines.
</td>
</tr>
<!--NormCosWgtGlobe-->
<tr>
<td valign=top>
<a href="Contributed/NormCosWgtGlobe.shtml">
NormCosWgtGlobe</a></td>
<td>
Create normalized cosine weights that sum to 2.0.
</td>
</tr>
<!--num-->
<tr>
<td valign=top>
<a href="Built-in/num.shtml">
num</a></td>
<td>
Counts the number of True values in the input.
</td>
</tr>
<!--numAsciiCol-->
<tr>
<td valign=top>
<a href="Contributed/numAsciiCol.shtml">
numAsciiCol</a></td>
<td>
Returns the number of columns in an ASCII file.
</td>
</tr>
<!--numAsciiRow-->
<tr>
<td valign=top>
<a href="Contributed/numAsciiRow.shtml">
numAsciiRow</a></td>
<td>
Returns the number of rows in an ASCII file.
</td>
</tr>
<!--numeric2int-->
<tr>
<td valign=top>
<a href="Contributed/numeric2int.shtml">
numeric2int</a></td>
<td>
Converts values of any numeric type to type integer.
</td>
</tr>
<!--obj_anal_ic-->
<tr>
<td valign=top><a name="O"></a>
<a href="Built-in/obj_anal_ic.shtml">
obj_anal_ic</a></td>
<td>
Iterative improvement objective analysis.
</td>
</tr>
<!--obj_anal_ic_deprecated-->
<tr>
<td valign=top>
<a href="Contributed/obj_anal_ic_deprecated.shtml">
obj_anal_ic_deprecated</a></td>
<td>
Iterative correction objective analysis (Cressman, Barnes).
</td>
</tr>
<!--obj_anal_ic_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/obj_anal_ic_Wrap.shtml">
obj_anal_ic_Wrap</a></td>
<td>
Iterative improvement objective analysis and returns meta data.
</td>
</tr>
<!--omega_ccm-->
<tr>
<td valign=top>
<a href="Built-in/omega_ccm.shtml">
omega_ccm</a></td>
<td>
Calculates omega [vertical pressure velocity] using the model diagnostic method.
</td>
</tr>
<!--omega_ccm_driver-->
<tr>
<td valign=top>
<a href="Contributed/omega_ccm_driver.shtml">
omega_ccm_driver</a></td>
<td>
Computes vertical pressure velocity [omega] via model diagnostic code.
</td>
</tr>
<!--omega_to_w-->
<tr>
<td valign=top>
<a href="Contributed/omega_to_w.shtml">
omega_to_w</a></td>
<td>
Convert omega vertical velocity (Pa/s) to (m/s).
</td>
</tr>
<!--onedtond-->
<tr>
<td valign=top>
<a href="Built-in/onedtond.shtml">
onedtond</a></td>
<td>
Converts a one-dimensional array to a multi-dimensional array.
</td>
</tr>
<!--oneDtostring-->
<tr>
<td valign=top>
<a href="Contributed/oneDtostring.shtml">
oneDtostring</a></td>
<td>
Converts a 1-dimensional array to a single string.
</td>
</tr>
<!--overlay-->
<tr>
<td valign=top>
<a href="Built-in/overlay.shtml">
overlay</a></td>
<td>
Overlays one plot object on another.
</td>
</tr>
<!--pack_values-->
<tr>
<td valign=top><a name="P"></a>
<a href="Contributed/pack_values.shtml">
pack_values</a></td>
<td>
Compress values of type float or double to values of type short or byte.
</td>
</tr>
<!--paleo_outline-->
<tr>
<td valign=top>
<a href="Built-in/paleo_outline.shtml">
paleo_outline</a></td>
<td>
Creates continental outlines from model orography data.
</td>
</tr>
<!--pattern_cor-->
<tr>
<td valign=top>
<a href="Contributed/pattern_cor.shtml">
pattern_cor</a></td>
<td>
Compute centered or uncentered  pattern correlation.
</td>
</tr>
<!--pdfx-->
<tr>
<td valign=top>
<a href="Contributed/pdfx.shtml">
pdfx</a></td>
<td>
Generates a univariate probability density distribution (PDF).
</td>
</tr>
<!--pdfxy-->
<tr>
<td valign=top>
<a href="Contributed/pdfxy.shtml">
pdfxy</a></td>
<td>
Generates a joint probability density distribution. (Please use <a href="Contributed/pdfxy_conform.shtml"><strong>pdfxy_conform</strong></a>.)
</td>
</tr>
<!--pdfxy_bin-->
<tr>
<td valign=top>
<a href="Built-in/pdfxy_bin.shtml">
pdfxy_bin</a></td>
<td>
Performs looping necessary to calculate the bivariate  (joint) probability distribution (see <a href="Contributed/pdfxy.shtml"><strong>pdfxy</strong></a>).
</td>
</tr>
<!--pdfxy_conform-->
<tr>
<td valign=top>
<a href="Contributed/pdfxy_conform.shtml">
pdfxy_conform</a></td>
<td>
An interface to <a href="Contributed/pdfxy.shtml"><strong>pdfxy</strong></a> that allows the input arrays to be different sizes.
</td>
</tr>
<!--pie_chart-->
<tr>
<td valign=top>
<a href="Shea_util/pie_chart.shtml">
pie_chart</a></td>
<td>
Creates a basic pie chart.
</td>
</tr>
<!--plt_pdfxy-->
<tr>
<td valign=top>
<a href="Shea_util/plt_pdfxy.shtml">
plt_pdfxy</a></td>
<td>
Creates a nice plot of the joint probability array created by the <a href="Contributed/pdfxy.shtml"><strong>pdfxy</strong></a> function.
</td>
</tr>
<!--poisson_grid_fill-->
<tr>
<td valign=top>
<a href="Built-in/poisson_grid_fill.shtml">
poisson_grid_fill</a></td>
<td>
Replaces all missing (_FillValue) values in a grid with values derived from solving Poisson's equation via relaxation.
</td>
</tr>
<!--pop_remap-->
<tr>
<td valign=top>
<a href="Built-in/pop_remap.shtml">
pop_remap</a></td>
<td>
Regrids a POP ocean model grid to another grid.
</td>
</tr>
<!--PopLatLon-->
<tr>
<td valign=top>
<a href="Pop_remap/PopLatLon.shtml">
PopLatLon</a></td>
<td>
Regrids a scalar variable on a POP grid to a lat/lon grid or vice-versa.
</td>
</tr>
<!--PopLatLonV-->
<tr>
<td valign=top>
<a href="Pop_remap/PopLatLonV.shtml">
PopLatLonV</a></td>
<td>
Converts vectors on a POP grid to a lat/lon grid  and vice-versa.
</td>
</tr>
<!--pot_temp-->
<tr>
<td valign=top>
<a href="Contributed/pot_temp.shtml">
pot_temp</a></td>
<td>
Compute potential temperature.
</td>
</tr>
<!--pot_vort_hybrid-->
<tr>
<td valign=top>
<a href="Contributed/pot_vort_hybrid.shtml">
pot_vort_hybrid</a></td>
<td>
Compute potential vorticity on hybrid levels and a global grid.
</td>
</tr>
<!--pot_vort_isobaric-->
<tr>
<td valign=top>
<a href="Contributed/pot_vort_isobaric.shtml">
pot_vort_isobaric</a></td>
<td>
Compute potential vorticity on isobaric levels and a global grid.
</td>
</tr>
<!--potmp_insitu_ocn-->
<tr>
<td valign=top>
<a href="Built-in/potmp_insitu_ocn.shtml">
potmp_insitu_ocn</a></td>
<td>
Calculate seawater potential temperature at an arbitrary reference pressure given <i>insitu</i> temperature, salinity and depth.
</td>
</tr>
<!--prcwater_dp-->
<tr>
<td valign=top>
<a href="Built-in/prcwater_dp.shtml">
prcwater_dp</a></td>
<td>
Computes column precipitable water of the rightmost dimension.
</td>
</tr>
<!--pres2hybrid-->
<tr>
<td valign=top>
<a href="Built-in/pres2hybrid.shtml">
pres2hybrid</a></td>
<td>
Interpolates data on constant pressure levels to hybrid levels.
</td>
</tr>
<!--pres2hybrid_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/pres2hybrid_Wrap.shtml">
pres2hybrid_Wrap</a></td>
<td>
Interpolates data on constant pressure levels to hybrid levels and retains metadata.
</td>
</tr>
<!--pres_hybrid_ccm-->
<tr>
<td valign=top>
<a href="Built-in/pres_hybrid_ccm.shtml">
pres_hybrid_ccm</a></td>
<td>
Calculates pressure at the hybrid levels.
</td>
</tr>
<!--pres_sigma-->
<tr>
<td valign=top>
<a href="Built-in/pres_sigma.shtml">
pres_sigma</a></td>
<td>
Calculates the pressure at specified sigma levels.
</td>
</tr>
<!--print-->
<tr>
<td valign=top>
<a href="Built-in/print.shtml">
print</a></td>
<td>
Prints the value of a variable or expression.
</td>
</tr>
<!--print_clock-->
<tr>
<td valign=top>
<a href="Contributed/print_clock.shtml">
print_clock</a></td>
<td>
Prints the given string along with a current timestamp.
</td>
</tr>
<!--print_table-->
<tr>
<td valign=top>
<a href="Built-in/print_table.shtml">
print_table</a></td>
<td>
Prints all elements from a list (to stdout).
</td>
</tr>
<!--printFileVarSummary-->
<tr>
<td valign=top>
<a href="Built-in/printFileVarSummary.shtml">
printFileVarSummary</a></td>
<td>
Prints a summary of a file variable's information.
</td>
</tr>
<!--printMinMax-->
<tr>
<td valign=top>
<a href="Contributed/printMinMax.shtml">
printMinMax</a></td>
<td>
Prints the minimum and maximum values of a variable.
</td>
</tr>
<!--printVarSummary-->
<tr>
<td valign=top>
<a href="Built-in/printVarSummary.shtml">
printVarSummary</a></td>
<td>
Prints a summary of a variable's information.
</td>
</tr>
<!--product-->
<tr>
<td valign=top>
<a href="Built-in/product.shtml">
product</a></td>
<td>
Computes the product of the input.
</td>
</tr>
<!--pslec-->
<tr>
<td valign=top>
<a href="Built-in/pslec.shtml">
pslec</a></td>
<td>
Computes sea level pressure from CCM/CAM hybrid model variables using the ECMWF formulation.
</td>
</tr>
<!--pslhor-->
<tr>
<td valign=top>
<a href="Built-in/pslhor.shtml">
pslhor</a></td>
<td>
Computes sea level pressure from CCM/CAM hybrid model variables using the  ECMWF formulation and Trenberth's horizontal correction.
</td>
</tr>
<!--pslhyp-->
<tr>
<td valign=top>
<a href="Built-in/pslhyp.shtml">
pslhyp</a></td>
<td>
Computes sea level pressure using the hypsometric equation.
</td>
</tr>
<!--qsort-->
<tr>
<td valign=top><a name="Q"></a>
<a href="Built-in/qsort.shtml">
qsort</a></td>
<td>
Sorts a singly dimensioned array.
</td>
</tr>
<!--quadroots-->
<tr>
<td valign=top>
<a href="Contributed/quadroots.shtml">
quadroots</a></td>
<td>
Determine roots of a quadratic equation [ a*x^2 + b*x + c].
</td>
</tr>
<!--rand-->
<tr>
<td valign=top><a name="R"></a>
<a href="Built-in/rand.shtml">
rand</a></td>
<td>
Generates a pseudo random number.
</td>
</tr>
<!--random_chi-->
<tr>
<td valign=top>
<a href="Built-in/random_chi.shtml">
random_chi</a></td>
<td>
Generates random numbers using a chi-squared distribution.
</td>
</tr>
<!--random_gamma-->
<tr>
<td valign=top>
<a href="Built-in/random_gamma.shtml">
random_gamma</a></td>
<td>
Generates random numbers using a gamma distribution.
</td>
</tr>
<!--random_normal-->
<tr>
<td valign=top>
<a href="Built-in/random_normal.shtml">
random_normal</a></td>
<td>
Generates random numbers using a normal distribution.
</td>
</tr>
<!--random_setallseed-->
<tr>
<td valign=top>
<a href="Built-in/random_setallseed.shtml">
random_setallseed</a></td>
<td>
Sets initial seeds for random number generators.
</td>
</tr>
<!--random_uniform-->
<tr>
<td valign=top>
<a href="Built-in/random_uniform.shtml">
random_uniform</a></td>
<td>
Generates random numbers using a uniform range distribution.
</td>
</tr>
<!--rcm2points-->
<tr>
<td valign=top>
<a href="Built-in/rcm2points.shtml">
rcm2points</a></td>
<td>
Interpolates data on a curvilinear grid (i.e. RCM, WRF, NARR) to  an unstructured grid.
</td>
</tr>
<!--rcm2points_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/rcm2points_Wrap.shtml">
rcm2points_Wrap</a></td>
<td>
Interpolates data on a curvilinear grid (i.e. RCM, WRF, NARR) to  an unstructured grid and retains metadata.
</td>
</tr>
<!--rcm2rgrid-->
<tr>
<td valign=top>
<a href="Built-in/rcm2rgrid.shtml">
rcm2rgrid</a></td>
<td>
Interpolates data on a curvilinear grid (i.e. RCM, WRF, NARR) to a rectilinear grid.
</td>
</tr>
<!--rcm2rgrid_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/rcm2rgrid_Wrap.shtml">
rcm2rgrid_Wrap</a></td>
<td>
Interpolates data on a curvilinear grid (i.e. RCM, WRF, NARR) to a rectilinear grid and retains metadata.
</td>
</tr>
<!--rdsstoi-->
<tr>
<td valign=top>
<a href="Built-in/rdsstoi.shtml">
rdsstoi</a></td>
<td>
Reads weekly/monthly compocp site and climatology grids.
</td>
</tr>
<!--read_colormap_file-->
<tr>
<td valign=top>
<a href="Built-in/read_colormap_file.shtml">
read_colormap_file</a></td>
<td>
Reads an NCL system colormap file or a user-defined colormap.
</td>
</tr>
<!--readAsciiHead-->
<tr>
<td valign=top>
<a href="Contributed/readAsciiHead.shtml">
readAsciiHead</a></td>
<td>
Reads an ASCII file and returns just the header.
</td>
</tr>
<!--readAsciiTable-->
<tr>
<td valign=top>
<a href="Contributed/readAsciiTable.shtml">
readAsciiTable</a></td>
<td>
Reads an ASCII file given the number of lines at the beginning and end of the file to ignore.
</td>
</tr>
<!--rectilinear_to_SCRIP-->
<tr>
<td valign=top>
<a href="ESMF/rectilinear_to_SCRIP.shtml">
rectilinear_to_SCRIP</a></td>
<td>
Writes the description of a rectilinear grid to a SCRIP file.
</td>
</tr>
<!--reg_multlin-->
<tr>
<td valign=top>
<a href="Built-in/reg_multlin.shtml">
reg_multlin</a></td>
<td>
Performs basic multiple linear regression analysis.
</td>
</tr>
<!--reg_multlin_stats-->
<tr>
<td valign=top>
<a href="Contributed/reg_multlin_stats.shtml">
reg_multlin_stats</a></td>
<td>
Performs multiple linear regression analysis including confidence estimates and creates an ANOVA table.
</td>
</tr>
<!--regcoef-->
<tr>
<td valign=top>
<a href="Built-in/regcoef.shtml">
regcoef</a></td>
<td>
Calculates the linear regression coefficient between two variables.
</td>
</tr>
<!--regCoef-->
<tr>
<td valign=top>
<a href="Built-in/regCoef-1.shtml">
regCoef</a></td>
<td>
Calculates the linear regression coefficient between two variables.
</td>
</tr>
<!--regCoef_n-->
<tr>
<td valign=top>
<a href="Built-in/regCoef_n.shtml">
regCoef_n</a></td>
<td>
Calculates the linear regression coefficient between two variables on the given dimensions.
</td>
</tr>
<!--region_ind-->
<tr>
<td valign=top>
<a href="Contributed/region_ind.shtml">
region_ind</a></td>
<td>
Returns the indices (subscripts) of two-dimensional latitude/longitude arrays that span user specified latitude/longitude boundaries.
</td>
</tr>
<!--regline-->
<tr>
<td valign=top>
<a href="Built-in/regline.shtml">
regline</a></td>
<td>
Calculates the linear regression coefficient between two series.
</td>
</tr>
<!--regline_stats-->
<tr>
<td valign=top>
<a href="Contributed/regline_stats.shtml">
regline_stats</a></td>
<td>
Performs simple linear regression including confidence estimates and creates an ANOVA table.
</td>
</tr>
<!--relhum-->
<tr>
<td valign=top>
<a href="Built-in/relhum.shtml">
relhum</a></td>
<td>
Calculates relative humidity given temperature, mixing ratio, and pressure.
</td>
</tr>
<!--relhum_ttd-->
<tr>
<td valign=top>
<a href="Contributed/relhum_ttd.shtml">
relhum_ttd</a></td>
<td>
Calculates relative humidity given temperature and dew point temperature.
</td>
</tr>
<!--replace_ieeenan-->
<tr>
<td valign=top>
<a href="Built-in/replace_ieeenan.shtml">
replace_ieeenan</a></td>
<td>
Changes all occurrences of IEEE NaN to a user-specified value.
</td>
</tr>
<!--replaceSingleChar-->
<tr>
<td valign=top>
<a href="Contributed/replaceSingleChar.shtml">
replaceSingleChar</a></td>
<td>
Within a string replace one character with another character. <font color="red">(Deprecated: </font> see <a href="Built-in/str_sub_str.shtml"><strong>str_sub_str</strong></a>.)
</td>
</tr>
<!--reset_device_coordinates-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/reset_device_coordinates.shtml">
reset_device_coordinates</a></td>
<td>
Resets the PS/PDF device coordinates back to their default values.
</td>
</tr>
<!--reshape-->
<tr>
<td valign=top>
<a href="Built-in/reshape.shtml">
reshape</a></td>
<td>
Reshapes a multi-dimensional array to another multi-dimensional array.
</td>
</tr>
<!--reshape_ind-->
<tr>
<td valign=top>
<a href="Built-in/reshape_ind.shtml">
reshape_ind</a></td>
<td>
Places values from a smaller one-dimensional array to a larger one-dimensional array, and reshapes it.
</td>
</tr>
<!--resolveWavesHayashi-->
<tr>
<td valign=top>
<a href="Diagnostics/resolveWavesHayashi.shtml">
resolveWavesHayashi</a></td>
<td>
Reorder the complex coefficients returned by <a href="Built-in/cfftf.shtml"><strong>cfftf</strong></a>  to resolve the progressive and retrogressive waves.
</td>
</tr>
<!--rgba_to_color_index-->
<tr>
<td valign=top>
<a href="Built-in/rgba_to_color_index.shtml">
rgba_to_color_index</a></td>
<td>
Converts RGBA quadruplets to their encoded integer equivalent absolute color indexes
</td>
</tr>
<!--rgbhls-->
<tr>
<td valign=top>
<a href="Built-in/rgbhls.shtml">
rgbhls</a></td>
<td>
Converts RGB color values to HLS.
</td>
</tr>
<!--rgbhsv-->
<tr>
<td valign=top>
<a href="Built-in/rgbhsv.shtml">
rgbhsv</a></td>
<td>
Converts RGB color values to HSV.
</td>
</tr>
<!--RGBtoCmap-->
<tr>
<td valign=top>
<a href="Contributed/RGBtoCmap.shtml">
RGBtoCmap</a></td>
<td>
Reads a text file of RGB triplets and converts them to a colormap.
</td>
</tr>
<!--rgbyiq-->
<tr>
<td valign=top>
<a href="Built-in/rgbyiq.shtml">
rgbyiq</a></td>
<td>
Converts RGB color values to YIQ values.
</td>
</tr>
<!--rgrid2rcm-->
<tr>
<td valign=top>
<a href="Built-in/rgrid2rcm.shtml">
rgrid2rcm</a></td>
<td>
Interpolates data on a rectilinear lat/lon grid to a curvilinear grid like those used by the RCM, WRF and NARR models/datasets.
</td>
</tr>
<!--rgrid2rcm_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/rgrid2rcm_Wrap.shtml">
rgrid2rcm_Wrap</a></td>
<td>
Interpolates data on a rectilinear lat/lon grid to a curvilinear grid like those used by the RCM, WRF and NARR models/datasets and retains metadata.
</td>
</tr>
<!--rho_mwjf-->
<tr>
<td valign=top>
<a href="Contributed/rho_mwjf.shtml">
rho_mwjf</a></td>
<td>
Computes ocean water density given a specified range for potential temperature (deg Celisus) and salinity (psu).
</td>
</tr>
<!--rhomb_trunc-->
<tr>
<td valign=top>
<a href="Built-in/rhomb_trunc.shtml">
rhomb_trunc</a></td>
<td>
Performs rhomboidal truncation on spherical harmonic coefficients.
</td>
</tr>
<!--rhomb_trunC-->
<tr>
<td valign=top>
<a href="Built-in/rhomb_trunC-1.shtml">
rhomb_trunC</a></td>
<td>
Performs rhomboidal truncation on spherical harmonic coefficients.
</td>
</tr>
<!--rip_cape_2d-->
<tr>
<td valign=top>
<a href="Built-in/rip_cape_2d.shtml">
rip_cape_2d</a></td>
<td>
Computes convective available potential energy (CAPE), convective inhibition (CIN), lifted condensation level (LCL), and level of free convection (LFC) (deprecated version).
</td>
</tr>
<!--rip_cape_3d-->
<tr>
<td valign=top>
<a href="Built-in/rip_cape_3d.shtml">
rip_cape_3d</a></td>
<td>
Computes convective available potential energy (CAPE) and convective inhibition (CIN) (deprecated version).
</td>
</tr>
<!--rm_single_dims-->
<tr>
<td valign=top>
<a href="Contributed/rm_single_dims.shtml">
rm_single_dims</a></td>
<td>
Removes (<b>squeeze</b>s) singleton (degenerate) dimensions from an array while preserving meta data.
</td>
</tr>
<!--rmAnnCycle1D-->
<tr>
<td valign=top>
<a href="Contributed/rmAnnCycle1D.shtml">
rmAnnCycle1D</a></td>
<td>
Removes annual cycle from a one-dimensional time series.
</td>
</tr>
<!--rmInsufData-->
<tr>
<td valign=top>
<a href="Contributed/rmInsufData.shtml">
rmInsufData</a></td>
<td>
Sets all instances (i.e. time) of a grid point to missing if a user-prescribed percentage of points is missing.
</td>
</tr>
<!--rmMonAnnCycLLLT-->
<tr>
<td valign=top>
<a href="Contributed/rmMonAnnCycLLLT.shtml">
rmMonAnnCycLLLT</a></td>
<td>
Removes the annual cycle from "monthly" data.
</td>
</tr>
<!--rmMonAnnCycLLT-->
<tr>
<td valign=top>
<a href="Contributed/rmMonAnnCycLLT.shtml">
rmMonAnnCycLLT</a></td>
<td>
Removes the annual cycle from "monthly" data.
</td>
</tr>
<!--rmMonAnnCycTLL-->
<tr>
<td valign=top>
<a href="Contributed/rmMonAnnCycTLL.shtml">
rmMonAnnCycTLL</a></td>
<td>
Removes the annual cycle from "monthly" data.
</td>
</tr>
<!--round-->
<tr>
<td valign=top>
<a href="Built-in/round.shtml">
round</a></td>
<td>
Rounds a float or double variable to the nearest whole number.
</td>
</tr>
<!--rtest-->
<tr>
<td valign=top>
<a href="Built-in/rtest.shtml">
rtest</a></td>
<td>
Determines the statistical significance of a linear correlation coefficient.
</td>
</tr>
<!--run_cor-->
<tr>
<td valign=top>
<a href="User_contributed/run_cor.shtml">
run_cor</a></td>
<td>
Calculates a running correlation.
</td>
</tr>
<!--runave-->
<tr>
<td valign=top>
<a href="Built-in/runave.shtml">
runave</a></td>
<td>
Calculates an unweighted running average on the rightmost dimension.
</td>
</tr>
<!--runave_n-->
<tr>
<td valign=top>
<a href="Built-in/runave_n.shtml">
runave_n</a></td>
<td>
Calculates an unweighted running average on the given dimension.
</td>
</tr>
<!--runave_n_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/runave_n_Wrap.shtml">
runave_n_Wrap</a></td>
<td>
Calculates an unweighted running average on the given dimension and retains metadata.
</td>
</tr>
<!--runave_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/runave_Wrap.shtml">
runave_Wrap</a></td>
<td>
Calculates an unweighted running average on the rightmost dimension and retains metadata.
</td>
</tr>
<!--set_default_fillvalue-->
<tr>
<td valign=top><a name="S"></a>
<a href="Built-in/set_default_fillvalue.shtml">
set_default_fillvalue</a></td>
<td>
Sets the default missing value for the given variable type.
</td>
</tr>
<!--set_sphere_radius-->
<tr>
<td valign=top>
<a href="Built-in/set_sphere_radius.shtml">
set_sphere_radius</a></td>
<td>
Sets the radius of a sphere used in spherical harmonic routines.
</td>
</tr>
<!--setColorContourClear-->
<tr>
<td valign=top>
<a href="Shea_util/setColorContourClear.shtml">
setColorContourClear</a></td>
<td>
Sets the color contours between two given levels transparent.
</td>
</tr>
<!--setfileoption-->
<tr>
<td valign=top>
<a href="Built-in/setfileoption.shtml">
setfileoption</a></td>
<td>
Sets a number of file-format-specific options.
</td>
</tr>
<!--sfvp2uvf-->
<tr>
<td valign=top>
<a href="Built-in/sfvp2uvf.shtml">
sfvp2uvf</a></td>
<td>
Computes the wind components given stream function and velocity potential (on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>) via spherical harmonics.
</td>
</tr>
<!--sfvp2uvg-->
<tr>
<td valign=top>
<a href="Built-in/sfvp2uvg.shtml">
sfvp2uvg</a></td>
<td>
Computes the wind components given stream function and velocity potential (on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>) via spherical harmonics.
</td>
</tr>
<!--ShadeCOI-->
<tr>
<td valign=top>
<a href="Shea_util/ShadeCOI.shtml">
ShadeCOI</a></td>
<td>
Adds the cone of influence as a shaded polygon.
</td>
</tr>
<!--ShadeGeLeContour-->
<tr>
<td valign=top>
<a href="Shea_util/ShadeGeLeContour.shtml">
ShadeGeLeContour</a></td>
<td>
Shades contour regions given low and high values and a shade pattern.<br> (Superceded by <a href="../Graphics/Interfaces/gsn_contour_shade.shtml"><strong>gsn_contour_shade</strong></a> as of version <a href="../../prev_releases.shtml#4.3.0">4.3.0</a>.)
</td>
</tr>
<!--ShadeGtContour-->
<tr>
<td valign=top>
<a href="Shea_util/ShadeGtContour.shtml">
ShadeGtContour</a></td>
<td>
Shades contour regions above a given value with the given fill pattern.<br> (Superceded by <a href="../Graphics/Interfaces/gsn_contour_shade.shtml"><strong>gsn_contour_shade</strong></a> as of version <a href="../../prev_releases.shtml#4.3.0">4.3.0</a>.)
</td>
</tr>
<!--ShadeLtContour-->
<tr>
<td valign=top>
<a href="Shea_util/ShadeLtContour.shtml">
ShadeLtContour</a></td>
<td>
Shades contour regions below a given value with the given fill pattern.<br> (Superceded by <a href="../Graphics/Interfaces/gsn_contour_shade.shtml"><strong>gsn_contour_shade</strong></a> as of version <a href="../../prev_releases.shtml#4.3.0">4.3.0</a>.)
</td>
</tr>
<!--ShadeLtGtContour-->
<tr>
<td valign=top>
<a href="Shea_util/ShadeLtGtContour.shtml">
ShadeLtGtContour</a></td>
<td>
Shades contour regions below a given value and above a given value with the specified fill patterns.<br> (Superceded by <a href="../Graphics/Interfaces/gsn_contour_shade.shtml"><strong>gsn_contour_shade</strong></a> as of version <a href="../../prev_releases.shtml#4.3.0">4.3.0</a>.)
</td>
</tr>
<!--shaeC-->
<tr>
<td valign=top>
<a href="Built-in/shaeC-1.shtml">
shaeC</a></td>
<td>
Computes spherical harmonic analysis of a scalar field on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a> via spherical harmonics.
</td>
</tr>
<!--shaec-->
<tr>
<td valign=top>
<a href="Built-in/shaec.shtml">
shaec</a></td>
<td>
Computes spherical harmonic analysis of a scalar field on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a> via spherical harmonics.
</td>
</tr>
<!--shagC-->
<tr>
<td valign=top>
<a href="Built-in/shagC-1.shtml">
shagC</a></td>
<td>
Computes spherical harmonic analysis of a scalar field on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a> via spherical harmonics.
</td>
</tr>
<!--shagc-->
<tr>
<td valign=top>
<a href="Built-in/shagc.shtml">
shagc</a></td>
<td>
Computes spherical harmonic analysis of a scalar field on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a> via spherical harmonics.
</td>
</tr>
<!--shgetnp-->
<tr>
<td valign=top>
<a href="Built-in/shgetnp.shtml">
shgetnp</a></td>
<td>
Finds the nearest point, or points (in a specified set of points), to a given point in 3-space.
</td>
</tr>
<!--shgetp-->
<tr>
<td valign=top>
<a href="Built-in/shgetp.shtml">
shgetp</a></td>
<td>
Retrieves <a href="http://www.ncarg.ucar.edu//ngmath/definitions.html#ControlParameter">control parameters</a> for <a href="http://www.ncarg.ucar.edu//ngmath/shgrid/shhome.html">Shgrid</a> routines.
</td>
</tr>
<!--shgrid-->
<tr>
<td valign=top>
<a href="Built-in/shgrid.shtml">
shgrid</a></td>
<td>
Interpolates data from an unstructured grid to a grid in 3-space.
</td>
</tr>
<!--short2flt-->
<tr>
<td valign=top>
<a href="Contributed/short2flt.shtml">
short2flt</a></td>
<td>
Converts values of type short to values of type float using the "scale" and "offset" attributes (if present).
</td>
</tr>
<!--short2flt_hdf-->
<tr>
<td valign=top>
<a href="Contributed/short2flt_hdf.shtml">
short2flt_hdf</a></td>
<td>
Converts values of type short to values of type float using the "scale" and "offset" attributes (if present).
</td>
</tr>
<!--shorttobyte-->
<tr>
<td valign=top>
<a href="Built-in/shorttobyte.shtml">
shorttobyte</a></td>
<td>
Coerces values of type short to values of type byte.
</td>
</tr>
<!--shorttochar-->
<tr>
<td valign=top>
<a href="Built-in/shorttochar.shtml">
shorttochar</a></td>
<td>
Coerces values of type short to values of type character.
</td>
</tr>
<!--shorttocharacter-->
<tr>
<td valign=top>
<a href="Built-in/shorttocharacter.shtml">
shorttocharacter</a></td>
<td>
Coerces values of type short to values of type character.
</td>
</tr>
<!--show_ascii-->
<tr>
<td valign=top>
<a href="Built-in/show_ascii.shtml">
show_ascii</a></td>
<td>
Prints the ASCII table to the screen.
</td>
</tr>
<!--shsec-->
<tr>
<td valign=top>
<a href="Built-in/shsec.shtml">
shsec</a></td>
<td>
Computes spherical harmonic synthesis of a scalar quantity on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a> via spherical harmonics.
</td>
</tr>
<!--shseC-->
<tr>
<td valign=top>
<a href="Built-in/shseC-1.shtml">
shseC</a></td>
<td>
Computes the spherical harmonic synthesis of a scalar quantity on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a> via spherical harmonics.
</td>
</tr>
<!--shsetp-->
<tr>
<td valign=top>
<a href="Built-in/shsetp.shtml">
shsetp</a></td>
<td>
Sets <a href="http://www.ncarg.ucar.edu//ngmath/definitions.html#ControlParameter">control parameters</a> for <a href="http://www.ncarg.ucar.edu//ngmath/shgrid/shhome.html">Shgrid</a> routines.
</td>
</tr>
<!--shsgc-->
<tr>
<td valign=top>
<a href="Built-in/shsgc.shtml">
shsgc</a></td>
<td>
Computes spherical harmonic synthesis of a scalar quantity on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a> via spherical harmonics.
</td>
</tr>
<!--shsgC-->
<tr>
<td valign=top>
<a href="Built-in/shsgC-1.shtml">
shsgC</a></td>
<td>
Computes the spherical harmonic synthesis of a scalar quantity on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a> via spherical harmonics.
</td>
</tr>
<!--shsgc_R42-->
<tr>
<td valign=top>
<a href="Built-in/shsgc_R42.shtml">
shsgc_R42</a></td>
<td>
Computes spherical harmonic synthesis of a scalar quantity via rhomboidally truncated (R42) spherical harmonic coefficients onto a  (108x128) <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>.
</td>
</tr>
<!--shsgc_R42_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/shsgc_R42_Wrap.shtml">
shsgc_R42_Wrap</a></td>
<td>
Computes spherical harmonic synthesis of a scalar quantity via rhomboidally truncated (R42) spherical harmonic coefficients onto a  (108x128) <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>. (creates metadata).
</td>
</tr>
<!--sigma2hybrid-->
<tr>
<td valign=top>
<a href="Built-in/sigma2hybrid.shtml">
sigma2hybrid</a></td>
<td>
Interpolates from sigma to hybrid coordinates.
</td>
</tr>
<!--sign_f90-->
<tr>
<td valign=top>
<a href="Contributed/sign_f90.shtml">
sign_f90</a></td>
<td>
Mimic the behavior of fortran-90's sign transfer function.
</td>
</tr>
<!--sign_matlab-->
<tr>
<td valign=top>
<a href="Contributed/sign_matlab.shtml">
sign_matlab</a></td>
<td>
Mimic the behavior of Matlab's <a href="http://www.mathworks.com/help/matlab/ref/sign.html"><b>sign</b></a> function.
</td>
</tr>
<!--simpeq-->
<tr>
<td valign=top>
<a href="Built-in/simpeq.shtml">
simpeq</a></td>
<td>
Integrates a sequence of equally spaced points using Simpson's Rule.
</td>
</tr>
<!--simpne-->
<tr>
<td valign=top>
<a href="Built-in/simpne.shtml">
simpne</a></td>
<td>
Integrates a sequence of unequally spaced points using Simpson's three-point formula.
</td>
</tr>
<!--sin-->
<tr>
<td valign=top>
<a href="Built-in/sin.shtml">
sin</a></td>
<td>
Computes the sine of numeric types.
</td>
</tr>
<!--sindex_yrmo-->
<tr>
<td valign=top>
<a href="Built-in/sindex_yrmo.shtml">
sindex_yrmo</a></td>
<td>
Calculates the Southern Oscillation Index given two series of year-month values.
</td>
</tr>
<!--sinh-->
<tr>
<td valign=top>
<a href="Built-in/sinh.shtml">
sinh</a></td>
<td>
Computes the hyperbolic sine of numeric types.
</td>
</tr>
<!--sizeof-->
<tr>
<td valign=top>
<a href="Built-in/sizeof.shtml">
sizeof</a></td>
<td>
Returns the total size, in bytes, of the input variable.
</td>
</tr>
<!--skewT_BackGround-->
<tr>
<td valign=top>
<a href="Skewt_func/skewT_BackGround.shtml">
skewT_BackGround</a></td>
<td>
Creates a background chart for Skew T, Log P plotting.
</td>
</tr>
<!--skewT_PlotData-->
<tr>
<td valign=top>
<a href="Skewt_func/skewT_PlotData.shtml">
skewT_PlotData</a></td>
<td>
Plot a sounding and (optionally) winds on Skew T, Log P charts created by <a href="Skewt_func/skewT_BackGround.shtml"><strong>skewT_BackGround</strong></a>.
</td>
</tr>
<!--sleep-->
<tr>
<td valign=top>
<a href="Built-in/sleep.shtml">
sleep</a></td>
<td>
Pauses execution of NCL scripts for a specified number of seconds.
</td>
</tr>
<!--smth9-->
<tr>
<td valign=top>
<a href="Built-in/smth9.shtml">
smth9</a></td>
<td>
Performs nine point local smoothing on one or more 2D grids.
</td>
</tr>
<!--smth9_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/smth9_Wrap.shtml">
smth9_Wrap</a></td>
<td>
Performs nine point local smoothing on one or more 2D grids and retains metadata.
</td>
</tr>
<!--smthClmDayTLL-->
<tr>
<td valign=top>
<a href="Contributed/smthClmDayTLL.shtml">
smthClmDayTLL</a></td>
<td>
Calculates a smooth mean daily annual cycle for an array nominally dimensioned (<b>T</b>ime,<b>L</b>at,<b>L</b>on).
</td>
</tr>
<!--smthClmDayTLLL-->
<tr>
<td valign=top>
<a href="Contributed/smthClmDayTLLL.shtml">
smthClmDayTLLL</a></td>
<td>
Calculates a smooth mean daily annual cycle for an array nominally dimensioned (<b>T</b>ime,<b>L</b>evel,<b>L</b>at,<b>L</b>on).
</td>
</tr>
<!--snindex_yrmo-->
<tr>
<td valign=top>
<a href="Built-in/snindex_yrmo.shtml">
snindex_yrmo</a></td>
<td>
Calculates the Southern Oscillation Index and the noise index given two series of year-month values.
</td>
</tr>
<!--solve_linsys-->
<tr>
<td valign=top>
<a href="Built-in/solve_linsys.shtml">
solve_linsys</a></td>
<td>
Computes the solution to a real system of linear equations.
</td>
</tr>
<!--span_color_indexes-->
<tr>
<td valign=top>
<a href="Built-in/span_color_indexes.shtml">
span_color_indexes</a></td>
<td>
Given the number of desired color values, return an array of indexes that nicely span the given color map.
</td>
</tr>
<!--span_color_rgba-->
<tr>
<td valign=top>
<a href="Built-in/span_color_rgba.shtml">
span_color_rgba</a></td>
<td>
Given the number of desired color values, return an array of RGB triplets or RGBA quadruplets that nicely span the given color map.
</td>
</tr>
<!--span_named_colors-->
<tr>
<td valign=top>
<a href="../Graphics/Interfaces/span_named_colors.shtml">
span_named_colors</a></td>
<td>
Returns an RGB array that is a span between given list of <a href="../Graphics/named_colors.shtml">named colors</a>.
</td>
</tr>
<!--sparse_matrix_mult-->
<tr>
<td valign=top>
<a href="Built-in/sparse_matrix_mult.shtml">
sparse_matrix_mult</a></td>
<td>
Multiples a sparse matrix with a dense matrix.
</td>
</tr>
<!--spcorr-->
<tr>
<td valign=top>
<a href="Built-in/spcorr.shtml">
spcorr</a></td>
<td>
Computes <a href="http://en.wikipedia.org/wiki/Spearman%27s_rank_correlation_coefficient"> <b>Spearman rank order correlation (Rho)</b></a> correlation coefficient.
</td>
</tr>
<!--spcorr_n-->
<tr>
<td valign=top>
<a href="Built-in/spcorr_n.shtml">
spcorr_n</a></td>
<td>
Computes  <a href="http://en.wikipedia.org/wiki/Spearman%27s_rank_correlation_coefficient"> <b>Spearman rank order correlation (Rho)</b></a> correlation coefficient across the given dimension.
</td>
</tr>
<!--specx_anal-->
<tr>
<td valign=top>
<a href="Built-in/specx_anal.shtml">
specx_anal</a></td>
<td>
Calculates spectra of a series.
</td>
</tr>
<!--specx_ci-->
<tr>
<td valign=top>
<a href="Shea_util/specx_ci.shtml">
specx_ci</a></td>
<td>
Calculates the theoretical Markov spectrum and the lower and upper confidence curves.
</td>
</tr>
<!--specxy_anal-->
<tr>
<td valign=top>
<a href="Built-in/specxy_anal.shtml">
specxy_anal</a></td>
<td>
Calculates cross spectra quantities of a series.
</td>
</tr>
<!--spei-->
<tr>
<td valign=top>
<a href="Built-in/spei.shtml">
spei</a></td>
<td>
Calculates the standardized precipitation evapotranspiration index (SPEI).
</td>
</tr>
<!--sprintf-->
<tr>
<td valign=top>
<a href="Built-in/sprintf.shtml">
sprintf</a></td>
<td>
Converts floats or doubles into formatted strings.
</td>
</tr>
<!--sprinti-->
<tr>
<td valign=top>
<a href="Built-in/sprinti.shtml">
sprinti</a></td>
<td>
Converts integers into formatted strings.
</td>
</tr>
<!--sqrt-->
<tr>
<td valign=top>
<a href="Built-in/sqrt.shtml">
sqrt</a></td>
<td>
Computes the square root of its input.
</td>
</tr>
<!--SqrtCosWeight-->
<tr>
<td valign=top>
<a href="Contributed/SqrtCosWeight.shtml">
SqrtCosWeight</a></td>
<td>
Performs square-root of the cosine of the latitude weighting on the given array.
</td>
</tr>
<!--sqsort-->
<tr>
<td valign=top>
<a href="Built-in/sqsort.shtml">
sqsort</a></td>
<td>
Sorts a singly dimensioned arrays of strings.
</td>
</tr>
<!--srand-->
<tr>
<td valign=top>
<a href="Built-in/srand.shtml">
srand</a></td>
<td>
Establishes a seed for the <a href="Built-in/rand.shtml"><strong>rand</strong></a> function.
</td>
</tr>
<!--stat2-->
<tr>
<td valign=top>
<a href="Built-in/stat2.shtml">
stat2</a></td>
<td>
Calculates the first two moments of the given input.
</td>
</tr>
<!--stat4-->
<tr>
<td valign=top>
<a href="Built-in/stat4.shtml">
stat4</a></td>
<td>
Calculates estimates of the first four moments (mean, variance, skewness, and kurtosis) of the given input.
</td>
</tr>
<!--stat_dispersion-->
<tr>
<td valign=top>
<a href="Contributed/stat_dispersion.shtml">
stat_dispersion</a></td>
<td>
Computes a number of robust statistics.
</td>
</tr>
<!--stat_medrng-->
<tr>
<td valign=top>
<a href="Built-in/stat_medrng.shtml">
stat_medrng</a></td>
<td>
Calculates median, range, and mid-range of the given input.
</td>
</tr>
<!--stat_trim-->
<tr>
<td valign=top>
<a href="Built-in/stat_trim.shtml">
stat_trim</a></td>
<td>
Calculates trimmed estimates of the first two moments of the given input.
</td>
</tr>
<!--static_stability-->
<tr>
<td valign=top>
<a href="Contributed/static_stability.shtml">
static_stability</a></td>
<td>
Compute static stability.
</td>
</tr>
<!--status_exit-->
<tr>
<td valign=top>
<a href="Built-in/status_exit.shtml">
status_exit</a></td>
<td>
Exits an NCL script passing a status code to the calling environment.
</td>
</tr>
<!--stdatmus_p2tdz-->
<tr>
<td valign=top>
<a href="Built-in/stdatmus_p2tdz.shtml">
stdatmus_p2tdz</a></td>
<td>
Calculates the corresponding temperature, density, and height based on the 1976 U.S. standard atmosphere, given the pressure.
</td>
</tr>
<!--stdatmus_z2tdp-->
<tr>
<td valign=top>
<a href="Built-in/stdatmus_z2tdp.shtml">
stdatmus_z2tdp</a></td>
<td>
Calculates the corresponding temperature, density, and pressure based on the 1976 U.S. standard atmosphere, given the height.
</td>
</tr>
<!--stddev-->
<tr>
<td valign=top>
<a href="Built-in/stddev.shtml">
stddev</a></td>
<td>
Calculates the sample standard deviation.
</td>
</tr>
<!--stdMonLLLT-->
<tr>
<td valign=top>
<a href="Contributed/stdMonLLLT.shtml">
stdMonLLLT</a></td>
<td>
Calculates standard deviations of monthly means.
</td>
</tr>
<!--stdMonLLT-->
<tr>
<td valign=top>
<a href="Contributed/stdMonLLT.shtml">
stdMonLLT</a></td>
<td>
Calculates standard deviations of monthly means.
</td>
</tr>
<!--stdMonTLL-->
<tr>
<td valign=top>
<a href="Contributed/stdMonTLL.shtml">
stdMonTLL</a></td>
<td>
Calculates standard deviations of monthly means.
</td>
</tr>
<!--stdMonTLLL-->
<tr>
<td valign=top>
<a href="Contributed/stdMonTLLL.shtml">
stdMonTLLL</a></td>
<td>
Calculates standard deviations of monthly means.
</td>
</tr>
<!--str_capital-->
<tr>
<td valign=top>
<a href="Built-in/str_capital.shtml">
str_capital</a></td>
<td>
Capitalizes all words in each string.
</td>
</tr>
<!--str_concat-->
<tr>
<td valign=top>
<a href="Built-in/str_concat.shtml">
str_concat</a></td>
<td>
Concatenates all strings into a single string.
</td>
</tr>
<!--str_fields_count-->
<tr>
<td valign=top>
<a href="Built-in/str_fields_count.shtml">
str_fields_count</a></td>
<td>
Counts the number of fields separated by the given delimiters in an array of strings.
</td>
</tr>
<!--str_get_cols-->
<tr>
<td valign=top>
<a href="Built-in/str_get_cols.shtml">
str_get_cols</a></td>
<td>
Returns an array of substrings, given a start and end index into the given string.
</td>
</tr>
<!--str_get_dq-->
<tr>
<td valign=top>
<a href="Built-in/str_get_dq.shtml">
str_get_dq</a></td>
<td>
Returns the double quote (") character as a string.
</td>
</tr>
<!--str_get_field-->
<tr>
<td valign=top>
<a href="Built-in/str_get_field.shtml">
str_get_field</a></td>
<td>
Returns an array of substrings given a field number and a combination of delimiters.
</td>
</tr>
<!--str_get_nl-->
<tr>
<td valign=top>
<a href="Built-in/str_get_nl.shtml">
str_get_nl</a></td>
<td>
Returns the newline (\n) character as a string.
</td>
</tr>
<!--str_get_sq-->
<tr>
<td valign=top>
<a href="Built-in/str_get_sq.shtml">
str_get_sq</a></td>
<td>
Returns the single quote (') character as a string.
</td>
</tr>
<!--str_get_tab-->
<tr>
<td valign=top>
<a href="Built-in/str_get_tab.shtml">
str_get_tab</a></td>
<td>
Returns the tab ('\t' in C) character as a string.
</td>
</tr>
<!--str_index_of_substr-->
<tr>
<td valign=top>
<a href="Built-in/str_index_of_substr.shtml">
str_index_of_substr</a></td>
<td>
Returns the start indexes where one or more occurrences of a substring is found in a string.
</td>
</tr>
<!--str_insert-->
<tr>
<td valign=top>
<a href="Built-in/str_insert.shtml">
str_insert</a></td>
<td>
Inserts a substring into the given strings.
</td>
</tr>
<!--str_is_blank-->
<tr>
<td valign=top>
<a href="Built-in/str_is_blank.shtml">
str_is_blank</a></td>
<td>
Returns True for strings that contain all blanks.
</td>
</tr>
<!--str_join-->
<tr>
<td valign=top>
<a href="Built-in/str_join.shtml">
str_join</a></td>
<td>
Joins all strings into one string, with each string separated by delimiter.
</td>
</tr>
<!--str_left_strip-->
<tr>
<td valign=top>
<a href="Built-in/str_left_strip.shtml">
str_left_strip</a></td>
<td>
Strips leading spaces and TABs from the input strings.
</td>
</tr>
<!--str_lower-->
<tr>
<td valign=top>
<a href="Built-in/str_lower.shtml">
str_lower</a></td>
<td>
Converts all input strings to lowercase.
</td>
</tr>
<!--str_match-->
<tr>
<td valign=top>
<a href="Built-in/str_match.shtml">
str_match</a></td>
<td>
Returns a list of strings that contain the given substring (case sensitive).
</td>
</tr>
<!--str_match_ic-->
<tr>
<td valign=top>
<a href="Built-in/str_match_ic.shtml">
str_match_ic</a></td>
<td>
Returns a list of strings that contain the given substring (case insensitive).
</td>
</tr>
<!--str_match_ic_regex-->
<tr>
<td valign=top>
<a href="Built-in/str_match_ic_regex.shtml">
str_match_ic_regex</a></td>
<td>
Returns a list of strings that contain the given substring (case insensitive), allowing for regular expressions.
</td>
</tr>
<!--str_match_ind-->
<tr>
<td valign=top>
<a href="Built-in/str_match_ind.shtml">
str_match_ind</a></td>
<td>
Returns a list of indexes into an array of strings that contain the given substring (case sensitive).
</td>
</tr>
<!--str_match_ind_ic-->
<tr>
<td valign=top>
<a href="Built-in/str_match_ind_ic.shtml">
str_match_ind_ic</a></td>
<td>
Returns a list of indexes into an array of strings that contain the given substring (case insensitive).
</td>
</tr>
<!--str_match_ind_ic_regex-->
<tr>
<td valign=top>
<a href="Built-in/str_match_ind_ic_regex.shtml">
str_match_ind_ic_regex</a></td>
<td>
Returns a list of indexes into an array of strings that contain the given substring (case insensitive), allowing for regular expressions.
</td>
</tr>
<!--str_match_ind_regex-->
<tr>
<td valign=top>
<a href="Built-in/str_match_ind_regex.shtml">
str_match_ind_regex</a></td>
<td>
Returns a list of indexes into an array of strings that contain the given substring (case sensitive), allowing for regular expressions.
</td>
</tr>
<!--str_match_regex-->
<tr>
<td valign=top>
<a href="Built-in/str_match_regex.shtml">
str_match_regex</a></td>
<td>
Returns a list of strings that contain the given substring (case sensitive), allowing for regular expressions.
</td>
</tr>
<!--str_right_strip-->
<tr>
<td valign=top>
<a href="Built-in/str_right_strip.shtml">
str_right_strip</a></td>
<td>
Strips ending spaces and TABs from the input strings.
</td>
</tr>
<!--str_split-->
<tr>
<td valign=top>
<a href="Built-in/str_split.shtml">
str_split</a></td>
<td>
Splits a string into an array of strings given a delimiter.
</td>
</tr>
<!--str_split_by_length-->
<tr>
<td valign=top>
<a href="Built-in/str_split_by_length.shtml">
str_split_by_length</a></td>
<td>
Splits a string or strings into an array of strings given a length, or an array of lengths.
</td>
</tr>
<!--str_split_csv-->
<tr>
<td valign=top>
<a href="Built-in/str_split_csv.shtml">
str_split_csv</a></td>
<td>
Splits strings into an array of strings using the given delimiter.
</td>
</tr>
<!--str_squeeze-->
<tr>
<td valign=top>
<a href="Built-in/str_squeeze.shtml">
str_squeeze</a></td>
<td>
Strips off leading and ending spaces and TABs, and replaces multiple spaces and/or TABs with a single space.
</td>
</tr>
<!--str_strip-->
<tr>
<td valign=top>
<a href="Built-in/str_strip.shtml">
str_strip</a></td>
<td>
Strips leading and ending spaces and TABs from the input strings.
</td>
</tr>
<!--str_sub_str-->
<tr>
<td valign=top>
<a href="Built-in/str_sub_str.shtml">
str_sub_str</a></td>
<td>
Replaces a substring with a new substring.
</td>
</tr>
<!--str_switch-->
<tr>
<td valign=top>
<a href="Built-in/str_switch.shtml">
str_switch</a></td>
<td>
Switches the case of characters in the given string(s).
</td>
</tr>
<!--str_upper-->
<tr>
<td valign=top>
<a href="Built-in/str_upper.shtml">
str_upper</a></td>
<td>
Converts all input strings to uppercase.
</td>
</tr>
<!--stringtochar-->
<tr>
<td valign=top>
<a href="Built-in/stringtochar.shtml">
stringtochar</a></td>
<td>
Coerces values of type string to values of type character.
</td>
</tr>
<!--stringtocharacter-->
<tr>
<td valign=top>
<a href="Built-in/stringtocharacter.shtml">
stringtocharacter</a></td>
<td>
Coerces values of type string to values of type character.
</td>
</tr>
<!--stringtodouble-->
<tr>
<td valign=top>
<a href="Built-in/stringtodouble.shtml">
stringtodouble</a></td>
<td>
Coerces values of type string to values of type double.
</td>
</tr>
<!--stringtofloat-->
<tr>
<td valign=top>
<a href="Built-in/stringtofloat.shtml">
stringtofloat</a></td>
<td>
Coerces values of type string to values of type float.
</td>
</tr>
<!--stringtoint-->
<tr>
<td valign=top>
<a href="Built-in/stringtoint.shtml">
stringtoint</a></td>
<td>
Coerces values of type string to values of type integer.
</td>
</tr>
<!--stringtointeger-->
<tr>
<td valign=top>
<a href="Built-in/stringtointeger.shtml">
stringtointeger</a></td>
<td>
Coerces values of type string to values of type integer.
</td>
</tr>
<!--stringtolong-->
<tr>
<td valign=top>
<a href="Built-in/stringtolong.shtml">
stringtolong</a></td>
<td>
Coerces values of type string to values of type long.
</td>
</tr>
<!--stringtoshort-->
<tr>
<td valign=top>
<a href="Built-in/stringtoshort.shtml">
stringtoshort</a></td>
<td>
Coerces values of type string to values of type short.
</td>
</tr>
<!--strlen-->
<tr>
<td valign=top>
<a href="Built-in/strlen.shtml">
strlen</a></td>
<td>
Returns the length of a string variable.
</td>
</tr>
<!--student_t-->
<tr>
<td valign=top>
<a href="Built-in/student_t.shtml">
student_t</a></td>
<td>
Calculates the two-tailed probability of the Student-t distribution.
</td>
</tr>
<!--sum-->
<tr>
<td valign=top>
<a href="Built-in/sum.shtml">
sum</a></td>
<td>
Sums the input.
</td>
</tr>
<!--svd_lapack-->
<tr>
<td valign=top>
<a href="Built-in/svd_lapack.shtml">
svd_lapack</a></td>
<td>
Calculates the singular value decomposition of a general rectangular matrix.
</td>
</tr>
<!--svdcov-->
<tr>
<td valign=top>
<a href="Built-in/svdcov.shtml">
svdcov</a></td>
<td>
Uses singular value decomposition and returns the left and right homogeneous and heterogeneous arrays associated with the two input datasets.
</td>
</tr>
<!--svdcov_sv-->
<tr>
<td valign=top>
<a href="Built-in/svdcov_sv.shtml">
svdcov_sv</a></td>
<td>
Uses singular value decomposition to return the left and right singular vectors associated with the two input datasets.
</td>
</tr>
<!--svdstd-->
<tr>
<td valign=top>
<a href="Built-in/svdstd.shtml">
svdstd</a></td>
<td>
Uses singular value decomposition and returns the left and right homogeneous and heterogeneous arrays associated with the two input datasets.
</td>
</tr>
<!--svdstd_sv-->
<tr>
<td valign=top>
<a href="Built-in/svdstd_sv.shtml">
svdstd_sv</a></td>
<td>
Uses singular value decomposition to return the left and right singular vectors associated with the two input datasets.
</td>
</tr>
<!--symMinMaxPlt-->
<tr>
<td valign=top>
<a href="Contributed/symMinMaxPlt.shtml">
symMinMaxPlt</a></td>
<td>
Calculates the minimum/maximum values for a variable and uses <a href="Built-in/nice_mnmxintvl.shtml"><strong>nice_mnmxintvl</strong></a> to calculate the symmetric contour interval.
</td>
</tr>
<!--system-->
<tr>
<td valign=top>
<a href="Built-in/system.shtml">
system</a></td>
<td>
Executes a shell command.
</td>
</tr>
<!--systemfunc-->
<tr>
<td valign=top>
<a href="Built-in/systemfunc.shtml">
systemfunc</a></td>
<td>
Executes a shell command and returns the output.
</td>
</tr>
<!--table_attach_columns-->
<tr>
<td valign=top><a name="T"></a>
<a href="Contributed/table_attach_columns.shtml">
table_attach_columns</a></td>
<td>
Attaches [appends] additional columns to a previously existing two-dimensional array.
</td>
</tr>
<!--table_attach_rows-->
<tr>
<td valign=top>
<a href="Contributed/table_attach_rows.shtml">
table_attach_rows</a></td>
<td>
Attaches [appends] additional rows to a previously existing two-dimensional array.
</td>
</tr>
<!--tan-->
<tr>
<td valign=top>
<a href="Built-in/tan.shtml">
tan</a></td>
<td>
Computes the tangent of numeric types.
</td>
</tr>
<!--tanh-->
<tr>
<td valign=top>
<a href="Built-in/tanh.shtml">
tanh</a></td>
<td>
Computes the hyperbolic tangent of numeric types.
</td>
</tr>
<!--taper-->
<tr>
<td valign=top>
<a href="Built-in/taper.shtml">
taper</a></td>
<td>
Applies split-cosine-bell tapering to one or more series across the rightmost dimension.
</td>
</tr>
<!--taper_n-->
<tr>
<td valign=top>
<a href="Built-in/taper_n.shtml">
taper_n</a></td>
<td>
Applies split-cosine-bell tapering to one or more series across the given dimension.
</td>
</tr>
<!--tdclrs-->
<tr>
<td valign=top>
<a href="Built-in/tdclrs.shtml">
tdclrs</a></td>
<td>
Defines a set of colors for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines.
</td>
</tr>
<!--tdctri-->
<tr>
<td valign=top>
<a href="Built-in/tdctri.shtml">
tdctri</a></td>
<td>
Cuts the triangles in a triangle list with a plane perpendicular to an axis (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines).
</td>
</tr>
<!--tdcudp-->
<tr>
<td valign=top>
<a href="Built-in/tdcudp.shtml">
tdcudp</a></td>
<td>
Not yet implemented.
</td>
</tr>
<!--tdcurv-->
<tr>
<td valign=top>
<a href="Built-in/tdcurv.shtml">
tdcurv</a></td>
<td>
Draws the projection of a curve defined by an array of points in 3-space.
</td>
</tr>
<!--tddtri-->
<tr>
<td valign=top>
<a href="Built-in/tddtri.shtml">
tddtri</a></td>
<td>
Draws triangles defined by a triangle list (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines).
</td>
</tr>
<!--tdez2d-->
<tr>
<td valign=top>
<a href="Built-in/tdez2d.shtml">
tdez2d</a></td>
<td>
Draws a surface on the specified workstation.
</td>
</tr>
<!--tdez3d-->
<tr>
<td valign=top>
<a href="Built-in/tdez3d.shtml">
tdez3d</a></td>
<td>
Draws an isosurface on the specified workstation.
</td>
</tr>
<!--tdgetp-->
<tr>
<td valign=top>
<a href="Built-in/tdgetp.shtml">
tdgetp</a></td>
<td>
Retrieves <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> parameter values.
</td>
</tr>
<!--tdgrds-->
<tr>
<td valign=top>
<a href="Built-in/tdgrds.shtml">
tdgrds</a></td>
<td>
Draws perimeters, ticks, and grid lines on the six sides of a box (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines).
</td>
</tr>
<!--tdgrid-->
<tr>
<td valign=top>
<a href="Built-in/tdgrid.shtml">
tdgrid</a></td>
<td>
Draws a grid on a particular face of a box in 3-space (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines).
</td>
</tr>
<!--tdgtrs-->
<tr>
<td valign=top>
<a href="Built-in/tdgtrs.shtml">
tdgtrs</a></td>
<td>
Gets the definition of a specified rendering style (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines).
</td>
</tr>
<!--tdinit-->
<tr>
<td valign=top>
<a href="Built-in/tdinit.shtml">
tdinit</a></td>
<td>
Defines eye position, line of sight, up direction, and stereo flag for selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines.
</td>
</tr>
<!--tditri-->
<tr>
<td valign=top>
<a href="Built-in/tditri.shtml">
tditri</a></td>
<td>
Adds triangles defining an isosurface to a triangle list (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines).
</td>
</tr>
<!--tdlbla-->
<tr>
<td valign=top>
<a href="Built-in/tdlbla.shtml">
tdlbla</a></td>
<td>
Draws labels for a particular face of a box in 3-space (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines).
</td>
</tr>
<!--tdlblp-->
<tr>
<td valign=top>
<a href="Built-in/tdlblp.shtml">
tdlblp</a></td>
<td>
Not yet implemented.
</td>
</tr>
<!--tdlbls-->
<tr>
<td valign=top>
<a href="Built-in/tdlbls.shtml">
tdlbls</a></td>
<td>
Draws labels for all faces of a box in 3-space (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines).
</td>
</tr>
<!--tdline-->
<tr>
<td valign=top>
<a href="Built-in/tdline.shtml">
tdline</a></td>
<td>
Draws the projection of a solid line in 3-space (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines).
</td>
</tr>
<!--tdlndp-->
<tr>
<td valign=top>
<a href="Built-in/tdlndp.shtml">
tdlndp</a></td>
<td>
Not yet implemented.
</td>
</tr>
<!--tdlnpa-->
<tr>
<td valign=top>
<a href="Built-in/tdlnpa.shtml">
tdlnpa</a></td>
<td>
Draws the projection of a line joining two points in the reference parallelogram (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines).
</td>
</tr>
<!--tdlpdp-->
<tr>
<td valign=top>
<a href="Built-in/tdlpdp.shtml">
tdlpdp</a></td>
<td>
Not yet implemented.
</td>
</tr>
<!--tdmtri-->
<tr>
<td valign=top>
<a href="Built-in/tdmtri.shtml">
tdmtri</a></td>
<td>
Adds triangles defining a 3D marker to a triangle list for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines.
</td>
</tr>
<!--tdotri-->
<tr>
<td valign=top>
<a href="Built-in/tdotri.shtml">
tdotri</a></td>
<td>
Orders the triangles in a triangle list for proper rendering (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines).
</td>
</tr>
<!--tdpara-->
<tr>
<td valign=top>
<a href="Built-in/tdpara.shtml">
tdpara</a></td>
<td>
Defines the reference parallelogram for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines.
</td>
</tr>
<!--tdplch-->
<tr>
<td valign=top>
<a href="Built-in/tdplch.shtml">
tdplch</a></td>
<td>
Draws a string in the plane of the reference parallelogram (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines).
</td>
</tr>
<!--tdprpa-->
<tr>
<td valign=top>
<a href="Built-in/tdprpa.shtml">
tdprpa</a></td>
<td>
Retrieves the coordinates of a projection in the projection plane, given the parallelogram coordinates of a point (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines).
</td>
</tr>
<!--tdprpi-->
<tr>
<td valign=top>
<a href="Built-in/tdprpi.shtml">
tdprpi</a></td>
<td>
Retrieves the parallelogram coordinates of a point in the reference parallelogram, given a point in the projection plane (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines.)
</td>
</tr>
<!--tdprpt-->
<tr>
<td valign=top>
<a href="Built-in/tdprpt.shtml">
tdprpt</a></td>
<td>
Retrieves the coordinates of its projection in the projection plane, given the coordinates of a point in 3-space (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines).
</td>
</tr>
<!--tdsetp-->
<tr>
<td valign=top>
<a href="Built-in/tdsetp.shtml">
tdsetp</a></td>
<td>
Sets <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> parameter values.
</td>
</tr>
<!--tdsort-->
<tr>
<td valign=top>
<a href="Built-in/tdsort.shtml">
tdsort</a></td>
<td>
Sorts an array (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines).
</td>
</tr>
<!--tdstri-->
<tr>
<td valign=top>
<a href="Built-in/tdstri.shtml">
tdstri</a></td>
<td>
Adds triangles defining a simple surface to a triangle list (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines).
</td>
</tr>
<!--tdstrs-->
<tr>
<td valign=top>
<a href="Built-in/tdstrs.shtml">
tdstrs</a></td>
<td>
Sets the values defining a selected rendering style (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines).
</td>
</tr>
<!--tdttri-->
<tr>
<td valign=top>
<a href="Built-in/tdttri.shtml">
tdttri</a></td>
<td>
Adds triangles defining a trajectory to a triangle list (for use with selected <a href="http://www.ncarg.ucar.edu//supplements/tdpack/">TDPACK</a> routines).
</td>
</tr>
<!--thornthwaite-->
<tr>
<td valign=top>
<a href="Built-in/thornthwaite.shtml">
thornthwaite</a></td>
<td>
Estimate the potential evapotranspiration (PET) via the Thornthwaite method.
</td>
</tr>
<!--time_axis_labels-->
<tr>
<td valign=top>
<a href="User_contributed/time_axis_labels.shtml">
time_axis_labels</a></td>
<td>
Sets resources necessary to draw nice tickmark labels using a format of date/time on an axis.
</td>
</tr>
<!--time_to_newtime-->
<tr>
<td valign=top>
<a href="Contributed/time_to_newtime.shtml">
time_to_newtime</a></td>
<td>
Change a "udunits" recognized time unit to a new (different) "udunits" recognized time unit.
</td>
</tr>
<!--tobyte-->
<tr>
<td valign=top>
<a href="Built-in/tobyte.shtml">
tobyte</a></td>
<td>
Converts values of any snumeric data type or string to values of type (NCL) byte (unsigned char).
</td>
</tr>
<!--tochar-->
<tr>
<td valign=top>
<a href="Built-in/tochar.shtml">
tochar</a></td>
<td>
Converts values of any snumeric data type or string to values of type char.
</td>
</tr>
<!--todouble-->
<tr>
<td valign=top>
<a href="Built-in/todouble.shtml">
todouble</a></td>
<td>
Converts values of any snumeric data type or string to values of type double.
</td>
</tr>
<!--tofloat-->
<tr>
<td valign=top>
<a href="Built-in/tofloat.shtml">
tofloat</a></td>
<td>
Converts values of any snumeric data type or string to values of type float.
</td>
</tr>
<!--toint-->
<tr>
<td valign=top>
<a href="Built-in/toint.shtml">
toint</a></td>
<td>
Converts values of any snumeric data type or string to values of type integer.
</td>
</tr>
<!--toint64-->
<tr>
<td valign=top>
<a href="Built-in/toint64.shtml">
toint64</a></td>
<td>
Converts values of any snumeric data type or string to values of type int64 (64 bit long, or long long).
</td>
</tr>
<!--tointeger-->
<tr>
<td valign=top>
<a href="Built-in/tointeger.shtml">
tointeger</a></td>
<td>
Converts values of any snumeric data type or string to values of type integer.
</td>
</tr>
<!--tolong-->
<tr>
<td valign=top>
<a href="Built-in/tolong.shtml">
tolong</a></td>
<td>
Converts values of any snumeric data type or string to values of type long.
</td>
</tr>
<!--toshort-->
<tr>
<td valign=top>
<a href="Built-in/toshort.shtml">
toshort</a></td>
<td>
Converts values of any snumeric data type or string to values of type short.
</td>
</tr>
<!--tosigned-->
<tr>
<td valign=top>
<a href="Built-in/tosigned.shtml">
tosigned</a></td>
<td>
Converts any kind of 8/16/32/64 integers to its coresponding signed integers.
</td>
</tr>
<!--tostring-->
<tr>
<td valign=top>
<a href="Built-in/tostring.shtml">
tostring</a></td>
<td>
Converts values of any snumeric data type to values of type string.
</td>
</tr>
<!--tostring_with_format-->
<tr>
<td valign=top>
<a href="Built-in/tostring_with_format.shtml">
tostring_with_format</a></td>
<td>
Converts values of any snumeric data type to values of type string, with specified format.
</td>
</tr>
<!--totype-->
<tr>
<td valign=top>
<a href="Built-in/totype.shtml">
totype</a></td>
<td>
Converts values of any snumeric data type or string to values of the given type.
</td>
</tr>
<!--toubyte-->
<tr>
<td valign=top>
<a href="Built-in/toubyte.shtml">
toubyte</a></td>
<td>
Converts values of any snumeric data type or string to values of type unsigned byte.
</td>
</tr>
<!--touint-->
<tr>
<td valign=top>
<a href="Built-in/touint.shtml">
touint</a></td>
<td>
Converts values of any snumeric data type or string to values of type unsigned integer.
</td>
</tr>
<!--touint64-->
<tr>
<td valign=top>
<a href="Built-in/touint64.shtml">
touint64</a></td>
<td>
Converts values of any snumeric data type or string to values of type uint64 (unsigned 64 bit long, or unsigned long long).
</td>
</tr>
<!--toulong-->
<tr>
<td valign=top>
<a href="Built-in/toulong.shtml">
toulong</a></td>
<td>
Converts values of any snumeric data type or string to values of type unsigned long.
</td>
</tr>
<!--tounsigned-->
<tr>
<td valign=top>
<a href="Built-in/tounsigned.shtml">
tounsigned</a></td>
<td>
Converts any kind of 8/16/32/64 integers to its coresponding unsigned integers.
</td>
</tr>
<!--toushort-->
<tr>
<td valign=top>
<a href="Built-in/toushort.shtml">
toushort</a></td>
<td>
Converts values of any snumeric data type or string to values of type unsigned short.
</td>
</tr>
<!--transpose-->
<tr>
<td valign=top>
<a href="Contributed/transpose.shtml">
transpose</a></td>
<td>
Transposes a matrix and copies all attributes and coordinate variables.
</td>
</tr>
<!--trend_manken-->
<tr>
<td valign=top>
<a href="Built-in/trend_manken.shtml">
trend_manken</a></td>
<td>
<a href="http://vsp.pnnl.gov/help/Vsample/Design_Trend_Mann_Kendall.htm">Mann-Kendall non-parametric test for monotonic trend</a>  plus the  <a href="http://en.wikipedia.org/wiki/Theil%E2%80%93Sen_estimator">Theil-Sen</a> robust estimate of linear trend.
</td>
</tr>
<!--tri_trunC-->
<tr>
<td valign=top>
<a href="Built-in/tri_trunC-1.shtml">
tri_trunC</a></td>
<td>
Performs triangular truncation on spherical harmonic coefficients.
</td>
</tr>
<!--tri_trunc-->
<tr>
<td valign=top>
<a href="Built-in/tri_trunc.shtml">
tri_trunc</a></td>
<td>
Performs triangular truncation on spherical harmonic coefficients.
</td>
</tr>
<!--triple2grid-->
<tr>
<td valign=top>
<a href="Built-in/triple2grid.shtml">
triple2grid</a></td>
<td>
Places unstructured (randomly-spaced) data onto the nearest locations of a rectilinear grid.
</td>
</tr>
<!--triple2grid2d-->
<tr>
<td valign=top>
<a href="Built-in/triple2grid2d.shtml">
triple2grid2d</a></td>
<td>
Places unstructured (randomly-spaced) data onto the nearest locations of a curvilinear grid.
</td>
</tr>
<!--triple2grid_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/triple2grid_Wrap.shtml">
triple2grid_Wrap</a></td>
<td>
Places unstructured (randomly-spaced) data onto the nearest locations of a rectilinear grid and retains metadata.
</td>
</tr>
<!--trop_wmo-->
<tr>
<td valign=top>
<a href="Built-in/trop_wmo.shtml">
trop_wmo</a></td>
<td>
Determines the level of the thermal tropopause.
</td>
</tr>
<!--ttest-->
<tr>
<td valign=top>
<a href="Built-in/ttest.shtml">
ttest</a></td>
<td>
Returns an estimate of the statistical significance and, optionally, the t-values.
</td>
</tr>
<!--typeof-->
<tr>
<td valign=top>
<a href="Built-in/typeof.shtml">
typeof</a></td>
<td>
Returns the string name of the type of the input variable.
</td>
</tr>
<!--undef-->
<tr>
<td valign=top><a name="U"></a>
<a href="Built-in/undef.shtml">
undef</a></td>
<td>
Undefines defined NCL symbols (functions, procedures, variables).
</td>
</tr>
<!--unique_string-->
<tr>
<td valign=top>
<a href="Built-in/unique_string.shtml">
unique_string</a></td>
<td>
Returns a unique string given the input string as a prefix.
</td>
</tr>
<!--unstructured_to_ESMF-->
<tr>
<td valign=top>
<a href="ESMF/unstructured_to_ESMF.shtml">
unstructured_to_ESMF</a></td>
<td>
Writes the description of an unstructured grid to an ESMF file.
</td>
</tr>
<!--update-->
<tr>
<td valign=top>
<a href="Built-in/update.shtml">
update</a></td>
<td>
Updates the given workstation objects.
</td>
</tr>
<!--ushorttoint-->
<tr>
<td valign=top>
<a href="Built-in/ushorttoint.shtml">
ushorttoint</a></td>
<td>
Coerces values of type unsigned short to values of type integer.
</td>
</tr>
<!--ut_calendar-->
<tr>
<td valign=top>
<a href="Built-in/ut_calendar.shtml">
ut_calendar</a></td>
<td>
Converts a mixed Julian/Gregorian date to a UT-referenced date (<font color=red>deprecated</font>; use <a href="Built-in/cd_calendar.shtml"><strong>cd_calendar</strong></a>).
</td>
</tr>
<!--ut_convert-->
<tr>
<td valign=top>
<a href="Contributed/ut_convert.shtml">
ut_convert</a></td>
<td>
Converts a time variable from one set of units to another (<font color=red>deprecated</font>; use <a href="Contributed/cd_convert.shtml"><strong>cd_convert</strong></a>).
</td>
</tr>
<!--ut_inv_calendar-->
<tr>
<td valign=top>
<a href="Built-in/ut_inv_calendar.shtml">
ut_inv_calendar</a></td>
<td>
Converts a UT-referenced date to a mixed Julian/Gregorian date (<font color=red>deprecated</font>; use <a href="Built-in/cd_inv_calendar.shtml"><strong>cd_inv_calendar</strong></a>).
</td>
</tr>
<!--ut_string-->
<tr>
<td valign=top>
<a href="User_contributed/ut_string.shtml">
ut_string</a></td>
<td>
Converts time values into nicely formatted strings (<font color=red>deprecated</font>; use <a href="User_contributed/cd_string.shtml"><strong>cd_string</strong></a>)
</td>
</tr>
<!--utm2latlon-->
<tr>
<td valign=top>
<a href="Built-in/utm2latlon.shtml">
utm2latlon</a></td>
<td>
Converts from UTM to lat/lon using a specified datum.
</td>
</tr>
<!--uv2dv_cfd-->
<tr>
<td valign=top>
<a href="Built-in/uv2dv_cfd.shtml">
uv2dv_cfd</a></td>
<td>
Computes divergence using centered finite differences.
</td>
</tr>
<!--uv2dvf-->
<tr>
<td valign=top>
<a href="Built-in/uv2dvf.shtml">
uv2dvf</a></td>
<td>
Computes the divergence using spherical harmonics given the u and v wind components on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>.
</td>
</tr>
<!--uv2dvF-->
<tr>
<td valign=top>
<a href="Built-in/uv2dvF-1.shtml">
uv2dvF</a></td>
<td>
Computes the divergence using spherical harmonics given the u and v wind components on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>.
</td>
</tr>
<!--uv2dvF_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/uv2dvF_Wrap.shtml">
uv2dvF_Wrap</a></td>
<td>
Computes the divergence using spherical harmonics given the u and v wind components on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a> (retains metadata).
</td>
</tr>
<!--uv2dvg-->
<tr>
<td valign=top>
<a href="Built-in/uv2dvg.shtml">
uv2dvg</a></td>
<td>
Computes the divergence using spherical harmonics given the u and v wind components on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>.
</td>
</tr>
<!--uv2dvG-->
<tr>
<td valign=top>
<a href="Built-in/uv2dvG-1.shtml">
uv2dvG</a></td>
<td>
Computes the divergence using spherical harmonics given the u and v wind components on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>.
</td>
</tr>
<!--uv2dvG_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/uv2dvG_Wrap.shtml">
uv2dvG_Wrap</a></td>
<td>
Computes the divergence using spherical harmonics given the u and v wind components on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a> (retains metadata).
</td>
</tr>
<!--uv2sfvpF-->
<tr>
<td valign=top>
<a href="Built-in/uv2sfvpF-1.shtml">
uv2sfvpF</a></td>
<td>
Computes the stream function and velocity potential via spherical harmonics given u and v on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>.
</td>
</tr>
<!--uv2sfvpf-->
<tr>
<td valign=top>
<a href="Built-in/uv2sfvpf.shtml">
uv2sfvpf</a></td>
<td>
Computes the stream function and velocity potential via spherical harmonics given u and v on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>.
</td>
</tr>
<!--uv2sfvpG-->
<tr>
<td valign=top>
<a href="Built-in/uv2sfvpG-1.shtml">
uv2sfvpG</a></td>
<td>
Computes the stream function and velocity potential via spherical harmonics given u and v on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>.
</td>
</tr>
<!--uv2sfvpg-->
<tr>
<td valign=top>
<a href="Built-in/uv2sfvpg.shtml">
uv2sfvpg</a></td>
<td>
Computes the stream function and velocity potential via spherical harmonics given u and v on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>.
</td>
</tr>
<!--uv2vr_cfd-->
<tr>
<td valign=top>
<a href="Built-in/uv2vr_cfd.shtml">
uv2vr_cfd</a></td>
<td>
Computes relative vorticity using centered finite differences.
</td>
</tr>
<!--uv2vrdvF-->
<tr>
<td valign=top>
<a href="Built-in/uv2vrdvF-1.shtml">
uv2vrdvF</a></td>
<td>
Computes the vorticity and divergence via spherical harmonics, given the u and v wind components on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>.
</td>
</tr>
<!--uv2vrdvf-->
<tr>
<td valign=top>
<a href="Built-in/uv2vrdvf.shtml">
uv2vrdvf</a></td>
<td>
Computes the vorticity and divergence via spherical harmonics, given the u and v wind components on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>.
</td>
</tr>
<!--uv2vrdvg-->
<tr>
<td valign=top>
<a href="Built-in/uv2vrdvg.shtml">
uv2vrdvg</a></td>
<td>
Computes the vorticity and divergence via spherical harmonics, given the u and v wind components on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>.
</td>
</tr>
<!--uv2vrdvG-->
<tr>
<td valign=top>
<a href="Built-in/uv2vrdvG-1.shtml">
uv2vrdvG</a></td>
<td>
Computes the vorticity and divergence via spherical harmonics, given the u and v wind components on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>.
</td>
</tr>
<!--uv2vrF-->
<tr>
<td valign=top>
<a href="Built-in/uv2vrF-1.shtml">
uv2vrF</a></td>
<td>
Computes the vorticity via spherical harmonics, given the u and v wind components on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>.
</td>
</tr>
<!--uv2vrf-->
<tr>
<td valign=top>
<a href="Built-in/uv2vrf.shtml">
uv2vrf</a></td>
<td>
Computes the vorticity via spherical harmonics, given the u and v wind components on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>.
</td>
</tr>
<!--uv2vrF_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/uv2vrF_Wrap.shtml">
uv2vrF_Wrap</a></td>
<td>
Computes the vorticity via spherical harmonics, given the u and v wind components on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a> (retains metadata).
</td>
</tr>
<!--uv2vrG-->
<tr>
<td valign=top>
<a href="Built-in/uv2vrG-1.shtml">
uv2vrG</a></td>
<td>
Computes the vorticity via spherical harmonics, given the u and v wind components on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>.
</td>
</tr>
<!--uv2vrg-->
<tr>
<td valign=top>
<a href="Built-in/uv2vrg.shtml">
uv2vrg</a></td>
<td>
Computes the vorticity via spherical harmonics, given the u and v wind components on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>.
</td>
</tr>
<!--uv2vrG_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/uv2vrG_Wrap.shtml">
uv2vrG_Wrap</a></td>
<td>
Computes the vorticity via spherical harmonics, given the u and v wind components on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a> (retains metadata).
</td>
</tr>
<!--v5d_close-->
<tr>
<td valign=top><a name="V"></a>
<a href="Built-in/v5d_close.shtml">
v5d_close</a></td>
<td>
Closes a Vis5D+ format file.
</td>
</tr>
<!--v5d_create-->
<tr>
<td valign=top>
<a href="Built-in/v5d_create.shtml">
v5d_create</a></td>
<td>
Creates a Vis5D+ format file.
</td>
</tr>
<!--v5d_setLowLev-->
<tr>
<td valign=top>
<a href="Built-in/v5d_setLowLev.shtml">
v5d_setLowLev</a></td>
<td>
Sets the lowest vertical offset, in grid level, for each 3-dimensional gridded variable in a Vis5D+ format file.
</td>
</tr>
<!--v5d_setUnits-->
<tr>
<td valign=top>
<a href="Built-in/v5d_setUnits.shtml">
v5d_setUnits</a></td>
<td>
Sets a name for physical units for a variable in a Vis5D+ format file.
</td>
</tr>
<!--v5d_write-->
<tr>
<td valign=top>
<a href="Built-in/v5d_write.shtml">
v5d_write</a></td>
<td>
Writes compressed data to a Vis5D+ format file.
</td>
</tr>
<!--v5d_write_var-->
<tr>
<td valign=top>
<a href="Built-in/v5d_write_var.shtml">
v5d_write_var</a></td>
<td>
Writes a single 3-dimensional gridded variable to a Vis5D+ format file.
</td>
</tr>
<!--variance-->
<tr>
<td valign=top>
<a href="Built-in/variance.shtml">
variance</a></td>
<td>
Computes an unbiased estimate the variance of all input points.
</td>
</tr>
<!--vhaeC-->
<tr>
<td valign=top>
<a href="Built-in/vhaeC-1.shtml">
vhaeC</a></td>
<td>
Computes vector spherical harmonic analysis of vector fields on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a> via spherical harmonics.
</td>
</tr>
<!--vhaec-->
<tr>
<td valign=top>
<a href="Built-in/vhaec.shtml">
vhaec</a></td>
<td>
Computes vector spherical harmonic analysis of vector fields on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a> via spherical harmonics.
</td>
</tr>
<!--vhagC-->
<tr>
<td valign=top>
<a href="Built-in/vhagC-1.shtml">
vhagC</a></td>
<td>
Computes vector spherical harmonic analysis of vector fields on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a> via spherical harmonics.
</td>
</tr>
<!--vhagc-->
<tr>
<td valign=top>
<a href="Built-in/vhagc.shtml">
vhagc</a></td>
<td>
Computes vector spherical harmonic analysis of vector fields on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a> via spherical harmonics.
</td>
</tr>
<!--vhseC-->
<tr>
<td valign=top>
<a href="Built-in/vhseC-1.shtml">
vhseC</a></td>
<td>
Computes vector spherical harmonic syntheses of vector fields on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a> via spherical harmonics.
</td>
</tr>
<!--vhsec-->
<tr>
<td valign=top>
<a href="Built-in/vhsec.shtml">
vhsec</a></td>
<td>
Computes vector spherical harmonic syntheses of vector fields on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a> via spherical harmonics.
</td>
</tr>
<!--vhsgc-->
<tr>
<td valign=top>
<a href="Built-in/vhsgc.shtml">
vhsgc</a></td>
<td>
Computes vector spherical harmonic syntheses of vector fields on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a> via spherical harmonics.
</td>
</tr>
<!--vhsgC-->
<tr>
<td valign=top>
<a href="Built-in/vhsgC-1.shtml">
vhsgC</a></td>
<td>
Computes vector spherical harmonic syntheses of vector fields on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a> via spherical harmonics.
</td>
</tr>
<!--vibeta-->
<tr>
<td valign=top>
<a href="Built-in/vibeta.shtml">
vibeta</a></td>
<td>
Performs vertical integration using beta factors.
</td>
</tr>
<!--vinth2p-->
<tr>
<td valign=top>
<a href="Built-in/vinth2p.shtml">
vinth2p</a></td>
<td>
Interpolates CAM (Community Atmosphere Model) hybrid coordinates to pressure coordinates.
</td>
</tr>
<!--vinth2p_ecmwf-->
<tr>
<td valign=top>
<a href="Built-in/vinth2p_ecmwf.shtml">
vinth2p_ecmwf</a></td>
<td>
Interpolates CESM hybrid coordinates to pressure coordinates but uses  an ECMWF formulation to extrapolate values below ground.
</td>
</tr>
<!--vinth2p_ecmwf_nodes-->
<tr>
<td valign=top>
<a href="Built-in/vinth2p_ecmwf_nodes.shtml">
vinth2p_ecmwf_nodes</a></td>
<td>
Interpolates CESM hybrid coordinates to pressure coordinates but uses  an ECMWF formulation to extrapolate values below ground.
</td>
</tr>
<!--vinth2p_nodes-->
<tr>
<td valign=top>
<a href="Built-in/vinth2p_nodes.shtml">
vinth2p_nodes</a></td>
<td>
Interpolates CESM hybrid coordinates to pressure coordinates on an unstructured grid.
</td>
</tr>
<!--vintp2p_ecmwf-->
<tr>
<td valign=top>
<a href="Built-in/vintp2p_ecmwf.shtml">
vintp2p_ecmwf</a></td>
<td>
Interpolates data at multidimensional pressure levels to  constant pressure coordinates and uses  an ECMWF formulation to extrapolate values below ground.
</td>
</tr>
<!--vr2uvf-->
<tr>
<td valign=top>
<a href="Built-in/vr2uvf.shtml">
vr2uvf</a></td>
<td>
Computes the rotational wind components via spherical harmonics, given an array containing relative vorticity on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>.
</td>
</tr>
<!--vr2uvF-->
<tr>
<td valign=top>
<a href="Built-in/vr2uvF-1.shtml">
vr2uvF</a></td>
<td>
Computes the rotational wind components via spherical harmonics, given an array containing relative vorticity on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>.
</td>
</tr>
<!--vr2uvF_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/vr2uvF_Wrap.shtml">
vr2uvF_Wrap</a></td>
<td>
Computes the rotational wind components via spherical harmonics, given an array containing relative vorticity on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a> (retains metadata).
</td>
</tr>
<!--vr2uvg-->
<tr>
<td valign=top>
<a href="Built-in/vr2uvg.shtml">
vr2uvg</a></td>
<td>
Computes the rotational wind components via spherical harmonics, given an array containing relative vorticity on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>.
</td>
</tr>
<!--vr2uvG-->
<tr>
<td valign=top>
<a href="Built-in/vr2uvG-1.shtml">
vr2uvG</a></td>
<td>
Computes the rotational wind components via spherical harmonics, given an array containing relative vorticity on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>.
</td>
</tr>
<!--vr2uvG_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/vr2uvG_Wrap.shtml">
vr2uvG_Wrap</a></td>
<td>
Computes the rotational wind components via spherical harmonics, given an array containing relative vorticity on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a> (retains metadata).
</td>
</tr>
<!--vrdv2uvf-->
<tr>
<td valign=top>
<a href="Built-in/vrdv2uvf.shtml">
vrdv2uvf</a></td>
<td>
Computes the wind components via spherical harmonics, given vorticity and divergence on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>.
</td>
</tr>
<!--vrdv2uvF-->
<tr>
<td valign=top>
<a href="Built-in/vrdv2uvF-1.shtml">
vrdv2uvF</a></td>
<td>
Computes the wind components via spherical harmonics, given vorticity and divergence on a <a href="sphpk_grids.shtml#FixedGrids">fixed grid</a>.
</td>
</tr>
<!--vrdv2uvg-->
<tr>
<td valign=top>
<a href="Built-in/vrdv2uvg.shtml">
vrdv2uvg</a></td>
<td>
Computes the wind components via spherical harmonics, given vorticity and divergence on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>.
</td>
</tr>
<!--vrdv2uvG-->
<tr>
<td valign=top>
<a href="Built-in/vrdv2uvG-1.shtml">
vrdv2uvG</a></td>
<td>
Computes the wind components via spherical harmonics, given vorticity and divergence on a <a href="sphpk_grids.shtml#GaussianGrids">gaussian grid</a>.
</td>
</tr>
<!--w_to_omega-->
<tr>
<td valign=top><a name="W"></a>
<a href="Contributed/w_to_omega.shtml">
w_to_omega</a></td>
<td>
Convert vertical velocity with units (m/s) to Pa/s.
</td>
</tr>
<!--wallClockElapseTime-->
<tr>
<td valign=top>
<a href="Contributed/wallClockElapseTime.shtml">
wallClockElapseTime</a></td>
<td>
Calculates and prints elapsed 'wall clock' time.
</td>
</tr>
<!--wave_number_spc-->
<tr>
<td valign=top>
<a href="Contributed/wave_number_spc.shtml">
wave_number_spc</a></td>
<td>
Computes the total power spectrum as a function of latitudinal wave number.
</td>
</tr>
<!--wavelet-->
<tr>
<td valign=top>
<a href="Built-in/wavelet.shtml">
wavelet</a></td>
<td>
Calculates the wavelet transform of a time series and significance levels.
</td>
</tr>
<!--wavelet_default-->
<tr>
<td valign=top>
<a href="Built-in/wavelet_default.shtml">
wavelet_default</a></td>
<td>
Calculates the wavelet transform of a time series and significance levels.
</td>
</tr>
<!--weibull-->
<tr>
<td valign=top>
<a href="Built-in/weibull.shtml">
weibull</a></td>
<td>
Derives the shape and scale parameters for the Weibull distribution via maximum likelihood estimates.
</td>
</tr>
<!--wgt_area_smooth-->
<tr>
<td valign=top>
<a href="Built-in/wgt_area_smooth.shtml">
wgt_area_smooth</a></td>
<td>
Smooths an array of data using a 5-point 2D area-weighted smoothing algorithm.
</td>
</tr>
<!--wgt_areaave-->
<tr>
<td valign=top>
<a href="Built-in/wgt_areaave.shtml">
wgt_areaave</a></td>
<td>
Calculates the area average of a quantity using weights.
</td>
</tr>
<!--wgt_areaave2-->
<tr>
<td valign=top>
<a href="Built-in/wgt_areaave2.shtml">
wgt_areaave2</a></td>
<td>
Calculates the area average of a quantity using two-dimensional weights.
</td>
</tr>
<!--wgt_areaave_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/wgt_areaave_Wrap.shtml">
wgt_areaave_Wrap</a></td>
<td>
Calculates the area average of a quantity using weights and retains metadata.
</td>
</tr>
<!--wgt_arearmse-->
<tr>
<td valign=top>
<a href="Built-in/wgt_arearmse.shtml">
wgt_arearmse</a></td>
<td>
Calculates a weighted area root-mean-square-difference between two variables.
</td>
</tr>
<!--wgt_arearmse2-->
<tr>
<td valign=top>
<a href="Built-in/wgt_arearmse2.shtml">
wgt_arearmse2</a></td>
<td>
Calculates a weighted area root-mean-square-difference (rmse) between two variables using two-dimensional weights.
</td>
</tr>
<!--wgt_areasum2-->
<tr>
<td valign=top>
<a href="Built-in/wgt_areasum2.shtml">
wgt_areasum2</a></td>
<td>
Calculates the area sum (total) of a quantity using two-dimensional weights.
</td>
</tr>
<!--wgt_runave-->
<tr>
<td valign=top>
<a href="Built-in/wgt_runave.shtml">
wgt_runave</a></td>
<td>
Calculates a weighted running average across the rightmost dimension.
</td>
</tr>
<!--wgt_runave_leftdim-->
<tr>
<td valign=top>
<a href="Contributed/wgt_runave_leftdim.shtml">
wgt_runave_leftdim</a></td>
<td>
Calculate a weighted running average over the <i>leftmost</i> dimenaion (usually, "time")  and return in the original order with meta data.
</td>
</tr>
<!--wgt_runave_n-->
<tr>
<td valign=top>
<a href="Built-in/wgt_runave_n.shtml">
wgt_runave_n</a></td>
<td>
Calculates a weighted running average across the given dimension.
</td>
</tr>
<!--wgt_runave_n_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/wgt_runave_n_Wrap.shtml">
wgt_runave_n_Wrap</a></td>
<td>
Calculates a weighted running average on the given dimension and retains metadata.
</td>
</tr>
<!--wgt_runave_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/wgt_runave_Wrap.shtml">
wgt_runave_Wrap</a></td>
<td>
Calculates a weighted running average on the rightmost dimension and retains metadata.
</td>
</tr>
<!--wgt_vert_avg_beta-->
<tr>
<td valign=top>
<a href="Built-in/wgt_vert_avg_beta.shtml">
wgt_vert_avg_beta</a></td>
<td>
Computes weighted vertical average or sum using pressure thickness and beta factors.
</td>
</tr>
<!--wgt_vertical_n-->
<tr>
<td valign=top>
<a href="Contributed/wgt_vertical_n.shtml">
wgt_vertical_n</a></td>
<td>
Calculate a weighted vertical sum (integral) or average.
</td>
</tr>
<!--wgt_volave-->
<tr>
<td valign=top>
<a href="Built-in/wgt_volave.shtml">
wgt_volave</a></td>
<td>
Calculates the volume average of a quantity using weights.
</td>
</tr>
<!--wgt_volave_ccm-->
<tr>
<td valign=top>
<a href="Built-in/wgt_volave_ccm.shtml">
wgt_volave_ccm</a></td>
<td>
Calculates the volume average of a quantity from the CCM using weights.
</td>
</tr>
<!--wgt_volrmse-->
<tr>
<td valign=top>
<a href="Built-in/wgt_volrmse.shtml">
wgt_volrmse</a></td>
<td>
Calculates a weighted volume root-mean-square-difference between two variables.
</td>
</tr>
<!--wgt_volrmse_ccm-->
<tr>
<td valign=top>
<a href="Built-in/wgt_volrmse_ccm.shtml">
wgt_volrmse_ccm</a></td>
<td>
Calculates a weighted volume root-mean-square-difference between two variables from the CCM.
</td>
</tr>
<!--where-->
<tr>
<td valign=top>
<a href="Built-in/where.shtml">
where</a></td>
<td>
Performs array assignments based on a conditional array.
</td>
</tr>
<!--wind_component-->
<tr>
<td valign=top>
<a href="Contributed/wind_component.shtml">
wind_component</a></td>
<td>
Calculate zonal and meridional wind components from wind speed and wind direction.
</td>
</tr>
<!--wind_direction-->
<tr>
<td valign=top>
<a href="Contributed/wind_direction.shtml">
wind_direction</a></td>
<td>
Calculate meteorological wind direction from zonal and meridional wind components.
</td>
</tr>
<!--WindRoseBasic-->
<tr>
<td valign=top>
<a href="Wind_rose/WindRoseBasic.shtml">
WindRoseBasic</a></td>
<td>
Plots a basic wind rose.
</td>
</tr>
<!--WindRoseColor-->
<tr>
<td valign=top>
<a href="Wind_rose/WindRoseColor.shtml">
WindRoseColor</a></td>
<td>
Plot a wind rose diagram where different colors are used to differentiate speed ranges.
</td>
</tr>
<!--WindRoseThickLine-->
<tr>
<td valign=top>
<a href="Wind_rose/WindRoseThickLine.shtml">
WindRoseThickLine</a></td>
<td>
Plot a black and white wind rose diagram where different line thicknesses are used to differentiate speed ranges.
</td>
</tr>
<!--wk_smooth121-->
<tr>
<td valign=top>
<a href="Built-in/wk_smooth121.shtml">
wk_smooth121</a></td>
<td>
Performs a specialized 1-2-1 filter for Wheeler-Kiladis plots.
</td>
</tr>
<!--wkSpaceTime-->
<tr>
<td valign=top>
<a href="Diagnostics/wkSpaceTime.shtml">
wkSpaceTime</a></td>
<td>
Calculates Wheeler-Kiladis space-time spectra.
</td>
</tr>
<!--wkSpaceTime_cam-->
<tr>
<td valign=top>
<a href="Diagnostics/wkSpaceTime_cam.shtml">
wkSpaceTime_cam</a></td>
<td>
Calculates Wheeler-Kiladis space-time spectra using a generic CAM interface.
</td>
</tr>
<!--wmbarb-->
<tr>
<td valign=top>
<a href="Built-in/wmbarb.shtml">
wmbarb</a></td>
<td>
Draws wind barbs on the given workstation.
</td>
</tr>
<!--wmbarbmap-->
<tr>
<td valign=top>
<a href="Built-in/wmbarbmap.shtml">
wmbarbmap</a></td>
<td>
Draws wind barbs over maps.
</td>
</tr>
<!--wmdrft-->
<tr>
<td valign=top>
<a href="Built-in/wmdrft.shtml">
wmdrft</a></td>
<td>
Draws weather front lines on the given workstation.
</td>
</tr>
<!--wmgetp-->
<tr>
<td valign=top>
<a href="Built-in/wmgetp.shtml">
wmgetp</a></td>
<td>
Retrieves parameter values for selected <a href="http://www.ncarg.ucar.edu//supplements/wmap/index.html">Wmap</a> routines.
</td>
</tr>
<!--wmlabs-->
<tr>
<td valign=top>
<a href="Built-in/wmlabs.shtml">
wmlabs</a></td>
<td>
Plots special symbols and icons for daily weather.
</td>
</tr>
<!--wmsetp-->
<tr>
<td valign=top>
<a href="Built-in/wmsetp.shtml">
wmsetp</a></td>
<td>
Sets parameter values for selected <a href="http://www.ncarg.ucar.edu//supplements/wmap/index.html">Wmap</a> routines.
</td>
</tr>
<!--wmstnm-->
<tr>
<td valign=top>
<a href="Built-in/wmstnm.shtml">
wmstnm</a></td>
<td>
Plots station model data on the given workstation.
</td>
</tr>
<!--wmvect-->
<tr>
<td valign=top>
<a href="Built-in/wmvect.shtml">
wmvect</a></td>
<td>
Draws vectors on the given workstation.
</td>
</tr>
<!--wmvectmap-->
<tr>
<td valign=top>
<a href="Built-in/wmvectmap.shtml">
wmvectmap</a></td>
<td>
Draws vectors over maps.
</td>
</tr>
<!--wmvlbl-->
<tr>
<td valign=top>
<a href="Built-in/wmvlbl.shtml">
wmvlbl</a></td>
<td>
Draws an informational label box for plots produced by <a href="Built-in/wmvect.shtml"><strong>wmvect</strong></a> or <a href="Built-in/wmvectmap.shtml"><strong>wmvectmap</strong></a>.
</td>
</tr>
<!--wrf_avo-->
<tr>
<td valign=top>
<a href="Built-in/wrf_avo.shtml">
wrf_avo</a></td>
<td>
Calculates absolute vorticity from WRF model output.
</td>
</tr>
<!--wrf_cape_2d-->
<tr>
<td valign=top>
<a href="Built-in/wrf_cape_2d.shtml">
wrf_cape_2d</a></td>
<td>
Computes maximum convective available potential energy (CAPE), maximum convective inhibition (CIN), lifted condensation level (LCL), and level of free convection (LFC).
</td>
</tr>
<!--wrf_cape_3d-->
<tr>
<td valign=top>
<a href="Built-in/wrf_cape_3d.shtml">
wrf_cape_3d</a></td>
<td>
Computes convective available potential energy (CAPE) and convective inhibition (CIN).
</td>
</tr>
<!--wrf_contour-->
<tr>
<td valign=top>
<a href="WRF_arw/wrf_contour.shtml">
wrf_contour</a></td>
<td>
Creates a contour plot from ARW WRF model output.
</td>
</tr>
<!--wrf_dbz-->
<tr>
<td valign=top>
<a href="Built-in/wrf_dbz.shtml">
wrf_dbz</a></td>
<td>
Calculates simulated equivalent radar reflectivity factor [dBZ] from WRF model output.
</td>
</tr>
<!--wrf_eth-->
<tr>
<td valign=top>
<a href="Built-in/wrf_eth.shtml">
wrf_eth</a></td>
<td>
Calculates equivalent potential temperature from WRF model output.
</td>
</tr>
<!--wrf_helicity-->
<tr>
<td valign=top>
<a href="Built-in/wrf_helicity.shtml">
wrf_helicity</a></td>
<td>
Calculates storm relative helicity from WRF model output.
</td>
</tr>
<!--wrf_ij_to_ll-->
<tr>
<td valign=top>
<a href="Built-in/wrf_ij_to_ll.shtml">
wrf_ij_to_ll</a></td>
<td>
Finds the nearest longitude, latitude locations to the specified model grid indices (i,j).
</td>
</tr>
<!--wrf_interp_1d-->
<tr>
<td valign=top>
<a href="Built-in/wrf_interp_1d.shtml">
wrf_interp_1d</a></td>
<td>
Linearly interpolates a one-dimensional variable in the vertical.
</td>
</tr>
<!--wrf_interp_2d_xy-->
<tr>
<td valign=top>
<a href="Built-in/wrf_interp_2d_xy.shtml">
wrf_interp_2d_xy</a></td>
<td>
Extracts a cross section from a given input field.
</td>
</tr>
<!--wrf_interp_3d_z-->
<tr>
<td valign=top>
<a href="Built-in/wrf_interp_3d_z.shtml">
wrf_interp_3d_z</a></td>
<td>
Interpolates to a specified pressure/height level.
</td>
</tr>
<!--wrf_latlon_to_ij-->
<tr>
<td valign=top>
<a href="Built-in/wrf_latlon_to_ij.shtml">
wrf_latlon_to_ij</a></td>
<td>
Finds the nearest model grid indices (i,j) to the specific location(s) in latitude and longitude (deprecated).
</td>
</tr>
<!--wrf_ll_to_ij-->
<tr>
<td valign=top>
<a href="Built-in/wrf_ll_to_ij.shtml">
wrf_ll_to_ij</a></td>
<td>
Finds the nearest model grid indices (i,j) to the specified location(s) in longitude and latitude.
</td>
</tr>
<!--wrf_map-->
<tr>
<td valign=top>
<a href="WRF_arw/wrf_map.shtml">
wrf_map</a></td>
<td>
Creates a map background for ARW WRF model data.
</td>
</tr>
<!--wrf_map_overlay-->
<tr>
<td valign=top>
<a href="WRF_arw/wrf_map_overlay.shtml">
wrf_map_overlay</a></td>
<td>
Overlays different plot id's over a map background (deprecated  in <a href="../../prev_releases.shtml#5.1.0">version 5.1.0</a>).
</td>
</tr>
<!--wrf_map_overlays-->
<tr>
<td valign=top>
<a href="WRF_arw/wrf_map_overlays.shtml">
wrf_map_overlays</a></td>
<td>
Overlays different contour and vector plots over a WRF-ARW map background.
</td>
</tr>
<!--wrf_map_resources-->
<tr>
<td valign=top>
<a href="WRF_arw/wrf_map_resources.shtml">
wrf_map_resources</a></td>
<td>
Sets map plotting resources based on an input WRF-ARW file.
</td>
</tr>
<!--wrf_map_zoom-->
<tr>
<td valign=top>
<a href="WRF_arw/wrf_map_zoom.shtml">
wrf_map_zoom</a></td>
<td>
Zooms into a portion of the ARW WRF model domain, and creates a map background (deprecated in <a href="../../prev_releases.shtml#5.1.0">version 5.1.0</a>).
</td>
</tr>
<!--wrf_mapres_c-->
<tr>
<td valign=top>
<a href="WRF_contributed/wrf_mapres_c.shtml">
wrf_mapres_c</a></td>
<td>
Sets the appropriate geographical mapping resources based upon WRF file contents. (<font color=red>deprecated</font>)
</td>
</tr>
<!--wrf_omega-->
<tr>
<td valign=top>
<a href="Built-in/wrf_omega.shtml">
wrf_omega</a></td>
<td>
Calculates approximate omega in C, given vertical velocity, water vapor mixing ratio, temperature, and pressure from WRF model output.
</td>
</tr>
<!--wrf_overlay-->
<tr>
<td valign=top>
<a href="WRF_arw/wrf_overlay.shtml">
wrf_overlay</a></td>
<td>
Overlays multiple plots, created from other ARW WRF plot functions (deprecated in <a href="../../prev_releases.shtml#5.1.0">version 5.1.0</a>).
</td>
</tr>
<!--wrf_overlays-->
<tr>
<td valign=top>
<a href="WRF_arw/wrf_overlays.shtml">
wrf_overlays</a></td>
<td>
Overlays multiple plots, created from other ARW WRF plot functions.
</td>
</tr>
<!--wrf_pvo-->
<tr>
<td valign=top>
<a href="Built-in/wrf_pvo.shtml">
wrf_pvo</a></td>
<td>
Calculates potential vorticity from WRF model output.
</td>
</tr>
<!--wrf_rh-->
<tr>
<td valign=top>
<a href="Built-in/wrf_rh.shtml">
wrf_rh</a></td>
<td>
Calculates relative humidity from ARW WRF model output.
</td>
</tr>
<!--wrf_slp-->
<tr>
<td valign=top>
<a href="Built-in/wrf_slp.shtml">
wrf_slp</a></td>
<td>
Calculates sea level pressure from ARW WRF model output.
</td>
</tr>
<!--wrf_smooth_2d-->
<tr>
<td valign=top>
<a href="Built-in/wrf_smooth_2d.shtml">
wrf_smooth_2d</a></td>
<td>
Smooths a given field.
</td>
</tr>
<!--wrf_td-->
<tr>
<td valign=top>
<a href="Built-in/wrf_td.shtml">
wrf_td</a></td>
<td>
Calculates dewpoint temperature in [C] from ARW WRF model output.
</td>
</tr>
<!--wrf_times_c-->
<tr>
<td valign=top>
<a href="WRF_contributed/wrf_times_c.shtml">
wrf_times_c</a></td>
<td>
Converts WRF variable "Times" which is of type character to user specified numeric units.
</td>
</tr>
<!--wrf_tk-->
<tr>
<td valign=top>
<a href="Built-in/wrf_tk.shtml">
wrf_tk</a></td>
<td>
Calculates temperature in [K] from ARW WRF model output.
</td>
</tr>
<!--wrf_updraft_helicity-->
<tr>
<td valign=top>
<a href="Built-in/wrf_updraft_helicity.shtml">
wrf_updraft_helicity</a></td>
<td>
Calculates updraft helicity from WRF model output.
</td>
</tr>
<!--wrf_user_getvar-->
<tr>
<td valign=top>
<a href="WRF_arw/wrf_user_getvar.shtml">
wrf_user_getvar</a></td>
<td>
Extracts data from ARW WRF model output, and does basic diagnostics calculations.
</td>
</tr>
<!--wrf_user_ij_to_ll-->
<tr>
<td valign=top>
<a href="WRF_arw/wrf_user_ij_to_ll.shtml">
wrf_user_ij_to_ll</a></td>
<td>
Finds the nearest longitude, latitude locations to the specified model grid indices (i,j).
</td>
</tr>
<!--wrf_user_intrp2d-->
<tr>
<td valign=top>
<a href="WRF_arw/wrf_user_intrp2d.shtml">
wrf_user_intrp2d</a></td>
<td>
Interpolates ARW WRF 2D model data along a give line.
</td>
</tr>
<!--wrf_user_intrp3d-->
<tr>
<td valign=top>
<a href="WRF_arw/wrf_user_intrp3d.shtml">
wrf_user_intrp3d</a></td>
<td>
Interpolates ARW WRF model data vertically or horizontally.
</td>
</tr>
<!--wrf_user_latlon_to_ij-->
<tr>
<td valign=top>
<a href="WRF_arw/wrf_user_latlon_to_ij.shtml">
wrf_user_latlon_to_ij</a></td>
<td>
Finds the nearest model grid indices (i,j) to the specific location (deprecated).
</td>
</tr>
<!--wrf_user_list_times-->
<tr>
<td valign=top>
<a href="WRF_arw/wrf_user_list_times.shtml">
wrf_user_list_times</a></td>
<td>
Extracts the list of available times in the ARW WRF model output.
</td>
</tr>
<!--wrf_user_ll_to_ij-->
<tr>
<td valign=top>
<a href="WRF_arw/wrf_user_ll_to_ij.shtml">
wrf_user_ll_to_ij</a></td>
<td>
Finds the nearest model grid indices (i,j) to the specified location(s) in longitude and latitude.
</td>
</tr>
<!--wrf_user_unstagger-->
<tr>
<td valign=top>
<a href="WRF_arw/wrf_user_unstagger.shtml">
wrf_user_unstagger</a></td>
<td>
Unstaggers an input variable along a specified dimension.
</td>
</tr>
<!--wrf_user_vert_interp-->
<tr>
<td valign=top>
<a href="WRF_arw/wrf_user_vert_interp.shtml">
wrf_user_vert_interp</a></td>
<td>
Vertically interpolates ARW WRF variables given the type of surface and a set of new levels.
</td>
</tr>
<!--wrf_uvmet-->
<tr>
<td valign=top>
<a href="Built-in/wrf_uvmet.shtml">
wrf_uvmet</a></td>
<td>
Rotates u,v components of the wind to earth coordinates.
</td>
</tr>
<!--wrf_vector-->
<tr>
<td valign=top>
<a href="WRF_arw/wrf_vector.shtml">
wrf_vector</a></td>
<td>
Creates a vector plot from ARW WRF model output.
</td>
</tr>
<!--wrf_virtual_temp-->
<tr>
<td valign=top>
<a href="Built-in/wrf_virtual_temp.shtml">
wrf_virtual_temp</a></td>
<td>
Calculates virtual temperature, given temperature and mixing ratio from WRF model output.
</td>
</tr>
<!--wrf_wetbulb-->
<tr>
<td valign=top>
<a href="Built-in/wrf_wetbulb.shtml">
wrf_wetbulb</a></td>
<td>
Calculates wet bulb temperature in K, given pressure in temperature in K and mixing ratio in kg/kg from WRF model output.
</td>
</tr>
<!--wrf_wps_close_int-->
<tr>
<td valign=top>
<a href="Built-in/wrf_wps_close_int.shtml">
wrf_wps_close_int</a></td>
<td>
Closes a currently open WPS intermediate file.
</td>
</tr>
<!--wrf_wps_open_int-->
<tr>
<td valign=top>
<a href="Built-in/wrf_wps_open_int.shtml">
wrf_wps_open_int</a></td>
<td>
Opens a WPS intermediate file and returns a status.
</td>
</tr>
<!--wrf_wps_rddata_int-->
<tr>
<td valign=top>
<a href="Built-in/wrf_wps_rddata_int.shtml">
wrf_wps_rddata_int</a></td>
<td>
Reads a 2D field from an open WPS intermediate file.
</td>
</tr>
<!--wrf_wps_rdhead_int-->
<tr>
<td valign=top>
<a href="Built-in/wrf_wps_rdhead_int.shtml">
wrf_wps_rdhead_int</a></td>
<td>
Reads header information for the current field of an open WPS intermediate file.
</td>
</tr>
<!--wrf_wps_read_int-->
<tr>
<td valign=top>
<a href="Built-in/wrf_wps_read_int.shtml">
wrf_wps_read_int</a></td>
<td>
Reads data from a WPS intermediate file.
</td>
</tr>
<!--wrf_wps_write_int-->
<tr>
<td valign=top>
<a href="Built-in/wrf_wps_write_int.shtml">
wrf_wps_write_int</a></td>
<td>
Writes data to a WPS intermediate file.
</td>
</tr>
<!--write_matrix-->
<tr>
<td valign=top>
<a href="Built-in/write_matrix.shtml">
write_matrix</a></td>
<td>
Writes nicely-formatted integer, float, or double precision two-dimensional (2D) arrays to standard out or to a file.
</td>
</tr>
<!--write_table-->
<tr>
<td valign=top>
<a href="Built-in/write_table.shtml">
write_table</a></td>
<td>
Writes all elements from a list (to a file).
</td>
</tr>
<!--yiqrgb-->
<tr>
<td valign=top><a name="Y"></a>
<a href="Built-in/yiqrgb.shtml">
yiqrgb</a></td>
<td>
Converts YIQ color values to RGB.
</td>
</tr>
<!--yyyyddd_to_yyyymmdd-->
<tr>
<td valign=top>
<a href="Contributed/yyyyddd_to_yyyymmdd.shtml">
yyyyddd_to_yyyymmdd</a></td>
<td>
Given concatenated year and day-of-year (yyyyddd) create a one-dimensional array containing concatenated year, month and day-of-month [yyyymmdd] values.
</td>
</tr>
<!--yyyymm_time-->
<tr>
<td valign=top>
<a href="Contributed/yyyymm_time.shtml">
yyyymm_time</a></td>
<td>
Creates a one-dimensional array containing year-month [yyyymm] values.
</td>
</tr>
<!--yyyymm_to_yyyyfrac-->
<tr>
<td valign=top>
<a href="Contributed/yyyymm_to_yyyyfrac.shtml">
yyyymm_to_yyyyfrac</a></td>
<td>
Converts a one dimensional array containing yyyymm values to yyyy and fractional year.
</td>
</tr>
<!--yyyymmdd_time-->
<tr>
<td valign=top>
<a href="Contributed/yyyymmdd_time.shtml">
yyyymmdd_time</a></td>
<td>
Creates a one-dimensional array containing year-month-day [yyyymmdd] values.
</td>
</tr>
<!--yyyymmdd_to_yyyyddd-->
<tr>
<td valign=top>
<a href="Contributed/yyyymmdd_to_yyyyddd.shtml">
yyyymmdd_to_yyyyddd</a></td>
<td>
Given concatenated year-month-day_of_month (yyyymmdd) create a one-dimensional array containing concatenated year and day_of_year [yyyyddd] values.
</td>
</tr>
<!--yyyymmdd_to_yyyyfrac-->
<tr>
<td valign=top>
<a href="Contributed/yyyymmdd_to_yyyyfrac.shtml">
yyyymmdd_to_yyyyfrac</a></td>
<td>
Converts a one dimensional array containing yyyymmdd values to yyyy and fractional year.
</td>
</tr>
<!--yyyymmddhh_time-->
<tr>
<td valign=top>
<a href="Contributed/yyyymmddhh_time.shtml">
yyyymmddhh_time</a></td>
<td>
Creates a one-dimensional array containing year-month-day [yyyymmddhh] values.
</td>
</tr>
<!--yyyymmddhh_to_yyyyfrac-->
<tr>
<td valign=top>
<a href="Contributed/yyyymmddhh_to_yyyyfrac.shtml">
yyyymmddhh_to_yyyyfrac</a></td>
<td>
Converts a one dimensional array containing yyyymmddhh values to yyyy and fractional year.
</td>
</tr>
<!--z2geouv-->
<tr>
<td valign=top><a name="Z"></a>
<a href="Built-in/z2geouv.shtml">
z2geouv</a></td>
<td>
Computes the geostrophic zonal and meridional wind components  using geopotential height on isobaric levels (rectilinear grid only).
</td>
</tr>
<!--zonal_mpsi-->
<tr>
<td valign=top>
<a href="Built-in/zonal_mpsi.shtml">
zonal_mpsi</a></td>
<td>
Computes a zonal mean meridional stream function.
</td>
</tr>
<!--zonal_mpsi_Wrap-->
<tr>
<td valign=top>
<a href="Contributed/zonal_mpsi_Wrap.shtml">
zonal_mpsi_Wrap</a></td>
<td>
Computes a zonal mean meridional stream function and retains metadata.
</td>
</tr>
<!--zonalAve-->
<tr>
<td valign=top>
<a href="Contributed/zonalAve.shtml">
zonalAve</a></td>
<td>
Computes a zonal average of the input array.
</td>
</tr>

</table><p>
					</div>

					<p>&nbsp;</p>

		<!-- begin footer -->
		<div id="footer">

		<p>&#169;2015 <a href="http://www.ucar.edu">UCAR</a> | <a href="http://www2.ucar.edu/privacy-policy">Privacy Policy</a> | <a href="http://www2.ucar.edu/terms-of-use">Terms of Use</a> 
                   | <a href="mailto:ncladmin@ucar.edu">Contact the Webmaster</a> | <a href="http://www.nsf.gov">Sponsored by NSF</a></p>


		<!-- end footer -->
		</div>

           <br class="clearboth"/>

	   <!-- end content -->
	</div>
<!-- end wrap -->
</div>
</body>
</html>
